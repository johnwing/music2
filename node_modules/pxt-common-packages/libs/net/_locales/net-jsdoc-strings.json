{
  "net": "Networking, WiFi, web requests",
  "net.ControllerSocket.close": "Close the socket, after reading whatever remains",
  "net.ControllerSocket.connect": "Connect the socket to the 'address' (which can be 32bit packed IP or\na hostname string). 'conntype' is an extra that may indicate SSL or not,\ndepending on the underlying interface",
  "net.ControllerSocket.read": "Read up to 'size' bytes from the socket, this may be buffered internally! If 'size' isnt specified, return everything in the buffer.",
  "net.ControllerSocket.readLine": "Attempt to return as many bytes as we can up to but not including '\\r\\n'",
  "net.ControllerSocket.send": "Send some data to the socket",
  "net.ControllerSocket.setTimeout": "Set the read timeout for sockets, if value is 0 it will block",
  "net.Net.scanNetworks": "Scan for APs",
  "net.Response.close": "Close, delete and collect the response data",
  "net.Response.content": "The HTTP content direct from the socket, as bytes",
  "net.Response.text": "The HTTP content, encoded into a string according to the HTTP header encoding",
  "net.del": "Send HTTP DELETE request",
  "net.get": "Send HTTP GET request",
  "net.getJSON": "Send HTTP GET request and return JSON",
  "net.getString": "Send HTTP GET request and return text",
  "net.head": "Send HTTP HEAD request",
  "net.instance": "Gets the current Net instance",
  "net.knownAccessPoints": "Gets the map of SSID -> password pairs",
  "net.logPriority": "Default priority of net log messages",
  "net.patch": "Send HTTP PATCH request",
  "net.ping": "Pings a web site",
  "net.ping|param|dest": "host name",
  "net.post": "Send HTTP POST request",
  "net.put": "Send HTTP PUT request",
  "net.request": "Perform an HTTP request to the given url which we will parse to determine\nwhether to use SSL ('https://') or not. We can also send some provided 'data'\nor a json dictionary which we will stringify. 'headers' is optional HTTP headers\nsent along. 'stream' will determine if we buffer everything, or whether to only\nread only when requested"
}