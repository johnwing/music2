// total=274735 new=94.43% cached=0.00% other=5.57%
(function (ectx) {
'use strict';
const runtime = ectx.runtime;
const oops = ectx.oops;
const doNothing = ectx.doNothing;
const pxsim = ectx.pxsim;
const globals = ectx.globals;
const maybeYield = ectx.maybeYield;
const setupDebugger = ectx.setupDebugger;
const isBreakFrame = ectx.isBreakFrame;
const breakpoint = ectx.breakpoint;
const trace = ectx.trace;
const checkStack = ectx.checkStack;
const leave = ectx.leave;
const checkResumeConsumed = ectx.checkResumeConsumed;
const setupResume = ectx.setupResume;
const setupLambda = ectx.setupLambda;
const checkSubtype = ectx.checkSubtype;
const failedCast = ectx.failedCast;
const buildResume = ectx.buildResume;
const mkVTable = ectx.mkVTable;
const __this = runtime;
const pxtrt = pxsim.pxtrt;
let yieldSteps = 1;
ectx.setupYield(function() { yieldSteps = 100; })
pxsim.setTitle("esp32");
pxsim.setConfigData({}, {});
pxtrt.mapKeyNames = [
 "",
 "MACaddress",
 "_busy",
 "_controller",
 "_cs",
 "_gpio0",
 "_locked",
 "_reset",
 "_sendCommand",
 "_socknum_ll",
 "_spi",
 "_waitResponseCmd",
 "checkData",
 "checkKw",
 "condition",
 "connect",
 "connectAP",
 "controller",
 "deltaTimeMillis",
 "doArray",
 "doNumber",
 "doObject",
 "doString",
 "eid",
 "encryption",
 "error",
 "errorMsg",
 "factory",
 "firmwareVersion",
 "flags",
 "frameCallbacks",
 "frameWorker",
 "framesInSample",
 "getScanNetworks",
 "getTemperature",
 "handler",
 "handlers",
 "hostbyName",
 "idleCallbacks",
 "isConnected",
 "isIdle",
 "key",
 "lock",
 "nextChar",
 "once",
 "ping",
 "prevTimeMillis",
 "ptr",
 "readByte",
 "readSecret",
 "readSecrets",
 "register",
 "registerHandler",
 "reset",
 "rssi",
 "runningCallbacks",
 "s",
 "scanNetworks",
 "sendCommandGetResponse",
 "skipWS",
 "spiTransfer",
 "src",
 "ssid",
 "start",
 "startScanNetworks",
 "status",
 "timeInSample",
 "timeOut",
 "toHex",
 "unlock",
 "value",
 "vid",
 "waitForReady",
 "waitSPIChar",
 "wasConnected",
 "wifiSetNetwork",
 "wifiSetPassphrase"
];
__this.setupPerfCounters([]);
const pxsim_Array__getAt = pxsim.Array_.getAt;
const pxsim_Array__length = pxsim.Array_.length;
const pxsim_Array__mk = pxsim.Array_.mk;
const pxsim_Array__push = pxsim.Array_.push;
const pxsim_Boolean__bang = pxsim.Boolean_.bang;
const pxsim_String__concat = pxsim.String_.concat;
const pxsim_String__stringConv = pxsim.String_.stringConv;
const pxsim_numops_toBool = pxsim.numops.toBool;
const pxsim_numops_toBoolDecr = pxsim.numops.toBoolDecr;
const pxsim_pxtcore_mkAction = pxsim.pxtcore.mkAction;
const pxsim_pxtcore_mkClassInstance = pxsim.pxtcore.mkClassInstance;
const pxsim_pxtrt_ldlocRef = pxsim.pxtrt.ldlocRef;
const pxsim_pxtrt_mapGetByString = pxsim.pxtrt.mapGetByString;
const pxsim_pxtrt_stclo = pxsim.pxtrt.stclo;
const pxsim_pxtrt_stlocRef = pxsim.pxtrt.stlocRef;
const pxsim_Boolean_ = pxsim.Boolean_;
const pxsim_pxtcore = pxsim.pxtcore;
const pxsim_String_ = pxsim.String_;
const pxsim_ImageMethods = pxsim.ImageMethods;
const pxsim_Array_ = pxsim.Array_;
const pxsim_pxtrt = pxsim.pxtrt;
const pxsim_numops = pxsim.numops;


function _main___P140610(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    r0 = (0.5 * 256);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 | 0);
    globals.oneHalfFx8___140706 = (r0);
    globals._pollEventQueue___140814 = (undefined);
    globals._intervals___140821 = (undefined);
    globals.minPriority___140835 = (1);
    r0 = pxsim_Array__mk();
    s.tmp_0 = r0;
    r0 = pxsim_Array__push(s.tmp_0, inline__P140836);
    globals.listeners___140837 = (s.tmp_0);
    globals.RUN_KEY___140997 = ("#run");
    globals.SCOPE_KEY___140998 = ("#scope");
    globals.DEVICE_SECRETS_KEY___140999 = ("#secrets");
    s.tmp_0 = settings_initScopes__P141010_mk(s);
    s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = pxsim_pxtcore_mkClassInstance(settings_SecretStore__C141027_VT);
    s.tmp_0 = r0;
    s.tmp_1 = settings_SecretStore_constructor__P141033_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = globals.DEVICE_SECRETS_KEY___140999;
    s.pc = 2; return s.tmp_1;
  case 2:
    r0 = s.retval;
    globals.deviceSecrets___141035 = (s.tmp_0);
    globals.logPriority___141081 = (-1);
    globals.AP_SECRETS_KEY___141097 = ("wifi");
    r0 = pxsim_pxtcore_mkClassInstance(net_Net__C141089_VT);
    s.tmp_0 = r0;
    s.tmp_1 = net_Net_constructor__P141094_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = esp32_defaultController__P141123;
    s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
    s.tmp_0 = test__P141310_mk(s);
    s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
_main___P140610.info = {"start":0,"length":0,"line":0,"column":0,"endLine":0,"endColumn":0,"fileName":"test.ts","functionName":"<main>","argumentNames":[]}
_main___P140610.continuations = [  ]

function _main___P140610_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: _main___P140610, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
} }





function test__P141310(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.log___141312 = undefined;
    s.esp___141314 = undefined;
    s.log___141312 = (console_log__P140842);
    s.tmp_0 = net_Net_controller__P141090_mk(s);
    r0 = globals.net_Net_instance___141095;
    s.tmp_0.arg0 = r0;
    s.pc = 6; return s.tmp_0;
  case 6:
    r0 = s.retval;
    s.esp___141314 = (r0);
    s.tmp_3 = if_isIdle_1_mk(s);
    s.tmp_3.arg0 = s.esp___141314;
    if (!s.tmp_3.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_3.arg0, "isIdle");
    } else {
    s.tmp_3.fn = s.tmp_3.arg0.vtable.iface["isIdle"];
    if (s.tmp_3.fn == null) { s.retval = s.tmp_3.arg0.fields["isIdle"]; }
    else { s.pc = 7; return s.tmp_3; }
    }
  case 7:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    { step = 5; continue; }
  case 1:
  case 2:
    s.tmp_4 = lambda_2_mk(s);
    s.tmp_4.argL = s.log___141312;
    s.tmp_7 = if_firmwareVersion_1_mk(s);
    s.tmp_7.arg0 = s.esp___141314;
    if (!s.tmp_7.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_7.arg0, "firmwareVersion");
    } else {
    s.tmp_7.fn = s.tmp_7.arg0.vtable.iface["firmwareVersion"];
    if (s.tmp_7.fn == null) { s.retval = s.tmp_7.arg0.fields["firmwareVersion"]; }
    else { s.pc = 9; return s.tmp_7; }
    }
  case 9:
    r0 = s.retval;
    s.tmp_6 = r0;
    if ((s.tmp_6) && (s.tmp_6).vtable) {
    setupResume(s, 10);
    pxsim_String__stringConv(s.tmp_6);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_6) + ""; }
  case 10:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = pxsim_String__concat("Firmware vers. ", s.tmp_5);
    s.tmp_4.arg0 = r0;
    setupLambda(s.tmp_4, s.tmp_4.argL);
    s.pc = 8; return s.tmp_4;
  case 8:
    r0 = s.retval;
    s.tmp_0 = lambda_2_mk(s);
    s.tmp_0.argL = s.log___141312;
    s.tmp_3 = lambda_1_mk(s);
    s.tmp_4 = if_toHex_1_mk(s);
    s.tmp_5 = if_MACaddress_1_mk(s);
    s.tmp_5.arg0 = s.esp___141314;
    if (!s.tmp_5.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_5.arg0, "MACaddress");
    } else {
    s.tmp_5.fn = s.tmp_5.arg0.vtable.iface["MACaddress"];
    if (s.tmp_5.fn == null) { s.retval = s.tmp_5.arg0.fields["MACaddress"]; }
    else { s.pc = 14; return s.tmp_5; }
    }
  case 14:
    r0 = s.retval;
    s.tmp_4.arg0 = r0;
    if (!s.tmp_4.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_4.arg0, "toHex");
    } else {
    s.tmp_4.fn = s.tmp_4.arg0.vtable.iface["toHex"];
    if (s.tmp_4.fn == null) { s.retval = s.tmp_4.arg0.fields["toHex"]; }
    else { s.pc = 13; return s.tmp_4; }
    }
  case 13:
    r0 = s.retval;
    s.tmp_3.argL = r0;
    setupLambda(s.tmp_3, s.tmp_3.argL);
    s.pc = 12; return s.tmp_3;
  case 12:
    r0 = s.retval;
    s.tmp_2 = r0;
    if ((s.tmp_2) && (s.tmp_2).vtable) {
    setupResume(s, 15);
    pxsim_String__stringConv(s.tmp_2);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_2) + ""; }
  case 15:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim_String__concat("MAC addr: ", s.tmp_1);
    s.tmp_0.arg0 = r0;
    setupLambda(s.tmp_0, s.tmp_0.argL);
    s.pc = 11; return s.tmp_0;
  case 11:
    r0 = s.retval;
    s.tmp_0 = lambda_2_mk(s);
    s.tmp_0.argL = s.log___141312;
    s.tmp_3 = lambda_1_mk(s);
    s.tmp_4 = if_getTemperature_1_mk(s);
    s.tmp_4.arg0 = s.esp___141314;
    if (!s.tmp_4.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_4.arg0, "getTemperature");
    } else {
    s.tmp_4.fn = s.tmp_4.arg0.vtable.iface["getTemperature"];
    if (s.tmp_4.fn == null) { s.retval = s.tmp_4.arg0.fields["getTemperature"]; }
    else { s.pc = 18; return s.tmp_4; }
    }
  case 18:
    r0 = s.retval;
    s.tmp_3.argL = r0;
    setupLambda(s.tmp_3, s.tmp_3.argL);
    s.pc = 17; return s.tmp_3;
  case 17:
    r0 = s.retval;
    s.tmp_2 = r0;
    if ((s.tmp_2) && (s.tmp_2).vtable) {
    setupResume(s, 19);
    pxsim_String__stringConv(s.tmp_2);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_2) + ""; }
  case 19:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim_String__concat("Temp: ", s.tmp_1);
    s.tmp_0.arg0 = r0;
    setupLambda(s.tmp_0, s.tmp_0.argL);
    s.pc = 16; return s.tmp_0;
  case 16:
    r0 = s.retval;
    s.tmp_3 = lambda_1_mk(s);
    s.tmp_4 = if_connect_1_mk(s);
    s.tmp_4.arg0 = s.esp___141314;
    if (!s.tmp_4.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_4.arg0, "connect");
    } else {
    s.tmp_4.fn = s.tmp_4.arg0.vtable.iface["connect"];
    if (s.tmp_4.fn == null) { s.retval = s.tmp_4.arg0.fields["connect"]; }
    else { s.pc = 21; return s.tmp_4; }
    }
  case 21:
    r0 = s.retval;
    s.tmp_3.argL = r0;
    setupLambda(s.tmp_3, s.tmp_3.argL);
    s.pc = 20; return s.tmp_3;
  case 20:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.tmp_5 = lambda_2_mk(s);
    s.tmp_5.argL = s.log___141312;
    s.tmp_5.arg0 = "can't connect";
    setupLambda(s.tmp_5, s.tmp_5.argL);
    s.pc = 22; return s.tmp_5;
  case 22:
    r0 = s.retval;
    { step = 5; continue; }
  case 3:
  case 4:
    s.tmp_0 = lambda_2_mk(s);
    s.tmp_0.argL = s.log___141312;
    s.tmp_3 = lambda_2_mk(s);
    s.tmp_4 = if_ping_1_mk(s);
    s.tmp_4.arg0 = s.esp___141314;
    if (!s.tmp_4.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_4.arg0, "ping");
    } else {
    s.tmp_4.fn = s.tmp_4.arg0.vtable.iface["ping"];
    if (s.tmp_4.fn == null) { s.retval = s.tmp_4.arg0.fields["ping"]; }
    else { s.pc = 25; return s.tmp_4; }
    }
  case 25:
    r0 = s.retval;
    s.tmp_3.argL = r0;
    s.tmp_3.arg0 = "bing.com";
    setupLambda(s.tmp_3, s.tmp_3.argL);
    s.pc = 24; return s.tmp_3;
  case 24:
    r0 = s.retval;
    s.tmp_2 = r0;
    if ((s.tmp_2) && (s.tmp_2).vtable) {
    setupResume(s, 26);
    pxsim_String__stringConv(s.tmp_2);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_2) + ""; }
  case 26:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim_String__concat("ping: ", s.tmp_1);
    s.tmp_0.arg0 = r0;
    setupLambda(s.tmp_0, s.tmp_0.argL);
    s.pc = 23; return s.tmp_0;
  case 23:
    r0 = s.retval;
  case 5:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
test__P141310.info = {"start":0,"length":387,"line":0,"column":0,"endLine":18,"endColumn":1,"fileName":"test.ts","functionName":"test","argumentNames":[]}

function test__P141310_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: test__P141310, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  log___141312: undefined,
  esp___141314: undefined,
} }





function net_instance__P141096(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    r0 = globals.net_Net_instance___141095;
    return leave(s, r0)
  default: oops()
} } }
net_instance__P141096.info = {"start":2869,"length":72,"line":99,"column":4,"endLine":101,"endColumn":5,"fileName":"pxt_modules/net/net.ts","functionName":"instance","argumentNames":[]}

function net_instance__P141096_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: net_instance__P141096, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
} }





function net_Net_controller__P141090(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, net_Net__C141089_VT)) failedCast(r0);
    r0 = s.arg0.fields["_controller"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 === undefined);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.tmp_2 = net_log__P141082_mk(s);
    s.tmp_2.arg0 = "init controller";
    s.pc = 5; return s.tmp_2;
  case 5:
    r0 = s.retval;
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = lambda_1_mk(s);
    r0 = s.arg0.fields["factory"];
    s.tmp_2.argL = r0;
    setupLambda(s.tmp_2, s.tmp_2.argL);
    s.pc = 6; return s.tmp_2;
  case 6:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_controller"] = (s.tmp_1);
    r0 = s.arg0.fields["_controller"];
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.tmp_3 = net_log__P141082_mk(s);
    s.tmp_3.arg0 = "controller not found";
    s.pc = 7; return s.tmp_3;
  case 7:
    r0 = s.retval;
    r0 = (s.arg0).fields["_controller"] = (null);
  case 1:
  case 2:
  case 3:
  case 4:
    r0 = s.arg0.fields["_controller"];
    return leave(s, r0)
  default: oops()
} } }
net_Net_controller__P141090.info = {"start":1536,"length":395,"line":55,"column":8,"endLine":65,"endColumn":9,"fileName":"pxt_modules/net/net.ts","functionName":"controller","argumentNames":["this"]}

function net_Net_controller__P141090_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: net_Net_controller__P141090, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
} }





function net_log__P141082(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = console_add__P140838_mk(s);
    s.tmp_0.arg0 = globals.logPriority___141081;
    if ((s.arg0) && (s.arg0).vtable) {
    setupResume(s, 2);
    pxsim_String__stringConv(s.arg0);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.arg0) + ""; }
  case 2:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim_String__concat("net:", s.tmp_1);
    s.tmp_0.arg1 = r0;
    s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
net_log__P141082.info = {"start":238,"length":88,"line":11,"column":4,"endLine":13,"endColumn":5,"fileName":"pxt_modules/net/net.ts","functionName":"log","argumentNames":["msg"]}

function net_log__P141082_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: net_log__P141082, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function console_add__P140838(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.i___141407 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = (s.arg0 < globals.minPriority___140835);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    { step = 5; continue; }
  case 1:
  case 2:
    if ((s.arg1) && (s.arg1).vtable) {
    setupResume(s, 6);
    pxsim_String__stringConv(s.arg1);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.arg1) + ""; }
  case 6:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim_String__concat(s.tmp_1, "\n");
    s.arg1 = (r0);
    s.i___141407 = (0);
  case 3:
    s.tmp_1 = r0 = s.i___141407;
    r0 = pxsim_Array__length(globals.listeners___140837);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 4; continue; }
    s.tmp_3 = lambda_3_mk(s);
    r0 = pxsim_Array__getAt(globals.listeners___140837, s.i___141407);
    s.tmp_3.argL = r0;
    s.tmp_3.arg0 = s.arg0;
    s.tmp_3.arg1 = s.arg1;
    setupLambda(s.tmp_3, s.tmp_3.argL);
    s.pc = 7; return s.tmp_3;
  case 7:
    r0 = s.retval;
    r0 = (s.i___141407 + 1);
    s.i___141407 = (r0);
    { step = 3; continue; }
  case 4:
  case 5:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
console_add__P140838.info = {"start":632,"length":280,"line":28,"column":4,"endLine":35,"endColumn":5,"fileName":"pxt_modules/base/console.ts","functionName":"add","argumentNames":["priority","text"]}

function console_add__P140838_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: console_add__P140838, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  i___141407: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function inline__P140836(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = pxsim.control.__log(s.arg0, s.arg1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
inline__P140836.info = {"start":534,"length":85,"line":25,"column":8,"endLine":25,"endColumn":93,"fileName":"pxt_modules/base/console.ts","functionName":"inline","argumentNames":["priority","text"]}

function inline__P140836_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P140836, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
} }





function console_log__P140842(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = console_add__P140838_mk(s);
    s.tmp_0.arg0 = 1;
    s.tmp_1 = console_inspect__P140844_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.tmp_1.arg1 = 20;
    s.pc = 2; return s.tmp_1;
  case 2:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
console_log__P140842.info = {"start":1422,"length":95,"line":57,"column":4,"endLine":59,"endColumn":5,"fileName":"pxt_modules/base/console.ts","functionName":"log","argumentNames":["value"]}

function console_log__P140842_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: console_log__P140842, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function console_inspect__P140844(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.asArr___141451 = undefined;
    s.asString___141471 = undefined;
    s.keys___141483 = undefined;
    s.snipped___141487 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_pxtcore.typeOf(s.arg0);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 == "string");
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.arg0;
    { step = 17; continue; }
    { step = 16; continue; }
  case 1:
    r0 = pxsim_pxtcore.typeOf(s.arg0);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 == "number");
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 2; continue; }
    r0 = pxsim_String_.mkEmpty();
    s.tmp_4 = r0;
    if ((s.arg0) && (s.arg0).vtable) {
    setupResume(s, 18);
    pxsim_String__stringConv(s.arg0);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.arg0) + ""; }
  case 18:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = pxsim_String__concat(s.tmp_4, s.tmp_5);
    { step = 17; continue; }
    { step = 15; continue; }
  case 2:
    r0 = pxsim_Array_.isArray(s.arg0);
    s.tmp_6 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_6);
    if (!r0) { step = 5; continue; }
    s.asArr___141451 = (s.arg0);
    r0 = pxsim_Array__length(s.asArr___141451);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 <= s.arg1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.tmp_2 = helpers_arrayJoin__P140660_mk(s);
    s.tmp_2.arg0 = s.asArr___141451;
    s.tmp_2.arg1 = ",";
    s.pc = 19; return s.tmp_2;
  case 19:
    r0 = s.retval;
    { step = 17; continue; }
    { step = 4; continue; }
  case 3:
    r0 = pxsim_String_.mkEmpty();
    s.tmp_4 = r0;
    s.tmp_7 = helpers_arrayJoin__P140660_mk(s);
    s.tmp_8 = helpers_arraySlice__P140673_mk(s);
    s.tmp_8.arg0 = s.asArr___141451;
    s.tmp_8.arg1 = 0;
    s.tmp_8.arg2 = s.arg1;
    s.pc = 21; return s.tmp_8;
  case 21:
    r0 = s.retval;
    s.tmp_7.arg0 = r0;
    s.tmp_7.arg1 = ",";
    s.pc = 20; return s.tmp_7;
  case 20:
    r0 = s.retval;
    s.tmp_6 = r0;
    if ((s.tmp_6) && (s.tmp_6).vtable) {
    setupResume(s, 22);
    pxsim_String__stringConv(s.tmp_6);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_6) + ""; }
  case 22:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = pxsim_String__concat(s.tmp_4, s.tmp_5);
    s.tmp_3 = r0;
    r0 = pxsim_String__concat(s.tmp_3, "...");
    { step = 17; continue; }
  case 4:
    { step = 14; continue; }
  case 5:
    if ((s.arg0) && (s.arg0).vtable) {
    setupResume(s, 23);
    pxsim_String__stringConv(s.arg0);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.arg0) + ""; }
  case 23:
    r0 = s.retval;
    s.tmp_9 = r0;
    r0 = pxsim_String_.mkEmpty();
    s.tmp_10 = r0;
    r0 = pxsim_String__concat(s.tmp_9, s.tmp_10);
    s.asString___141471 = (r0);
    r0 = (s.asString___141471 != "[object Object]");
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 6; continue; }
    r0 = s.tmp_0;
    { step = 7; continue; }
  case 6:
    r0 = (s.asString___141471 != "[Object]");
  case 7:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 8; continue; }
    r0 = s.asString___141471;
    { step = 17; continue; }
  case 8:
  case 9:
    r0 = pxsim_pxtrt.keysOf(s.arg0);
    s.keys___141483 = (r0);
    r0 = pxsim_Array__length(s.keys___141483);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 > s.arg1);
    s.snipped___141487 = (r0);
    r0 = pxsim_numops_toBoolDecr(s.snipped___141487);
    if (!r0) { step = 10; continue; }
    s.tmp_0 = helpers_arraySlice__P140673_mk(s);
    s.tmp_0.arg0 = s.keys___141483;
    s.tmp_0.arg1 = 0;
    s.tmp_0.arg2 = s.arg1;
    s.pc = 24; return s.tmp_0;
  case 24:
    r0 = s.retval;
    s.keys___141483 = (r0);
  case 10:
  case 11:
    r0 = pxsim_pxtcore_mkAction(1, inline__P141505);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    r0 = pxsim_numops_toBoolDecr(s.snipped___141487);
    if (!r0) { step = 12; continue; }
    r0 = "\n    ...";
    { step = 13; continue; }
  case 12:
    r0 = pxsim_String_.mkEmpty();
  case 13:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    s.tmp_7 = helpers_arrayReduce__P140671_mk(s);
    s.tmp_7.arg0 = s.keys___141483;
    s.tmp_7.arg1 = s.tmp_0;
    r0 = pxsim_String_.mkEmpty();
    s.tmp_7.arg2 = r0;
    s.pc = 25; return s.tmp_7;
  case 25:
    r0 = s.retval;
    s.tmp_6 = r0;
    if ((s.tmp_6) && (s.tmp_6).vtable) {
    setupResume(s, 26);
    pxsim_String__stringConv(s.tmp_6);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_6) + ""; }
  case 26:
    r0 = s.retval;
    s.tmp_5 = r0;
    if ((s.tmp_1) && (s.tmp_1).vtable) {
    setupResume(s, 27);
    pxsim_String__stringConv(s.tmp_1);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_1) + ""; }
  case 27:
    r0 = s.retval;
    s.tmp_8 = r0;
    r0 = pxsim_String__concat(s.tmp_5, s.tmp_8);
    s.tmp_4 = r0;
    if ((s.tmp_4) && (s.tmp_4).vtable) {
    setupResume(s, 28);
    pxsim_String__stringConv(s.tmp_4);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_4) + ""; }
  case 28:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = pxsim_String__concat("{", s.tmp_3);
    s.tmp_2 = r0;
    r0 = pxsim_String__concat(s.tmp_2, "\n}");
    { step = 17; continue; }
  case 14:
  case 15:
  case 16:
    r0 = undefined;
  case 17:
    return leave(s, r0)
  default: oops()
} } }
console_inspect__P140844.info = {"start":2173,"length":1190,"line":78,"column":4,"endLine":111,"endColumn":5,"fileName":"pxt_modules/base/console.ts","functionName":"inspect","argumentNames":["obj","maxElements"]}

function console_inspect__P140844_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: console_inspect__P140844, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  asArr___141451: undefined,
  asString___141471: undefined,
  keys___141483: undefined,
  snipped___141487: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function inline__P141505(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    if ((s.arg0) && (s.arg0).vtable) {
    setupResume(s, 1);
    pxsim_String__stringConv(s.arg0);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.arg0) + ""; }
  case 1:
    r0 = s.retval;
    s.tmp_0 = r0;
    if ((s.arg1) && (s.arg1).vtable) {
    setupResume(s, 2);
    pxsim_String__stringConv(s.arg1);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.arg1) + ""; }
  case 2:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = pxsim_String__concat("\n    ", s.tmp_5);
    s.tmp_4 = r0;
    r0 = pxsim_String__concat(s.tmp_4, ": ");
    s.tmp_3 = r0;
    r0 = pxsim_pxtrt.mapGetGeneric(s.caps[0], s.arg1);
    s.tmp_7 = r0;
    if ((s.tmp_7) && (s.tmp_7).vtable) {
    setupResume(s, 3);
    pxsim_String__stringConv(s.tmp_7);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_7) + ""; }
  case 3:
    r0 = s.retval;
    s.tmp_6 = r0;
    r0 = pxsim_String__concat(s.tmp_3, s.tmp_6);
    s.tmp_2 = r0;
    if ((s.tmp_2) && (s.tmp_2).vtable) {
    setupResume(s, 4);
    pxsim_String__stringConv(s.tmp_2);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_2) + ""; }
  case 4:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim_String__concat(s.tmp_0, s.tmp_1);
    return leave(s, r0)
  default: oops()
} } }
inline__P141505.info = {"start":3195,"length":61,"line":105,"column":20,"endLine":105,"endColumn":81,"fileName":"pxt_modules/base/console.ts","functionName":"inline","argumentNames":["prev","currKey"]}

function inline__P141505_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P141505, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function helpers_arrayReduce__P140671(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.len___141532 = undefined;
    s.i___141535 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_Array__length(s.arg0);
    s.len___141532 = (r0);
    s.i___141535 = (0);
  case 1:
    r0 = (s.i___141535 < s.len___141532);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 2; continue; }
    s.tmp_1 = lambda_4_mk(s);
    s.tmp_1.argL = s.arg1;
    s.tmp_1.arg0 = s.arg2;
    r0 = pxsim_Array__getAt(s.arg0, s.i___141535);
    s.tmp_1.arg1 = r0;
    s.tmp_1.arg2 = s.i___141535;
    setupLambda(s.tmp_1, s.tmp_1.argL);
    s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
    s.arg2 = (r0);
    r0 = (s.i___141535 + 1);
    s.i___141535 = (r0);
    { step = 1; continue; }
  case 2:
    r0 = s.arg2;
    return leave(s, r0)
  default: oops()
} } }
helpers_arrayReduce__P140671.info = {"start":6458,"length":317,"line":220,"column":4,"endLine":226,"endColumn":5,"fileName":"pxt_modules/base/pxt-helpers.ts","functionName":"arrayReduce","argumentNames":["arr","callbackfn","initialValue"]}

function helpers_arrayReduce__P140671_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_arrayReduce__P140671, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  len___141532: undefined,
  i___141535: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function helpers_arraySlice__P140673(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.res___141553 = undefined;
    s.len___141555 = undefined;
    s.i___141589 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_Array__mk();
    s.res___141553 = (r0);
    r0 = pxsim_Array__length(s.arg0);
    s.len___141555 = (r0);
    r0 = (s.arg1 === undefined);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.arg1 = (0);
    { step = 4; continue; }
  case 1:
    r0 = (s.arg1 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 2; continue; }
    s.tmp_1 = Math_max__P140682_mk(s);
    r0 = (s.len___141555 + s.arg1);
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = 0;
    s.pc = 16; return s.tmp_1;
  case 16:
    r0 = s.retval;
    s.arg1 = (r0);
  case 2:
  case 3:
  case 4:
    r0 = (s.arg1 > s.len___141555);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    r0 = s.res___141553;
    { step = 15; continue; }
  case 5:
  case 6:
    r0 = (s.arg2 === undefined);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 7; continue; }
    s.arg2 = (s.len___141555);
    { step = 10; continue; }
  case 7:
    r0 = (s.arg2 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 8; continue; }
    r0 = (s.len___141555 + s.arg2);
    s.arg2 = (r0);
  case 8:
  case 9:
  case 10:
    r0 = (s.arg2 > s.len___141555);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 11; continue; }
    s.arg2 = (s.len___141555);
  case 11:
  case 12:
    s.i___141589 = (s.arg1);
  case 13:
    r0 = (s.i___141589 < s.arg2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 14; continue; }
    s.tmp_1 = r0 = s.res___141553;
    r0 = pxsim_Array__getAt(s.arg0, s.i___141589);
    s.tmp_2 = r0;
    r0 = pxsim_Array__push(s.tmp_1, s.tmp_2);
    r0 = (s.i___141589 + 1);
    s.i___141589 = (r0);
    { step = 13; continue; }
  case 14:
    r0 = s.res___141553;
  case 15:
    return leave(s, r0)
  default: oops()
} } }
helpers_arraySlice__P140673.info = {"start":7051,"length":690,"line":239,"column":4,"endLine":264,"endColumn":5,"fileName":"pxt_modules/base/pxt-helpers.ts","functionName":"arraySlice","argumentNames":["arr","start","end"]}

function helpers_arraySlice__P140673_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_arraySlice__P140673, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  res___141553: undefined,
  len___141555: undefined,
  i___141589: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function Math_max__P140682(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = (s.arg0 >= s.arg1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.arg0;
    { step = 3; continue; }
  case 1:
  case 2:
    r0 = s.arg1;
  case 3:
    return leave(s, r0)
  default: oops()
} } }
Math_max__P140682.info = {"start":11226,"length":105,"line":389,"column":4,"endLine":392,"endColumn":5,"fileName":"pxt_modules/base/pxt-helpers.ts","functionName":"max","argumentNames":["a","b"]}

function Math_max__P140682_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Math_max__P140682, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function helpers_arrayJoin__P140660(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.r___141622 = undefined;
    s.len___141623 = undefined;
    s.i___141626 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = (s.arg1 === undefined);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = (s.arg1 === null);
  case 2:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 3; continue; }
    s.arg1 = (",");
  case 3:
  case 4:
    r0 = pxsim_String_.mkEmpty();
    s.r___141622 = (r0);
    r0 = pxsim_Array__length(s.arg0);
    s.len___141623 = (r0);
    s.i___141626 = (0);
  case 5:
    r0 = (s.i___141626 < s.len___141623);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 14; continue; }
    r0 = (s.i___141626 > 0);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBool(s.tmp_1);
    if (r0) { step = 6; continue; }
    r0 = s.tmp_1;
    { step = 7; continue; }
  case 6:
    r0 = s.arg1;
  case 7:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 8; continue; }
    if ((s.r___141622) && (s.r___141622).vtable) {
    setupResume(s, 15);
    pxsim_String__stringConv(s.r___141622);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.r___141622) + ""; }
  case 15:
    r0 = s.retval;
    s.tmp_3 = r0;
    if ((s.arg1) && (s.arg1).vtable) {
    setupResume(s, 16);
    pxsim_String__stringConv(s.arg1);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.arg1) + ""; }
  case 16:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = pxsim_String__concat(s.tmp_3, s.tmp_4);
    s.r___141622 = (r0);
  case 8:
  case 9:
    r0 = pxsim_Array__getAt(s.arg0, s.i___141626);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 === undefined);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 10; continue; }
    r0 = s.tmp_0;
    { step = 11; continue; }
  case 10:
    r0 = pxsim_Array__getAt(s.arg0, s.i___141626);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 === null);
  case 11:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 12; continue; }
    r0 = pxsim_String_.mkEmpty();
    { step = 13; continue; }
  case 12:
    r0 = pxsim_Array__getAt(s.arg0, s.i___141626);
  case 13:
    // jmp value (already in r0)
    s.tmp_4 = r0;
    if ((s.r___141622) && (s.r___141622).vtable) {
    setupResume(s, 17);
    pxsim_String__stringConv(s.r___141622);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.r___141622) + ""; }
  case 17:
    r0 = s.retval;
    s.tmp_5 = r0;
    if ((s.tmp_4) && (s.tmp_4).vtable) {
    setupResume(s, 18);
    pxsim_String__stringConv(s.tmp_4);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_4) + ""; }
  case 18:
    r0 = s.retval;
    s.tmp_6 = r0;
    r0 = pxsim_String__concat(s.tmp_5, s.tmp_6);
    s.r___141622 = (r0);
    r0 = (s.i___141626 + 1);
    s.i___141626 = (r0);
    { step = 5; continue; }
  case 14:
    r0 = s.r___141622;
    return leave(s, r0)
  default: oops()
} } }
helpers_arrayJoin__P140660.info = {"start":2275,"length":432,"line":97,"column":4,"endLine":110,"endColumn":5,"fileName":"pxt_modules/base/pxt-helpers.ts","functionName":"arrayJoin","argumentNames":["arr","sep"]}

function helpers_arrayJoin__P140660_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_arrayJoin__P140660, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  r___141622: undefined,
  len___141623: undefined,
  i___141626: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function esp32_defaultController__P141123(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.cs___141666 = undefined;
    s.busy___141671 = undefined;
    s.reset___141676 = undefined;
    s.gpio0___141681 = undefined;
    s.mosi___141697 = undefined;
    s.miso___141702 = undefined;
    s.sck___141707 = undefined;
    s.spi___141712 = undefined;
    r0 = pxsim_numops_toBoolDecr(globals._defaultController___141122);
    if (!r0) { step = 1; continue; }
    r0 = globals._defaultController___141122;
    { step = 29; continue; }
  case 1:
  case 2:
    r0 = pxsim.pins.pinByCfg(87);
    s.cs___141666 = (r0);
    r0 = pxsim.pins.pinByCfg(88);
    s.busy___141671 = (r0);
    r0 = pxsim.pins.pinByCfg(89);
    s.reset___141676 = (r0);
    r0 = pxsim.pins.pinByCfg(90);
    s.gpio0___141681 = (r0);
    r0 = pxsim_numops_toBoolDecr(s.cs___141666);
    s.tmp_3 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_3);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 3; continue; }
    r0 = s.tmp_0;
    { step = 4; continue; }
  case 3:
    r0 = pxsim_numops_toBoolDecr(s.busy___141671);
    s.tmp_6 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_6);
    s.tmp_5 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_5);
    s.tmp_4 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_4);
  case 4:
    // jmp value (already in r0)
    s.tmp_7 = r0;
    r0 = pxsim_numops_toBool(s.tmp_7);
    if (r0) { step = 5; continue; }
    r0 = s.tmp_7;
    { step = 6; continue; }
  case 5:
    r0 = pxsim_numops_toBoolDecr(s.reset___141676);
    s.tmp_10 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_10);
    s.tmp_9 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_9);
    s.tmp_8 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_8);
  case 6:
    // jmp value (already in r0)
    s.tmp_11 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_11);
    if (!r0) { step = 21; continue; }
    r0 = pxsim.pins.pinByCfg(82);
    s.mosi___141697 = (r0);
    r0 = pxsim.pins.pinByCfg(83);
    s.miso___141702 = (r0);
    r0 = pxsim.pins.pinByCfg(84);
    s.sck___141707 = (r0);
    r0 = pxsim_numops_toBoolDecr(s.mosi___141697);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 7; continue; }
    r0 = s.tmp_0;
    { step = 8; continue; }
  case 7:
    r0 = pxsim_numops_toBoolDecr(s.miso___141702);
    s.tmp_2 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_2);
  case 8:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBool(s.tmp_3);
    if (r0) { step = 9; continue; }
    r0 = s.tmp_3;
    { step = 10; continue; }
  case 9:
    r0 = pxsim_numops_toBoolDecr(s.sck___141707);
    s.tmp_4 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_4);
  case 10:
    // jmp value (already in r0)
    s.tmp_5 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_5);
    if (!r0) { step = 11; continue; }
    s.tmp_6 = pins_spi__P140934_mk(s);
    s.pc = 30; return s.tmp_6;
  case 30:
    r0 = s.retval;
    s.spi___141712 = (r0);
    { step = 18; continue; }
  case 11:
    s.tmp_0 = r0 = s.mosi___141697;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 12; continue; }
    r0 = s.tmp_0;
    { step = 13; continue; }
  case 12:
    r0 = s.miso___141702;
  case 13:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBool(s.tmp_1);
    if (r0) { step = 14; continue; }
    r0 = s.tmp_1;
    { step = 15; continue; }
  case 14:
    r0 = s.sck___141707;
  case 15:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 16; continue; }
    r0 = pxsim.pins.createSPI(s.mosi___141697, s.miso___141702, s.sck___141707);
    s.spi___141712 = (r0);
    { step = 17; continue; }
  case 16:
    s.tmp_0 = net_log__P141082_mk(s);
    s.tmp_0.arg0 = "esp32 spi configuration error";
    s.pc = 31; return s.tmp_0;
  case 31:
    r0 = s.retval;
    r0 = pxsim_pxtrt.panic(90);
  case 17:
  case 18:
    r0 = pxsim_numops_toBoolDecr(s.spi___141712);
    if (!r0) { step = 19; continue; }
    r0 = pxsim_pxtcore_mkClassInstance(esp32_NinaController__C141258_VT);
    s.tmp_0 = r0;
    s.tmp_1 = esp32_NinaController_constructor__P141308_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = s.spi___141712;
    s.tmp_1.arg2 = s.cs___141666;
    s.tmp_1.arg3 = s.busy___141671;
    s.tmp_1.arg4 = s.reset___141676;
    s.tmp_1.arg5 = s.gpio0___141681;
    s.pc = 32; return s.tmp_1;
  case 32:
    r0 = s.retval;
    globals._defaultController___141122 = (s.tmp_0);
    r0 = s.tmp_0;
    { step = 29; continue; }
  case 19:
  case 20:
    { step = 28; continue; }
  case 21:
    r0 = pxsim_numops_toBoolDecr(s.cs___141666);
    s.tmp_3 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_3);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBool(s.tmp_2);
    if (r0) { step = 22; continue; }
    r0 = s.tmp_2;
    { step = 23; continue; }
  case 22:
    r0 = pxsim_numops_toBoolDecr(s.busy___141671);
    s.tmp_4 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_4);
  case 23:
    // jmp value (already in r0)
    s.tmp_5 = r0;
    r0 = pxsim_numops_toBool(s.tmp_5);
    if (r0) { step = 24; continue; }
    r0 = s.tmp_5;
    { step = 25; continue; }
  case 24:
    r0 = pxsim_numops_toBoolDecr(s.reset___141676);
    s.tmp_6 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_6);
  case 25:
    // jmp value (already in r0)
    s.tmp_7 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_7);
    if (!r0) { step = 26; continue; }
    r0 = undefined;
    { step = 29; continue; }
    { step = 27; continue; }
  case 26:
    s.tmp_8 = net_log__P141082_mk(s);
    s.tmp_8.arg0 = "esp32 partially configured";
    s.pc = 33; return s.tmp_8;
  case 33:
    r0 = s.retval;
    r0 = pxsim_pxtrt.panic(90);
  case 27:
  case 28:
    s.tmp_0 = net_log__P141082_mk(s);
    s.tmp_0.arg0 = "esp32 configuration error";
    s.pc = 34; return s.tmp_0;
  case 34:
    r0 = s.retval;
    r0 = pxsim_pxtrt.panic(90);
    r0 = undefined;
  case 29:
    return leave(s, r0)
  default: oops()
} } }
esp32_defaultController__P141123.info = {"start":66,"length":2003,"line":2,"column":4,"endLine":49,"endColumn":5,"fileName":"net.ts","functionName":"defaultController","argumentNames":[]}

function esp32_defaultController__P141123_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: esp32_defaultController__P141123, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  tmp_11: undefined,
  cs___141666: undefined,
  busy___141671: undefined,
  reset___141676: undefined,
  gpio0___141681: undefined,
  mosi___141697: undefined,
  miso___141702: undefined,
  sck___141707: undefined,
  spi___141712: undefined,
} }





function esp32_NinaController_constructor__P141308(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.arg5 = (s.lambdaArgs[5]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, esp32_NinaController__C141258_VT)) failedCast(r0);
    r0 = (s.arg0).fields["_spi"] = (s.arg1);
    r0 = (s.arg0).fields["_cs"] = (s.arg2);
    r0 = (s.arg0).fields["_busy"] = (s.arg3);
    r0 = (s.arg0).fields["_reset"] = (s.arg4);
    r0 = (s.arg0).fields["_gpio0"] = (s.arg5);
    r0 = undefined;
    r0 = s.arg0.fields["_busy"];
    s.tmp_0 = r0;
    r0 = pxsim.DigitalInOutPinMethods.setPull(s.tmp_0, 0);
    r0 = s.arg0.fields["_busy"];
    s.tmp_0 = r0;
    r0 = pxsim.DigitalInOutPinMethods.digitalRead(s.tmp_0);
    r0 = pxsim_Array__mk();
    s.tmp_0 = r0;
    s.tmp_2 = esp32_buffer1__P141257_mk(s);
    s.tmp_2.arg0 = 0;
    s.pc = 1; return s.tmp_2;
  case 1:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.tmp_1);
    r0 = (s.arg0).fields["_socknum_ll"] = (s.tmp_0);
    r0 = s.arg0.fields["_spi"];
    s.tmp_0 = r0;
    r0 = pxsim.SPIMethods.setFrequency(s.tmp_0, 8000000);
    s.tmp_0 = esp32_NinaController_reset__P141260_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = (s.arg0).fields["_locked"] = (false);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
esp32_NinaController_constructor__P141308.info = {"start":2637,"length":644,"line":80,"column":8,"endLine":96,"endColumn":9,"fileName":"ninacontroller.ts","functionName":"inline","argumentNames":["this","_spi","_cs","_busy","_reset","_gpio0"]}

function esp32_NinaController_constructor__P141308_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: esp32_NinaController_constructor__P141308, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
  arg5: undefined,
} }





function esp32_NinaController_reset__P141260(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, esp32_NinaController__C141258_VT)) failedCast(r0);
    r0 = s.arg0.fields["_gpio0"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.arg0.fields["_gpio0"];
    s.tmp_1 = r0;
    r0 = pxsim.DigitalInOutPinMethods.digitalWrite(s.tmp_1, true);
  case 1:
  case 2:
    r0 = s.arg0.fields["_cs"];
    s.tmp_0 = r0;
    r0 = pxsim.DigitalInOutPinMethods.digitalWrite(s.tmp_0, true);
    r0 = s.arg0.fields["_reset"];
    s.tmp_0 = r0;
    r0 = pxsim.DigitalInOutPinMethods.digitalWrite(s.tmp_0, false);
    s.tmp_0 = pause__P140892_mk(s);
    s.tmp_0.arg0 = 10;
    s.pc = 5; return s.tmp_0;
  case 5:
    r0 = s.retval;
    r0 = s.arg0.fields["_reset"];
    s.tmp_0 = r0;
    r0 = pxsim.DigitalInOutPinMethods.digitalWrite(s.tmp_0, true);
    s.tmp_0 = pause__P140892_mk(s);
    s.tmp_0.arg0 = 750;
    s.pc = 6; return s.tmp_0;
  case 6:
    r0 = s.retval;
    r0 = s.arg0.fields["_gpio0"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    r0 = s.arg0.fields["_gpio0"];
    s.tmp_1 = r0;
    r0 = pxsim.DigitalInOutPinMethods.digitalRead(s.tmp_1);
  case 3:
  case 4:
    s.tmp_0 = esp32_NinaController_spiTransfer__P141266_mk(s);
    s.tmp_0.arg0 = s.arg0;
    r0 = pxsim.control.createBuffer(1);
    s.tmp_0.arg1 = r0;
    s.tmp_0.arg2 = null;
    s.pc = 7; return s.tmp_0;
  case 7:
    r0 = s.retval;
    s.tmp_0 = net_log__P141082_mk(s);
    s.tmp_0.arg0 = "reseted esp32";
    s.pc = 8; return s.tmp_0;
  case 8:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
esp32_NinaController_reset__P141260.info = {"start":3368,"length":574,"line":101,"column":8,"endLine":116,"endColumn":9,"fileName":"ninacontroller.ts","functionName":"reset","argumentNames":["this"]}

function esp32_NinaController_reset__P141260_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: esp32_NinaController_reset__P141260, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function esp32_NinaController_spiTransfer__P141266(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, esp32_NinaController__C141258_VT)) failedCast(r0);
    r0 = pxsim_numops_toBoolDecr(s.arg1);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = pxsim.BufferMethods.length(s.arg2);
    s.tmp_2 = r0;
    r0 = pxsim.control.createBuffer(s.tmp_2);
    s.arg1 = (r0);
  case 1:
  case 2:
    r0 = pxsim_numops_toBoolDecr(s.arg2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    r0 = pxsim.BufferMethods.length(s.arg1);
    s.tmp_2 = r0;
    r0 = pxsim.control.createBuffer(s.tmp_2);
    s.arg2 = (r0);
  case 3:
  case 4:
    r0 = s.arg0.fields["_spi"];
    s.tmp_0 = r0;
    r0 = pxsim.SPIMethods.transfer(s.tmp_0, s.arg1, s.arg2);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
esp32_NinaController_spiTransfer__P141266.info = {"start":6899,"length":211,"line":207,"column":8,"endLine":211,"endColumn":9,"fileName":"ninacontroller.ts","functionName":"spiTransfer","argumentNames":["this","tx","rx"]}

function esp32_NinaController_spiTransfer__P141266_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: esp32_NinaController_spiTransfer__P141266, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function pause__P140892(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    setupResume(s, 1);
    pxsim.loops.pause(s.arg0);
    checkResumeConsumed();
    return;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
pause__P140892.info = {"start":246,"length":57,"line":7,"column":0,"endLine":9,"endColumn":1,"fileName":"pxt_modules/base/pause.ts","functionName":"pause","argumentNames":["ms"]}

function pause__P140892_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: pause__P140892, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function esp32_buffer1__P141257(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.b___141862 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = pxsim.control.createBuffer(1);
    s.b___141862 = (r0);
    r0 = pxsim.BufferMethods.setByte(s.b___141862, 0, s.arg0);
    r0 = s.b___141862;
    return leave(s, r0)
  default: oops()
} } }
esp32_buffer1__P141257.info = {"start":2344,"length":113,"line":68,"column":4,"endLine":72,"endColumn":5,"fileName":"ninacontroller.ts","functionName":"buffer1","argumentNames":["ch"]}

function esp32_buffer1__P141257_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: esp32_buffer1__P141257, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  b___141862: undefined,
  arg0: undefined,
} }





function net_Controller_constructor__P141053(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, net_Controller__C141038_VT)) failedCast(r0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
net_Controller_constructor__P141053.info = {"start":54,"length":17,"line":2,"column":8,"endLine":2,"endColumn":25,"fileName":"pxt_modules/net/controller.ts","functionName":"inline","argumentNames":["this"]}

function net_Controller_constructor__P141053_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: net_Controller_constructor__P141053, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function pins_spi__P140934(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.mosi___141873 = undefined;
    s.miso___141878 = undefined;
    s.sck___141883 = undefined;
    r0 = pxsim_numops_toBoolDecr(globals._spi___140933);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = pxsim.pins.pinByCfg(19);
    s.mosi___141873 = (r0);
    r0 = pxsim.pins.pinByCfg(18);
    s.miso___141878 = (r0);
    r0 = pxsim.pins.pinByCfg(23);
    s.sck___141883 = (r0);
    r0 = pxsim.pins.createSPI(s.mosi___141873, s.miso___141878, s.sck___141883);
    globals._spi___140933 = (r0);
  case 1:
  case 2:
    r0 = globals._spi___140933;
    return leave(s, r0)
  default: oops()
} } }
pins_spi__P140934.info = {"start":98,"length":305,"line":7,"column":4,"endLine":15,"endColumn":5,"fileName":"pxt_modules/core/spi.ts","functionName":"spi","argumentNames":[]}

function pins_spi__P140934_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: pins_spi__P140934, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  mosi___141873: undefined,
  miso___141878: undefined,
  sck___141883: undefined,
} }





function net_Net_constructor__P141094(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, net_Net__C141089_VT)) failedCast(r0);
    r0 = (s.arg0).fields["factory"] = (s.arg1);
    globals.net_Net_instance___141095 = (s.arg0);
    r0 = (s.arg0).fields["_controller"] = (undefined);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
net_Net_constructor__P141094.info = {"start":1333,"length":162,"line":48,"column":8,"endLine":51,"endColumn":9,"fileName":"pxt_modules/net/net.ts","functionName":"inline","argumentNames":["this","factory"]}

function net_Net_constructor__P141094_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: net_Net_constructor__P141094, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
} }





function settings_initScopes__P141010(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.rn___141900 = undefined;
    s.tmp_1 = settings_runNumber__P141008_mk(s);
    s.pc = 1; return s.tmp_1;
  case 1:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = (s.tmp_0 + 1);
    s.rn___141900 = (r0);
    s.tmp_0 = settings_writeNumber__P141015_mk(s);
    s.tmp_0.arg0 = globals.RUN_KEY___140997;
    s.tmp_0.arg1 = s.rn___141900;
    s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = pxsim.control.deviceSerialNumber();
    s.tmp_1 = r0;
    r0 = (s.tmp_1 & 2147483647);
    s.tmp_0 = r0;
    r0 = pxsim_pxtcore.seedAddRandom(s.tmp_0);
    r0 = pxsim_pxtcore.seedAddRandom(s.rn___141900);
    s.tmp_0 = settings_setScope__P141009_mk(s);
    r0 = pxsim_pxtcore.programName();
    s.tmp_0.arg0 = r0;
    s.pc = 3; return s.tmp_0;
  case 3:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
settings_initScopes__P141010.info = {"start":1104,"length":230,"line":41,"column":4,"endLine":49,"endColumn":5,"fileName":"pxt_modules/settings/settings.ts","functionName":"initScopes","argumentNames":[]}

function settings_initScopes__P141010_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: settings_initScopes__P141010, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  rn___141900: undefined,
} }





function settings_setScope__P141009(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.currScope___141930 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_numops_toBoolDecr(s.arg0);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = pxsim_String_.length(s.arg0);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 > 100);
  case 2:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 3; continue; }
    r0 = pxsim_pxtrt.panic(922);
  case 3:
  case 4:
    s.tmp_0 = settings_readString__P141018_mk(s);
    s.tmp_0.arg0 = globals.SCOPE_KEY___140998;
    s.pc = 7; return s.tmp_0;
  case 7:
    r0 = s.retval;
    s.currScope___141930 = (r0);
    r0 = (s.currScope___141930 != s.arg0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    r0 = pxsim.settings._userClean();
    s.tmp_0 = settings_writeString__P141014_mk(s);
    s.tmp_0.arg0 = globals.SCOPE_KEY___140998;
    s.tmp_0.arg1 = s.arg0;
    s.pc = 8; return s.tmp_0;
  case 8:
    r0 = s.retval;
  case 5:
  case 6:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
settings_setScope__P141009.info = {"start":826,"length":272,"line":31,"column":4,"endLine":39,"endColumn":5,"fileName":"pxt_modules/settings/settings.ts","functionName":"setScope","argumentNames":["scope"]}

function settings_setScope__P141009_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: settings_setScope__P141009, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  currScope___141930: undefined,
  arg0: undefined,
} }





function settings_writeString__P141014(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = settings_writeBuffer__P141013_mk(s);
    s.tmp_0.arg0 = s.arg0;
    r0 = pxsim.control.createBufferFromUTF8(s.arg1);
    s.tmp_0.arg1 = r0;
    s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
settings_writeString__P141014.info = {"start":1895,"length":125,"line":75,"column":4,"endLine":77,"endColumn":5,"fileName":"pxt_modules/settings/settings.ts","functionName":"writeString","argumentNames":["key","value"]}

function settings_writeString__P141014_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: settings_writeString__P141014, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function settings_writeBuffer__P141013(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = pxsim.settings._set(s.arg0, s.arg1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = pxsim.settings._userClean();
    r0 = pxsim_pxtrt.panic(920);
  case 1:
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
settings_writeBuffer__P141013.info = {"start":1538,"length":290,"line":63,"column":4,"endLine":70,"endColumn":5,"fileName":"pxt_modules/settings/settings.ts","functionName":"writeBuffer","argumentNames":["key","value"]}

function settings_writeBuffer__P141013_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: settings_writeBuffer__P141013, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function settings_readString__P141018(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.buf___141961 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = pxsim.settings._get(s.arg0);
    s.buf___141961 = (r0);
    r0 = pxsim_numops_toBoolDecr(s.buf___141961);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = undefined;
    { step = 3; continue; }
    { step = 2; continue; }
  case 1:
    r0 = pxsim.BufferMethods.toString(s.buf___141961);
    { step = 3; continue; }
  case 2:
    r0 = undefined;
  case 3:
    return leave(s, r0)
  default: oops()
} } }
settings_readString__P141018.info = {"start":2649,"length":177,"line":103,"column":4,"endLine":109,"endColumn":5,"fileName":"pxt_modules/settings/settings.ts","functionName":"readString","argumentNames":["key"]}

function settings_readString__P141018_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: settings_readString__P141018, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  buf___141961: undefined,
  arg0: undefined,
} }





function settings_readBuffer__P141017(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = pxsim.settings._get(s.arg0);
    return leave(s, r0)
  default: oops()
} } }
settings_readBuffer__P141017.info = {"start":2516,"length":72,"line":96,"column":4,"endLine":98,"endColumn":5,"fileName":"pxt_modules/settings/settings.ts","functionName":"readBuffer","argumentNames":["key"]}

function settings_readBuffer__P141017_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: settings_readBuffer__P141017, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function settings_writeNumber__P141015(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_Array__mk();
    s.tmp_0 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.arg1);
    s.tmp_1 = settings_writeBuffer__P141013_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.tmp_2 = msgpack_packNumberArray__P140744_mk(s);
    s.tmp_2.arg0 = s.tmp_0;
    s.pc = 2; return s.tmp_2;
  case 2:
    r0 = s.retval;
    s.tmp_1.arg1 = r0;
    s.pc = 1; return s.tmp_1;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
settings_writeNumber__P141015.info = {"start":2087,"length":122,"line":82,"column":4,"endLine":84,"endColumn":5,"fileName":"pxt_modules/settings/settings.ts","functionName":"writeNumber","argumentNames":["key","value"]}

function settings_writeNumber__P141015_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: settings_writeNumber__P141015, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function msgpack_packNumberArray__P140744(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.off___141984 = undefined;
    s.n___141986 = undefined;
    s.unnamed408___U2 = undefined;
    s.unnamed409___U3 = undefined;
    s.buf___141996 = undefined;
    s.n___142002 = undefined;
    s.unnamed410___U6 = undefined;
    s.unnamed411___U7 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.off___141984 = (0);
    s.n___141986 = (undefined);
    s.unnamed408___U2 = (s.arg0);
    s.unnamed409___U3 = (0);
  case 1:
    s.tmp_0 = r0 = s.unnamed409___U3;
    r0 = pxsim_Array__length(s.unnamed408___U2);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 2; continue; }
    r0 = pxsim_Array__getAt(s.unnamed408___U2, s.unnamed409___U3);
    s.n___141986 = (r0);
    s.tmp_2 = r0 = s.off___141984;
    s.tmp_4 = msgpack_packNumberCore__P140742_mk(s);
    s.tmp_4.arg0 = null;
    s.tmp_4.arg1 = s.off___141984;
    s.tmp_4.arg2 = s.n___141986;
    s.pc = 5; return s.tmp_4;
  case 5:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_2 + s.tmp_3);
    s.off___141984 = (r0);
    r0 = (s.unnamed409___U3 + 1);
    s.unnamed409___U3 = (r0);
    { step = 1; continue; }
  case 2:
    s.unnamed408___U2 = (undefined);
    r0 = pxsim.control.createBuffer(s.off___141984);
    s.buf___141996 = (r0);
    s.off___141984 = (0);
    s.n___142002 = (undefined);
    s.unnamed410___U6 = (s.arg0);
    s.unnamed411___U7 = (0);
  case 3:
    s.tmp_0 = r0 = s.unnamed411___U7;
    r0 = pxsim_Array__length(s.unnamed410___U6);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 4; continue; }
    r0 = pxsim_Array__getAt(s.unnamed410___U6, s.unnamed411___U7);
    s.n___142002 = (r0);
    s.tmp_2 = r0 = s.off___141984;
    s.tmp_4 = msgpack_packNumberCore__P140742_mk(s);
    s.tmp_4.arg0 = s.buf___141996;
    s.tmp_4.arg1 = s.off___141984;
    s.tmp_4.arg2 = s.n___142002;
    s.pc = 6; return s.tmp_4;
  case 6:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_2 + s.tmp_3);
    s.off___141984 = (r0);
    r0 = (s.unnamed411___U7 + 1);
    s.unnamed411___U7 = (r0);
    { step = 3; continue; }
  case 4:
    s.unnamed410___U6 = (undefined);
    r0 = s.buf___141996;
    return leave(s, r0)
  default: oops()
} } }
msgpack_packNumberArray__P140744.info = {"start":6884,"length":337,"line":219,"column":4,"endLine":230,"endColumn":5,"fileName":"pxt_modules/base/buffer.ts","functionName":"packNumberArray","argumentNames":["nums"]}

function msgpack_packNumberArray__P140744_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: msgpack_packNumberArray__P140744, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  off___141984: undefined,
  n___141986: undefined,
  unnamed408___U2: undefined,
  unnamed409___U3: undefined,
  buf___141996: undefined,
  n___142002: undefined,
  unnamed410___U6: undefined,
  unnamed411___U7: undefined,
  arg0: undefined,
} }





function msgpack_packNumberCore__P140742(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.tag___142016 = undefined;
    s.fmt___142059 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    s.tag___142016 = (203);
    s.tmp_1 = r0 = s.arg2;
    r0 = (s.arg2 << 0);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 == s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    s.tmp_3 = r0 = s.arg2;
    r0 = (s.arg2 >>> 0);
    s.tmp_4 = r0;
    r0 = (s.tmp_3 == s.tmp_4);
  case 2:
    // jmp value (already in r0)
    s.tmp_5 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_5);
    if (!r0) { step = 19; continue; }
    r0 = (-31 <= s.arg2);
    s.tmp_6 = r0;
    r0 = pxsim_numops_toBool(s.tmp_6);
    if (r0) { step = 3; continue; }
    r0 = s.tmp_6;
    { step = 4; continue; }
  case 3:
    r0 = (s.arg2 <= 127);
  case 4:
    // jmp value (already in r0)
    s.tmp_7 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_7);
    if (!r0) { step = 7; continue; }
    r0 = pxsim_numops_toBoolDecr(s.arg0);
    if (!r0) { step = 5; continue; }
    r0 = pxsim.BufferMethods.setByte(s.arg0, s.arg1, s.arg2);
  case 5:
  case 6:
    r0 = 1;
    { step = 23; continue; }
    { step = 18; continue; }
  case 7:
    r0 = (0 <= s.arg2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 12; continue; }
    r0 = (s.arg2 <= 255);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 8; continue; }
    s.tag___142016 = (204);
    { step = 11; continue; }
  case 8:
    r0 = (s.arg2 <= 65535);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 9; continue; }
    s.tag___142016 = (205);
    { step = 10; continue; }
  case 9:
    s.tag___142016 = (206);
  case 10:
  case 11:
    { step = 17; continue; }
  case 12:
    r0 = (-127 <= s.arg2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 13; continue; }
    s.tag___142016 = (208);
    { step = 16; continue; }
  case 13:
    r0 = (-32767 <= s.arg2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 14; continue; }
    s.tag___142016 = (209);
    { step = 15; continue; }
  case 14:
    s.tag___142016 = (210);
  case 15:
  case 16:
  case 17:
  case 18:
  case 19:
  case 20:
    s.tmp_0 = msgpack_tagFormat__P140741_mk(s);
    s.tmp_0.arg0 = s.tag___142016;
    s.pc = 24; return s.tmp_0;
  case 24:
    r0 = s.retval;
    s.fmt___142059 = (r0);
    r0 = pxsim_numops_toBoolDecr(s.arg0);
    if (!r0) { step = 21; continue; }
    r0 = pxsim.BufferMethods.setByte(s.arg0, s.arg1, s.tag___142016);
    s.tmp_0 = r0 = s.arg0;
    s.tmp_1 = r0 = s.fmt___142059;
    r0 = (s.arg1 + 1);
    s.tmp_2 = r0;
    r0 = pxsim.BufferMethods.setNumber(s.tmp_0, s.tmp_1, s.tmp_2, s.arg2);
  case 21:
  case 22:
    s.tmp_1 = pins_sizeOf__P140732_mk(s);
    s.tmp_1.arg0 = s.fmt___142059;
    s.pc = 25; return s.tmp_1;
  case 25:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = (s.tmp_0 + 1);
  case 23:
    return leave(s, r0)
  default: oops()
} } }
msgpack_packNumberCore__P140742.info = {"start":5089,"length":951,"line":158,"column":4,"endLine":188,"endColumn":5,"fileName":"pxt_modules/base/buffer.ts","functionName":"packNumberCore","argumentNames":["buf","offset","num"]}

function msgpack_packNumberCore__P140742_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: msgpack_packNumberCore__P140742, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tag___142016: undefined,
  fmt___142059: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function pins_sizeOf__P140732(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_pxtcore.switch_eq(1, s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = pxsim_pxtcore.switch_eq(2, s.tmp_0);
    if (r0) { step = 2; continue; }
    r0 = pxsim_pxtcore.switch_eq(6, s.tmp_0);
    if (r0) { step = 3; continue; }
    r0 = pxsim_pxtcore.switch_eq(7, s.tmp_0);
    if (r0) { step = 4; continue; }
    r0 = pxsim_pxtcore.switch_eq(3, s.tmp_0);
    if (r0) { step = 5; continue; }
    r0 = pxsim_pxtcore.switch_eq(4, s.tmp_0);
    if (r0) { step = 6; continue; }
    r0 = pxsim_pxtcore.switch_eq(8, s.tmp_0);
    if (r0) { step = 7; continue; }
    r0 = pxsim_pxtcore.switch_eq(9, s.tmp_0);
    if (r0) { step = 8; continue; }
    r0 = pxsim_pxtcore.switch_eq(5, s.tmp_0);
    if (r0) { step = 9; continue; }
    r0 = pxsim_pxtcore.switch_eq(10, s.tmp_0);
    if (r0) { step = 10; continue; }
    r0 = pxsim_pxtcore.switch_eq(12, s.tmp_0);
    if (r0) { step = 11; continue; }
    r0 = pxsim_pxtcore.switch_eq(11, s.tmp_0);
    if (r0) { step = 12; continue; }
    r0 = pxsim_pxtcore.switch_eq(15, s.tmp_0);
    if (r0) { step = 13; continue; }
    r0 = pxsim_pxtcore.switch_eq(13, s.tmp_0);
    if (r0) { step = 14; continue; }
    r0 = pxsim_pxtcore.switch_eq(16, s.tmp_0);
    if (r0) { step = 15; continue; }
    r0 = pxsim_pxtcore.switch_eq(14, s.tmp_0);
    if (r0) { step = 16; continue; }
    r0 = s.tmp_0;
    { step = 17; continue; }
  case 1:
  case 2:
  case 3:
  case 4:
    r0 = 1;
    { step = 18; continue; }
  case 5:
  case 6:
  case 7:
  case 8:
    r0 = 2;
    { step = 18; continue; }
  case 9:
  case 10:
  case 11:
  case 12:
  case 13:
  case 14:
    r0 = 4;
    { step = 18; continue; }
  case 15:
  case 16:
    r0 = 8;
    { step = 18; continue; }
  case 17:
    r0 = 0;
  case 18:
    return leave(s, r0)
  default: oops()
} } }
pins_sizeOf__P140732.info = {"start":102,"length":844,"line":5,"column":4,"endLine":29,"endColumn":5,"fileName":"pxt_modules/base/buffer.ts","functionName":"sizeOf","argumentNames":["format"]}

function pins_sizeOf__P140732_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: pins_sizeOf__P140732, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function msgpack_tagFormat__P140741(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_pxtcore.switch_eq(203, s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = pxsim_pxtcore.switch_eq(204, s.tmp_0);
    if (r0) { step = 2; continue; }
    r0 = pxsim_pxtcore.switch_eq(205, s.tmp_0);
    if (r0) { step = 3; continue; }
    r0 = pxsim_pxtcore.switch_eq(206, s.tmp_0);
    if (r0) { step = 4; continue; }
    r0 = pxsim_pxtcore.switch_eq(208, s.tmp_0);
    if (r0) { step = 5; continue; }
    r0 = pxsim_pxtcore.switch_eq(209, s.tmp_0);
    if (r0) { step = 6; continue; }
    r0 = pxsim_pxtcore.switch_eq(210, s.tmp_0);
    if (r0) { step = 7; continue; }
    r0 = s.tmp_0;
    { step = 8; continue; }
  case 1:
    r0 = 16;
    { step = 9; continue; }
  case 2:
    r0 = 7;
    { step = 9; continue; }
  case 3:
    r0 = 9;
    { step = 9; continue; }
  case 4:
    r0 = 12;
    { step = 9; continue; }
  case 5:
    r0 = 6;
    { step = 9; continue; }
  case 6:
    r0 = 8;
    { step = 9; continue; }
  case 7:
    r0 = 10;
    { step = 9; continue; }
  case 8:
    r0 = null;
    { step = 9; continue; }
    r0 = undefined;
  case 9:
    return leave(s, r0)
  default: oops()
} } }
msgpack_tagFormat__P140741.info = {"start":4602,"length":481,"line":144,"column":4,"endLine":156,"endColumn":5,"fileName":"pxt_modules/base/buffer.ts","functionName":"tagFormat","argumentNames":["tag"]}

function msgpack_tagFormat__P140741_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: msgpack_tagFormat__P140741, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function settings_runNumber__P141008(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.tmp_1 = settings_readNumber__P141019_mk(s);
    s.tmp_1.arg0 = globals.RUN_KEY___140997;
    s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = 0;
  case 2:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = s.tmp_2;
    return leave(s, r0)
  default: oops()
} } }
settings_runNumber__P141008.info = {"start":745,"length":75,"line":27,"column":4,"endLine":29,"endColumn":5,"fileName":"pxt_modules/settings/settings.ts","functionName":"runNumber","argumentNames":[]}

function settings_runNumber__P141008_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: settings_runNumber__P141008, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
} }





function settings_readNumber__P141019(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.buf___142132 = undefined;
    s.nums___142139 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = pxsim.settings._get(s.arg0);
    s.buf___142132 = (r0);
    r0 = pxsim_numops_toBoolDecr(s.buf___142132);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = undefined;
    { step = 7; continue; }
    { step = 6; continue; }
  case 1:
    s.tmp_2 = msgpack_unpackNumberArray__P140743_mk(s);
    s.tmp_2.arg0 = s.buf___142132;
    s.tmp_2.arg1 = 0;
    s.pc = 8; return s.tmp_2;
  case 8:
    r0 = s.retval;
    s.nums___142139 = (r0);
    s.tmp_0 = r0 = s.nums___142139;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 2; continue; }
    r0 = s.tmp_0;
    { step = 3; continue; }
  case 2:
    r0 = pxsim_Array__length(s.nums___142139);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 >= 1);
  case 3:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 4; continue; }
    r0 = pxsim_Array__getAt(s.nums___142139, 0);
    { step = 7; continue; }
  case 4:
  case 5:
    r0 = undefined;
    { step = 7; continue; }
  case 6:
    r0 = undefined;
  case 7:
    return leave(s, r0)
  default: oops()
} } }
settings_readNumber__P141019.info = {"start":2887,"length":313,"line":114,"column":4,"endLine":124,"endColumn":5,"fileName":"pxt_modules/settings/settings.ts","functionName":"readNumber","argumentNames":["key"]}

function settings_readNumber__P141019_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: settings_readNumber__P141019, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  buf___142132: undefined,
  nums___142139: undefined,
  arg0: undefined,
} }





function msgpack_unpackNumberArray__P140743(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.res___142152 = undefined;
    s.fmt___142159 = undefined;
    s.v___142168 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_Array__mk();
    s.res___142152 = (r0);
  case 1:
    s.tmp_1 = r0 = s.arg1;
    r0 = pxsim.BufferMethods.length(s.arg0);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 10; continue; }
    s.tmp_3 = r0 = s.arg1;
    r0 = (s.tmp_3 + 1);
    s.arg1 = (r0);
    s.tmp_4 = msgpack_tagFormat__P140741_mk(s);
    r0 = pxsim.BufferMethods.getByte(s.arg0, s.tmp_3);
    s.tmp_4.arg0 = r0;
    s.pc = 12; return s.tmp_4;
  case 12:
    r0 = s.retval;
    s.fmt___142159 = (r0);
    r0 = (s.fmt___142159 === null);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 6; continue; }
    s.tmp_1 = r0 = s.arg0;
    r0 = (s.arg1 - 1);
    s.tmp_2 = r0;
    r0 = pxsim.BufferMethods.getNumber(s.tmp_1, 6, s.tmp_2);
    s.v___142168 = (r0);
    r0 = (-31 <= s.v___142168);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 2; continue; }
    r0 = s.tmp_0;
    { step = 3; continue; }
  case 2:
    r0 = (s.v___142168 <= 127);
  case 3:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 4; continue; }
    r0 = pxsim_Array__push(s.res___142152, s.v___142168);
    { step = 5; continue; }
  case 4:
    r0 = null;
    { step = 11; continue; }
  case 5:
    { step = 7; continue; }
  case 6:
    s.tmp_0 = r0 = s.res___142152;
    r0 = pxsim.BufferMethods.getNumber(s.arg0, s.fmt___142159, s.arg1);
    s.tmp_1 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.tmp_1);
    s.tmp_0 = r0 = s.arg1;
    s.tmp_2 = pins_sizeOf__P140732_mk(s);
    s.tmp_2.arg0 = s.fmt___142159;
    s.pc = 13; return s.tmp_2;
  case 13:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0 + s.tmp_1);
    s.arg1 = (r0);
  case 7:
  case 8:
    r0 = pxsim.BufferMethods.getByte(s.arg0, s.arg1);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 === 193);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 9; continue; }
    r0 = (s.arg1 + 1);
    s.arg1 = (r0);
    { step = 8; continue; }
  case 9:
    { step = 1; continue; }
  case 10:
    r0 = s.res___142152;
  case 11:
    return leave(s, r0)
  default: oops()
} } }
msgpack_unpackNumberArray__P140743.info = {"start":6107,"length":669,"line":193,"column":4,"endLine":213,"endColumn":5,"fileName":"pxt_modules/base/buffer.ts","functionName":"unpackNumberArray","argumentNames":["buf","offset"]}

function msgpack_unpackNumberArray__P140743_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: msgpack_unpackNumberArray__P140743, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  res___142152: undefined,
  fmt___142159: undefined,
  v___142168: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Fx8__P140699(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = (s.arg0 * 256);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 | 0);
    return leave(s, r0)
  default: oops()
} } }
Fx8__P140699.info = {"start":42,"length":68,"line":4,"column":0,"endLine":6,"endColumn":1,"fileName":"pxt_modules/base/fixed.ts","functionName":"Fx8","argumentNames":["v"]}

function Fx8__P140699_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Fx8__P140699, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function esp32_NinaController_getTemperature__P141304(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.resp___142216 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, esp32_NinaController__C141258_VT)) failedCast(r0);
    s.tmp_0 = esp32_NinaController_sendCommandGetResponse__P141270_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = 27;
    r0 = pxsim_Array__mk();
    s.tmp_0.arg2 = r0;
    s.tmp_0.arg3 = 1;
    s.tmp_0.arg4 = false;
    s.tmp_0.arg5 = false;
    s.pc = 3; return s.tmp_0;
  case 3:
    r0 = s.retval;
    s.resp___142216 = (r0);
    r0 = pxsim_Array__getAt(s.resp___142216, 0);
    s.tmp_2 = r0;
    r0 = pxsim.BufferMethods.length(s.tmp_2);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 != 4);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.tmp_3 = net_fail__P141084_mk(s);
    s.tmp_3.arg0 = "failed to get temp";
    s.pc = 4; return s.tmp_3;
  case 4:
    r0 = s.retval;
  case 1:
  case 2:
    r0 = pxsim_Array__getAt(s.resp___142216, 0);
    s.tmp_0 = r0;
    r0 = pxsim.BufferMethods.getNumber(s.tmp_0, 13, 0);
    return leave(s, r0)
  default: oops()
} } }
esp32_NinaController_getTemperature__P141304.info = {"start":24302,"length":269,"line":672,"column":8,"endLine":678,"endColumn":9,"fileName":"ninacontroller.ts","functionName":"getTemperature","argumentNames":["this"]}

function esp32_NinaController_getTemperature__P141304_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: esp32_NinaController_getTemperature__P141304, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  resp___142216: undefined,
  arg0: undefined,
} }





function net_fail__P141084(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = net_log__P141082_mk(s);
    if ((s.arg0) && (s.arg0).vtable) {
    setupResume(s, 2);
    pxsim_String__stringConv(s.arg0);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.arg0) + ""; }
  case 2:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim_String__concat("error: ", s.tmp_1);
    s.tmp_0.arg0 = r0;
    s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = pxsim_pxtcore.throwValue(s.arg0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
net_fail__P141084.info = {"start":489,"length":103,"line":18,"column":4,"endLine":21,"endColumn":5,"fileName":"pxt_modules/net/net.ts","functionName":"fail","argumentNames":["reason"]}

function net_fail__P141084_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: net_fail__P141084, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function esp32_NinaController_sendCommandGetResponse__P141270(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.resp___142246 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.arg5 = (s.lambdaArgs[5]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, esp32_NinaController__C141258_VT)) failedCast(r0);
    s.tmp_0 = esp32_NinaController_lock__P141268_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    s.tmp_0 = esp32_NinaController__sendCommand__P141265_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    s.tmp_0.arg2 = s.arg2;
    s.tmp_0.arg3 = s.arg4;
    s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.tmp_0 = esp32_NinaController__waitResponseCmd__P141267_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    s.tmp_0.arg2 = s.arg3;
    s.tmp_0.arg3 = s.arg5;
    s.pc = 3; return s.tmp_0;
  case 3:
    r0 = s.retval;
    s.resp___142246 = (r0);
    s.tmp_0 = esp32_NinaController_unlock__P141269_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    r0 = s.resp___142246;
    return leave(s, r0)
  default: oops()
} } }
esp32_NinaController_sendCommandGetResponse__P141270.info = {"start":8733,"length":381,"line":262,"column":8,"endLine":270,"endColumn":9,"fileName":"ninacontroller.ts","functionName":"sendCommandGetResponse","argumentNames":["this","cmd","params","reply_params","sent_param_len_16","recv_param_len_16"]}

function esp32_NinaController_sendCommandGetResponse__P141270_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: esp32_NinaController_sendCommandGetResponse__P141270, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  resp___142246: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
  arg5: undefined,
} }





function esp32_NinaController_unlock__P141269(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, esp32_NinaController__C141258_VT)) failedCast(r0);
    r0 = s.arg0.fields["_locked"];
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.tmp_3 = net_fail__P141084_mk(s);
    s.tmp_3.arg0 = "not locked!";
    s.pc = 3; return s.tmp_3;
  case 3:
    r0 = s.retval;
  case 1:
  case 2:
    r0 = (s.arg0).fields["_locked"] = (false);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
esp32_NinaController_unlock__P141269.info = {"start":8590,"length":133,"line":256,"column":8,"endLine":260,"endColumn":9,"fileName":"ninacontroller.ts","functionName":"unlock","argumentNames":["this"]}

function esp32_NinaController_unlock__P141269_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: esp32_NinaController_unlock__P141269, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
} }





function esp32_NinaController__waitResponseCmd__P141267(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.responses___142274 = undefined;
    s.num___142302 = undefined;
    s.param_len___142307 = undefined;
    s.response___142327 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, esp32_NinaController__C141258_VT)) failedCast(r0);
    s.tmp_0 = net_debug__P141083_mk(s);
    s.tmp_0.arg0 = "wait response cmd";
    s.pc = 12; return s.tmp_0;
  case 12:
    r0 = s.retval;
    s.tmp_3 = esp32_NinaController_waitForReady__P141264_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.pc = 13; return s.tmp_3;
  case 13:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = null;
    { step = 11; continue; }
  case 1:
  case 2:
    r0 = s.arg0.fields["_cs"];
    s.tmp_4 = r0;
    r0 = pxsim.DigitalInOutPinMethods.digitalWrite(s.tmp_4, false);
    r0 = pxsim_Array__mk();
    s.responses___142274 = (r0);
    s.tmp_3 = esp32_NinaController_waitSPIChar__P141263_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.tmp_3.arg1 = 224;
    s.pc = 14; return s.tmp_3;
  case 14:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    r0 = s.arg0.fields["_cs"];
    s.tmp_4 = r0;
    r0 = pxsim.DigitalInOutPinMethods.digitalWrite(s.tmp_4, true);
    r0 = null;
    { step = 11; continue; }
  case 3:
  case 4:
    s.tmp_0 = esp32_NinaController_checkData__P141262_mk(s);
    s.tmp_0.arg0 = s.arg0;
    r0 = (s.arg1 | 128);
    s.tmp_0.arg1 = r0;
    s.tmp_0.arg2 = undefined;
    s.pc = 15; return s.tmp_0;
  case 15:
    r0 = s.retval;
    r0 = (s.arg2 !== undefined);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    s.tmp_1 = esp32_NinaController_checkData__P141262_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.tmp_1.arg1 = s.arg2;
    if ((s.arg1) && (s.arg1).vtable) {
    setupResume(s, 17);
    pxsim_String__stringConv(s.arg1);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.arg1) + ""; }
  case 17:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_String_.mkEmpty();
    s.tmp_3 = r0;
    r0 = pxsim_String__concat(s.tmp_2, s.tmp_3);
    s.tmp_1.arg2 = r0;
    s.pc = 16; return s.tmp_1;
  case 16:
    r0 = s.retval;
    { step = 6; continue; }
  case 5:
    s.tmp_0 = esp32_NinaController_readByte__P141261_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.pc = 18; return s.tmp_0;
  case 18:
    r0 = s.retval;
    s.arg2 = (r0);
  case 6:
    s.num___142302 = (0);
  case 7:
    r0 = (s.num___142302 < s.arg2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 10; continue; }
    s.tmp_1 = esp32_NinaController_readByte__P141261_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.pc = 19; return s.tmp_1;
  case 19:
    r0 = s.retval;
    s.param_len___142307 = (r0);
    r0 = pxsim_numops_toBoolDecr(s.arg3);
    if (!r0) { step = 8; continue; }
    r0 = (s.param_len___142307 << 8);
    s.param_len___142307 = (r0);
    s.tmp_0 = r0 = s.param_len___142307;
    s.tmp_2 = esp32_NinaController_readByte__P141261_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.pc = 20; return s.tmp_2;
  case 20:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0 | s.tmp_1);
    s.param_len___142307 = (r0);
  case 8:
  case 9:
    s.tmp_0 = net_debug__P141083_mk(s);
    if ((s.num___142302) && (s.num___142302).vtable) {
    setupResume(s, 22);
    pxsim_String__stringConv(s.num___142302);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.num___142302) + ""; }
  case 22:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = pxsim_String__concat("\tParameter #", s.tmp_3);
    s.tmp_2 = r0;
    r0 = pxsim_String__concat(s.tmp_2, " length is ");
    s.tmp_1 = r0;
    if ((s.param_len___142307) && (s.param_len___142307).vtable) {
    setupResume(s, 23);
    pxsim_String__stringConv(s.param_len___142307);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.param_len___142307) + ""; }
  case 23:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = pxsim_String__concat(s.tmp_1, s.tmp_4);
    s.tmp_0.arg0 = r0;
    s.pc = 21; return s.tmp_0;
  case 21:
    r0 = s.retval;
    r0 = pxsim.control.createBuffer(s.param_len___142307);
    s.response___142327 = (r0);
    s.tmp_0 = esp32_NinaController_spiTransfer__P141266_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = null;
    s.tmp_0.arg2 = s.response___142327;
    s.pc = 24; return s.tmp_0;
  case 24:
    r0 = s.retval;
    r0 = pxsim_Array__push(s.responses___142274, s.response___142327);
    r0 = (s.num___142302 + 1);
    s.num___142302 = (r0);
    { step = 7; continue; }
  case 10:
    s.tmp_0 = esp32_NinaController_checkData__P141262_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = 238;
    s.tmp_0.arg2 = undefined;
    s.pc = 25; return s.tmp_0;
  case 25:
    r0 = s.retval;
    r0 = s.arg0.fields["_cs"];
    s.tmp_0 = r0;
    r0 = pxsim.DigitalInOutPinMethods.digitalWrite(s.tmp_0, true);
    s.tmp_0 = net_debug__P141083_mk(s);
    r0 = pxsim_Array__length(s.responses___142274);
    s.tmp_2 = r0;
    if ((s.tmp_2) && (s.tmp_2).vtable) {
    setupResume(s, 27);
    pxsim_String__stringConv(s.tmp_2);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_2) + ""; }
  case 27:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim_String__concat("responses ", s.tmp_1);
    s.tmp_0.arg0 = r0;
    s.pc = 26; return s.tmp_0;
  case 26:
    r0 = s.retval;
    r0 = s.responses___142274;
  case 11:
    return leave(s, r0)
  default: oops()
} } }
esp32_NinaController__waitResponseCmd__P141267.info = {"start":7120,"length":1295,"line":213,"column":8,"endLine":247,"endColumn":9,"fileName":"ninacontroller.ts","functionName":"_waitResponseCmd","argumentNames":["this","cmd","num_responses","param_len_16"]}

function esp32_NinaController__waitResponseCmd__P141267_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: esp32_NinaController__waitResponseCmd__P141267, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  responses___142274: undefined,
  num___142302: undefined,
  param_len___142307: undefined,
  response___142327: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function esp32_NinaController_readByte__P141261(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.r___142356 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, esp32_NinaController__C141258_VT)) failedCast(r0);
    s.tmp_0 = esp32_buffer1__P141257_mk(s);
    s.tmp_0.arg0 = 0;
    s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    s.r___142356 = (r0);
    s.tmp_0 = esp32_NinaController_spiTransfer__P141266_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = null;
    s.tmp_0.arg2 = s.r___142356;
    s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = pxsim.BufferMethods.getByte(s.r___142356, 0);
    return leave(s, r0)
  default: oops()
} } }
esp32_NinaController_readByte__P141261.info = {"start":3952,"length":133,"line":118,"column":8,"endLine":122,"endColumn":9,"fileName":"ninacontroller.ts","functionName":"readByte","argumentNames":["this"]}

function esp32_NinaController_readByte__P141261_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: esp32_NinaController_readByte__P141261, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  r___142356: undefined,
  arg0: undefined,
} }





function esp32_NinaController_checkData__P141262(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.r___142367 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, esp32_NinaController__C141258_VT)) failedCast(r0);
    s.tmp_0 = esp32_NinaController_readByte__P141261_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.pc = 5; return s.tmp_0;
  case 5:
    r0 = s.retval;
    s.r___142367 = (r0);
    r0 = (s.r___142367 != s.arg1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.tmp_1 = r0 = s.arg2;
    r0 = pxsim_numops_toBool(s.tmp_1);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_1;
    { step = 2; continue; }
  case 1:
    r0 = pxsim_String_.mkEmpty();
  case 2:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    s.tmp_3 = net_fail__P141084_mk(s);
    if ((s.arg1) && (s.arg1).vtable) {
    setupResume(s, 7);
    pxsim_String__stringConv(s.arg1);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.arg1) + ""; }
  case 7:
    r0 = s.retval;
    s.tmp_9 = r0;
    r0 = pxsim_String__concat("Expected ", s.tmp_9);
    s.tmp_8 = r0;
    r0 = pxsim_String__concat(s.tmp_8, " but got ");
    s.tmp_7 = r0;
    if ((s.r___142367) && (s.r___142367).vtable) {
    setupResume(s, 8);
    pxsim_String__stringConv(s.r___142367);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.r___142367) + ""; }
  case 8:
    r0 = s.retval;
    s.tmp_10 = r0;
    r0 = pxsim_String__concat(s.tmp_7, s.tmp_10);
    s.tmp_6 = r0;
    r0 = pxsim_String__concat(s.tmp_6, "; ");
    s.tmp_5 = r0;
    if ((s.tmp_5) && (s.tmp_5).vtable) {
    setupResume(s, 9);
    pxsim_String__stringConv(s.tmp_5);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_5) + ""; }
  case 9:
    r0 = s.retval;
    s.tmp_4 = r0;
    if ((s.tmp_2) && (s.tmp_2).vtable) {
    setupResume(s, 10);
    pxsim_String__stringConv(s.tmp_2);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_2) + ""; }
  case 10:
    r0 = s.retval;
    s.tmp_11 = r0;
    r0 = pxsim_String__concat(s.tmp_4, s.tmp_11);
    s.tmp_3.arg0 = r0;
    s.pc = 6; return s.tmp_3;
  case 6:
    r0 = s.retval;
  case 3:
  case 4:
    r0 = false;
    return leave(s, r0)
  default: oops()
} } }
esp32_NinaController_checkData__P141262.info = {"start":4095,"length":240,"line":124,"column":8,"endLine":129,"endColumn":9,"fileName":"ninacontroller.ts","functionName":"checkData","argumentNames":["this","desired","msg"]}

function esp32_NinaController_checkData__P141262_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: esp32_NinaController_checkData__P141262, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  tmp_11: undefined,
  r___142367: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function esp32_NinaController_waitSPIChar__P141263(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.times___142394 = undefined;
    s.r___142403 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, esp32_NinaController__C141258_VT)) failedCast(r0);
    r0 = pxsim.control.millis();
    s.times___142394 = (r0);
  case 1:
    r0 = pxsim.control.millis();
    s.tmp_2 = r0;
    r0 = (s.tmp_2 - s.times___142394);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 < 100);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 6; continue; }
    s.tmp_3 = esp32_NinaController_readByte__P141261_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.pc = 8; return s.tmp_3;
  case 8:
    r0 = s.retval;
    s.r___142403 = (r0);
    r0 = (s.r___142403 == 239);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 2; continue; }
    s.tmp_1 = net_log__P141082_mk(s);
    s.tmp_1.arg0 = "error response to command";
    s.pc = 9; return s.tmp_1;
  case 9:
    r0 = s.retval;
    r0 = false;
    { step = 7; continue; }
  case 2:
  case 3:
    r0 = (s.r___142403 == s.arg1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 4; continue; }
    r0 = true;
    { step = 7; continue; }
  case 4:
  case 5:
    { step = 1; continue; }
  case 6:
    s.tmp_1 = net_log__P141082_mk(s);
    s.tmp_1.arg0 = "timed out waiting for SPI char";
    s.pc = 10; return s.tmp_1;
  case 10:
    r0 = s.retval;
    r0 = false;
  case 7:
    return leave(s, r0)
  default: oops()
} } }
esp32_NinaController_waitSPIChar__P141263.info = {"start":4437,"length":582,"line":132,"column":8,"endLine":148,"endColumn":9,"fileName":"ninacontroller.ts","functionName":"waitSPIChar","argumentNames":["this","desired"]}

function esp32_NinaController_waitSPIChar__P141263_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: esp32_NinaController_waitSPIChar__P141263, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  times___142394: undefined,
  r___142403: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function esp32_NinaController_waitForReady__P141264(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, esp32_NinaController__C141258_VT)) failedCast(r0);
    s.tmp_0 = net_debug__P141083_mk(s);
    r0 = s.arg0.fields["_busy"];
    s.tmp_3 = r0;
    r0 = pxsim.DigitalInOutPinMethods.digitalRead(s.tmp_3);
    s.tmp_2 = r0;
    if ((s.tmp_2) && (s.tmp_2).vtable) {
    setupResume(s, 7);
    pxsim_String__stringConv(s.tmp_2);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_2) + ""; }
  case 7:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim_String__concat("wait for ready ", s.tmp_1);
    s.tmp_0.arg0 = r0;
    s.pc = 6; return s.tmp_0;
  case 6:
    r0 = s.retval;
    r0 = s.arg0.fields["_busy"];
    s.tmp_1 = r0;
    r0 = pxsim.DigitalInOutPinMethods.digitalRead(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = pxsim_pxtcore_mkAction(1, inline__P142427);
    s.tmp_2 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_2, 0, s.arg0);
    s.tmp_3 = pauseUntil__P140831_mk(s);
    s.tmp_3.arg0 = s.tmp_2;
    s.tmp_3.arg1 = 10000;
    s.pc = 8; return s.tmp_3;
  case 8:
    r0 = s.retval;
    s.tmp_0 = net_debug__P141083_mk(s);
    r0 = s.arg0.fields["_busy"];
    s.tmp_3 = r0;
    r0 = pxsim.DigitalInOutPinMethods.digitalRead(s.tmp_3);
    s.tmp_2 = r0;
    if ((s.tmp_2) && (s.tmp_2).vtable) {
    setupResume(s, 10);
    pxsim_String__stringConv(s.tmp_2);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_2) + ""; }
  case 10:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim_String__concat("busy = ", s.tmp_1);
    s.tmp_0.arg0 = r0;
    s.pc = 9; return s.tmp_0;
  case 9:
    r0 = s.retval;
  case 1:
  case 2:
    r0 = s.arg0.fields["_busy"];
    s.tmp_1 = r0;
    r0 = pxsim.DigitalInOutPinMethods.digitalRead(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.tmp_2 = net_log__P141082_mk(s);
    s.tmp_2.arg0 = "timed out waiting for ready";
    s.pc = 11; return s.tmp_2;
  case 11:
    r0 = s.retval;
    r0 = false;
    { step = 5; continue; }
  case 3:
  case 4:
    r0 = true;
  case 5:
    return leave(s, r0)
  default: oops()
} } }
esp32_NinaController_waitForReady__P141264.info = {"start":5098,"length":492,"line":153,"column":8,"endLine":166,"endColumn":9,"fileName":"ninacontroller.ts","functionName":"waitForReady","argumentNames":["this"]}

function esp32_NinaController_waitForReady__P141264_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: esp32_NinaController_waitForReady__P141264, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
} }





function inline__P142427(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    r0 = s.caps[0].fields["_busy"];
    s.tmp_2 = r0;
    r0 = pxsim.DigitalInOutPinMethods.digitalRead(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_0);
    return leave(s, r0)
  default: oops()
} } }
inline__P142427.info = {"start":5263,"length":31,"line":156,"column":27,"endLine":156,"endColumn":58,"fileName":"ninacontroller.ts","functionName":"inline","argumentNames":[]}

function inline__P142427_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P142427, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
} }





function pauseUntil__P140831(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_numops_toBoolDecr(s.arg0);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    s.tmp_2 = lambda_1_mk(s);
    s.tmp_2.argL = s.arg0;
    setupLambda(s.tmp_2, s.tmp_2.argL);
    s.pc = 8; return s.tmp_2;
  case 8:
    r0 = s.retval;
  case 2:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 3; continue; }
    { step = 7; continue; }
  case 3:
  case 4:
    r0 = pxsim_numops_toBoolDecr(s.arg1);
    s.tmp_5 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_5);
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_4);
    if (!r0) { step = 5; continue; }
    s.arg1 = (0);
  case 5:
  case 6:
    s.tmp_0 = control___queuePollEvent__P140816_mk(s);
    s.tmp_0.arg0 = s.arg1;
    s.tmp_0.arg1 = s.arg0;
    s.tmp_0.arg2 = undefined;
    s.pc = 9; return s.tmp_0;
  case 9:
    r0 = s.retval;
  case 7:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
pauseUntil__P140831.info = {"start":9766,"length":227,"line":329,"column":0,"endLine":333,"endColumn":1,"fileName":"pxt_modules/base/control.ts","functionName":"pauseUntil","argumentNames":["condition","timeOut"]}

function pauseUntil__P140831_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: pauseUntil__P140831, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function control___queuePollEvent__P140816(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.ev___142462 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_pxtcore_mkClassInstance(control_PollEvent__C140811_VT);
    s.tmp_0 = r0;
    s.tmp_1 = control_PollEvent_constructor__P140812_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    r0 = pxsim.control.allocateNotifyEvent();
    s.tmp_1.arg1 = r0;
    s.tmp_1.arg2 = 1;
    r0 = pxsim.control.millis();
    s.tmp_1.arg3 = r0;
    s.tmp_1.arg4 = s.arg0;
    s.tmp_1.arg5 = s.arg1;
    r0 = pxsim_numops_toBoolDecr(s.arg2);
    s.tmp_2 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_2);
    s.tmp_1.arg6 = r0;
    s.pc = 5; return s.tmp_1;
  case 5:
    r0 = s.retval;
    s.ev___142462 = (s.tmp_0);
    r0 = pxsim_numops_toBoolDecr(globals._pollEventQueue___140814);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = pxsim_Array__mk();
    s.tmp_2 = r0;
    r0 = pxsim_Array__push(s.tmp_2, s.ev___142462);
    globals._pollEventQueue___140814 = (s.tmp_2);
    r0 = pxsim.control.runInParallel(control_pollEvents__P140815);
    { step = 2; continue; }
  case 1:
    r0 = pxsim_Array__push(globals._pollEventQueue___140814, s.ev___142462);
  case 2:
    r0 = pxsim_numops_toBoolDecr(s.arg2);
    if (!r0) { step = 3; continue; }
    s.tmp_0 = control_onEvent__P140864_mk(s);
    r0 = s.ev___142462.fields["eid"];
    s.tmp_0.arg0 = r0;
    r0 = s.ev___142462.fields["vid"];
    s.tmp_0.arg1 = r0;
    s.tmp_0.arg2 = s.arg2;
    s.tmp_0.arg3 = 16;
    s.pc = 6; return s.tmp_0;
  case 6:
    r0 = s.retval;
    { step = 4; continue; }
  case 3:
    r0 = s.ev___142462.fields["eid"];
    s.tmp_0 = r0;
    r0 = s.ev___142462.fields["vid"];
    s.tmp_1 = r0;
    setupResume(s, 7);
    pxsim.control.waitForEvent(s.tmp_0, s.tmp_1);
    checkResumeConsumed();
    return;
  case 7:
    r0 = s.retval;
  case 4:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
control___queuePollEvent__P140816.info = {"start":5895,"length":739,"line":195,"column":4,"endLine":220,"endColumn":5,"fileName":"pxt_modules/base/control.ts","functionName":"__queuePollEvent","argumentNames":["timeOut","condition","handler"]}

function control___queuePollEvent__P140816_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control___queuePollEvent__P140816, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  ev___142462: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function control_onEvent__P140864(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.ctx___142504 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = control_eventContext__P140886_mk(s);
    s.pc = 3; return s.tmp_0;
  case 3:
    r0 = s.retval;
    s.ctx___142504 = (r0);
    r0 = pxsim_numops_toBoolDecr(s.ctx___142504);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = pxsim.control.internalOnEvent(s.arg0, s.arg1, s.arg2, s.arg3);
    { step = 2; continue; }
  case 1:
    s.tmp_0 = control_EventContext_registerHandler__P140878_mk(s);
    s.tmp_0.arg0 = s.ctx___142504;
    s.tmp_0.arg1 = s.arg0;
    s.tmp_0.arg2 = s.arg1;
    s.tmp_0.arg3 = s.arg2;
    s.tmp_0.arg4 = s.arg3;
    s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
control_onEvent__P140864.info = {"start":336,"length":325,"line":9,"column":4,"endLine":15,"endColumn":5,"fileName":"pxt_modules/base/eventcontext.ts","functionName":"onEvent","argumentNames":["src","value","handler","flags"]}

function control_onEvent__P140864_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control_onEvent__P140864, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  ctx___142504: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function control_EventContext_registerHandler__P140878(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.h___142527 = undefined;
    s.unnamed412___U1 = undefined;
    s.unnamed413___U2 = undefined;
    s.hn___142550 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, control_EventContext__C140871_VT)) failedCast(r0);
    s.h___142527 = (undefined);
    r0 = s.arg0.fields["handlers"];
    s.unnamed412___U1 = (r0);
    s.unnamed413___U2 = (0);
  case 1:
    s.tmp_0 = r0 = s.unnamed413___U2;
    r0 = pxsim_Array__length(s.unnamed412___U1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 6; continue; }
    r0 = pxsim_Array__getAt(s.unnamed412___U1, s.unnamed413___U2);
    s.h___142527 = (r0);
    r0 = s.h___142527.fields["src"];
    s.tmp_3 = r0;
    r0 = (s.tmp_3 == s.arg1);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBool(s.tmp_2);
    if (r0) { step = 2; continue; }
    r0 = s.tmp_2;
    { step = 3; continue; }
  case 2:
    r0 = s.h___142527.fields["value"];
    s.tmp_4 = r0;
    r0 = (s.tmp_4 == s.arg2);
  case 3:
    // jmp value (already in r0)
    s.tmp_5 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_5);
    if (!r0) { step = 4; continue; }
    r0 = (s.h___142527).fields["flags"] = (s.arg4);
    r0 = (s.h___142527).fields["handler"] = (s.arg3);
    { step = 7; continue; }
  case 4:
  case 5:
    r0 = (s.unnamed413___U2 + 1);
    s.unnamed413___U2 = (r0);
    { step = 1; continue; }
  case 6:
    s.unnamed412___U1 = (undefined);
    r0 = pxsim_pxtcore_mkClassInstance(control_EventHandler__C140866_VT);
    s.tmp_0 = r0;
    s.tmp_1 = control_EventHandler_constructor__P140869_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = s.arg1;
    s.tmp_1.arg2 = s.arg2;
    s.tmp_1.arg3 = s.arg3;
    s.tmp_1.arg4 = s.arg4;
    s.pc = 8; return s.tmp_1;
  case 8:
    r0 = s.retval;
    s.hn___142550 = (s.tmp_0);
    r0 = s.arg0.fields["handlers"];
    s.tmp_0 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.hn___142550);
    s.tmp_0 = control_EventHandler_register__P140867_mk(s);
    s.tmp_0.arg0 = s.hn___142550;
    s.pc = 9; return s.tmp_0;
  case 9:
    r0 = s.retval;
  case 7:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
control_EventContext_registerHandler__P140878.info = {"start":5145,"length":525,"line":158,"column":8,"endLine":171,"endColumn":9,"fileName":"pxt_modules/base/eventcontext.ts","functionName":"registerHandler","argumentNames":["this","src","value","handler","flags"]}

function control_EventContext_registerHandler__P140878_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control_EventContext_registerHandler__P140878, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  h___142527: undefined,
  unnamed412___U1: undefined,
  unnamed413___U2: undefined,
  hn___142550: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
} }





function control_EventHandler_register__P140867(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, control_EventHandler__C140866_VT)) failedCast(r0);
    r0 = pxsim_pxtcore_mkAction(1, inline__P142571);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    r0 = s.arg0.fields["src"];
    s.tmp_1 = r0;
    r0 = s.arg0.fields["value"];
    s.tmp_2 = r0;
    r0 = s.arg0.fields["flags"];
    s.tmp_3 = r0;
    r0 = pxsim.control.internalOnEvent(s.tmp_1, s.tmp_2, s.tmp_0, s.tmp_3);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
control_EventHandler_register__P140867.info = {"start":954,"length":165,"line":30,"column":8,"endLine":34,"endColumn":9,"fileName":"pxt_modules/base/eventcontext.ts","functionName":"register","argumentNames":["this"]}

function control_EventHandler_register__P140867_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control_EventHandler_register__P140867, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
} }





function inline__P142571(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    r0 = s.caps[0].fields["handler"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.tmp_1 = lambda_1_mk(s);
    r0 = s.caps[0].fields["handler"];
    s.tmp_1.argL = r0;
    setupLambda(s.tmp_1, s.tmp_1.argL);
    s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
  case 1:
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
inline__P142571.info = {"start":1025,"length":71,"line":31,"column":58,"endLine":33,"endColumn":13,"fileName":"pxt_modules/base/eventcontext.ts","functionName":"inline","argumentNames":[]}

function inline__P142571_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P142571, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
} }





function control_EventHandler_constructor__P140869(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, control_EventHandler__C140866_VT)) failedCast(r0);
    r0 = (s.arg0).fields["src"] = (s.arg1);
    r0 = (s.arg0).fields["value"] = (s.arg2);
    r0 = (s.arg0).fields["handler"] = (s.arg3);
    r0 = (s.arg0).fields["flags"] = (s.arg4);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
control_EventHandler_constructor__P140869.info = {"start":779,"length":165,"line":23,"column":8,"endLine":28,"endColumn":13,"fileName":"pxt_modules/base/eventcontext.ts","functionName":"inline","argumentNames":["this","src","value","handler","flags"]}

function control_EventHandler_constructor__P140869_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control_EventHandler_constructor__P140869, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
} }





function control_eventContext__P140886(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    r0 = pxsim_numops_toBoolDecr(globals.eventContexts___140885);
    if (!r0) { step = 1; continue; }
    s.tmp_0 = r0 = globals.eventContexts___140885;
    r0 = pxsim_Array__length(globals.eventContexts___140885);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 - 1);
    s.tmp_1 = r0;
    r0 = pxsim_Array__getAt(s.tmp_0, s.tmp_1);
    { step = 2; continue; }
  case 1:
    r0 = undefined;
  case 2:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = s.tmp_3;
    return leave(s, r0)
  default: oops()
} } }
control_eventContext__P140886.info = {"start":6479,"length":136,"line":198,"column":4,"endLine":200,"endColumn":5,"fileName":"pxt_modules/base/eventcontext.ts","functionName":"eventContext","argumentNames":[]}

function control_eventContext__P140886_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control_eventContext__P140886, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
} }





function control_pollEvents__P140815(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.now___142589 = undefined;
    s.i___142592 = undefined;
    s.ev___142598 = undefined;
  case 1:
    r0 = pxsim_Array__length(globals._pollEventQueue___140814);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 > 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 12; continue; }
    r0 = pxsim.control.millis();
    s.now___142589 = (r0);
    s.i___142592 = (0);
  case 2:
    s.tmp_1 = r0 = s.i___142592;
    r0 = pxsim_Array__length(globals._pollEventQueue___140814);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 11; continue; }
    r0 = pxsim_Array__getAt(globals._pollEventQueue___140814, s.i___142592);
    s.ev___142598 = (r0);
    s.tmp_1 = lambda_1_mk(s);
    r0 = s.ev___142598.fields["condition"];
    s.tmp_1.argL = r0;
    setupLambda(s.tmp_1, s.tmp_1.argL);
    s.pc = 13; return s.tmp_1;
  case 13:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 3; continue; }
    r0 = s.tmp_0;
    { step = 6; continue; }
  case 3:
    r0 = s.ev___142598.fields["timeOut"];
    s.tmp_3 = r0;
    r0 = (s.tmp_3 > 0);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBool(s.tmp_2);
    if (r0) { step = 4; continue; }
    r0 = s.tmp_2;
    { step = 5; continue; }
  case 4:
    r0 = s.ev___142598.fields["start"];
    s.tmp_5 = r0;
    r0 = (s.now___142589 - s.tmp_5);
    s.tmp_4 = r0;
    r0 = s.ev___142598.fields["timeOut"];
    s.tmp_6 = r0;
    r0 = (s.tmp_4 > s.tmp_6);
  case 5:
    // jmp value (already in r0)
    s.tmp_7 = r0;
    r0 = s.tmp_7;
  case 6:
    // jmp value (already in r0)
    s.tmp_8 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_8);
    if (!r0) { step = 9; continue; }
    r0 = s.ev___142598.fields["eid"];
    s.tmp_9 = r0;
    r0 = s.ev___142598.fields["vid"];
    s.tmp_10 = r0;
    r0 = pxsim.control.raiseEvent(s.tmp_9, s.tmp_10);
    r0 = s.ev___142598.fields["once"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 7; continue; }
    s.tmp_1 = helpers_arraySplice__P140657_mk(s);
    s.tmp_1.arg0 = globals._pollEventQueue___140814;
    s.tmp_1.arg1 = s.i___142592;
    s.tmp_1.arg2 = 1;
    s.pc = 14; return s.tmp_1;
  case 14:
    r0 = s.retval;
    r0 = (s.i___142592 - 1);
    s.i___142592 = (r0);
  case 7:
  case 8:
  case 9:
  case 10:
    r0 = (s.i___142592 + 1);
    s.i___142592 = (r0);
    { step = 2; continue; }
  case 11:
    s.tmp_0 = pause__P140892_mk(s);
    s.tmp_0.arg0 = 50;
    s.pc = 15; return s.tmp_0;
  case 15:
    r0 = s.retval;
    { step = 1; continue; }
  case 12:
    globals._pollEventQueue___140814 = (undefined);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
control_pollEvents__P140815.info = {"start":5251,"length":638,"line":176,"column":4,"endLine":193,"endColumn":5,"fileName":"pxt_modules/base/control.ts","functionName":"pollEvents","argumentNames":[]}

function control_pollEvents__P140815_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control_pollEvents__P140815, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  now___142589: undefined,
  i___142592: undefined,
  ev___142598: undefined,
} }





function helpers_arraySplice__P140657(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.i___142647 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = (s.arg1 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    { step = 5; continue; }
  case 1:
  case 2:
    s.i___142647 = (0);
  case 3:
    r0 = (s.i___142647 < s.arg2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 4; continue; }
    r0 = pxsim_Array_.removeAt(s.arg0, s.arg1);
    r0 = (s.i___142647 + 1);
    s.i___142647 = (r0);
    { step = 3; continue; }
  case 4:
  case 5:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
helpers_arraySplice__P140657.info = {"start":1784,"length":213,"line":77,"column":4,"endLine":84,"endColumn":5,"fileName":"pxt_modules/base/pxt-helpers.ts","functionName":"arraySplice","argumentNames":["arr","start","len"]}

function helpers_arraySplice__P140657_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_arraySplice__P140657, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  i___142647: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function control_PollEvent_constructor__P140812(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.arg5 = (s.lambdaArgs[5]);
      s.arg6 = (s.lambdaArgs[6]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, control_PollEvent__C140811_VT)) failedCast(r0);
    r0 = (s.arg0).fields["eid"] = (s.arg1);
    r0 = (s.arg0).fields["vid"] = (s.arg2);
    r0 = (s.arg0).fields["start"] = (s.arg3);
    r0 = (s.arg0).fields["timeOut"] = (s.arg4);
    r0 = (s.arg0).fields["condition"] = (s.arg5);
    r0 = (s.arg0).fields["once"] = (s.arg6);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
control_PollEvent_constructor__P140812.info = {"start":4872,"length":316,"line":164,"column":8,"endLine":171,"endColumn":9,"fileName":"pxt_modules/base/control.ts","functionName":"inline","argumentNames":["this","eid","vid","start","timeOut","condition","once"]}

function control_PollEvent_constructor__P140812_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control_PollEvent_constructor__P140812, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
  arg5: undefined,
  arg6: undefined,
} }





function net_debug__P141083(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = (globals.logPriority___141081 > 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.tmp_1 = console_add__P140838_mk(s);
    s.tmp_1.arg0 = 0;
    if ((s.arg0) && (s.arg0).vtable) {
    setupResume(s, 4);
    pxsim_String__stringConv(s.arg0);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.arg0) + ""; }
  case 4:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_String__concat("net:", s.tmp_2);
    s.tmp_1.arg1 = r0;
    s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
  case 1:
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
net_debug__P141083.info = {"start":331,"length":153,"line":14,"column":4,"endLine":17,"endColumn":5,"fileName":"pxt_modules/net/net.ts","functionName":"debug","argumentNames":["msg"]}

function net_debug__P141083_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: net_debug__P141083, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
} }





function esp32_NinaController__sendCommand__P141265(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.n___142705 = undefined;
    s.packet___142730 = undefined;
    s.k___142734 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, esp32_NinaController__C141258_VT)) failedCast(r0);
    s.tmp_0 = r0 = s.arg2;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = pxsim_Array__mk();
  case 2:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    s.arg2 = (s.tmp_1);
    r0 = pxsim_pxtrt.mklocRef();
    s.n___142705 = (r0);
    r0 = pxsim_pxtrt_stlocRef(s.n___142705, 3);
    r0 = pxsim_pxtcore_mkAction(2, inline__P142709);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg3);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 1, s.n___142705);
    s.tmp_1 = helpers_arrayForEach__P140668_mk(s);
    s.tmp_1.arg0 = s.arg2;
    s.tmp_1.arg1 = s.tmp_0;
    s.pc = 10; return s.tmp_1;
  case 10:
    r0 = s.retval;
    s.tmp_0 = r0 = s.n___142705;
    r0 = pxsim_pxtrt_ldlocRef(s.n___142705);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 + 1);
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt_stlocRef(s.tmp_0, s.tmp_1);
  case 3:
    r0 = pxsim_pxtrt_ldlocRef(s.n___142705);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 % 4);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 4; continue; }
    s.tmp_2 = r0 = s.n___142705;
    r0 = pxsim_pxtrt_ldlocRef(s.n___142705);
    s.tmp_4 = r0;
    r0 = (s.tmp_4 + 1);
    s.tmp_3 = r0;
    r0 = pxsim_pxtrt_stlocRef(s.tmp_2, s.tmp_3);
    { step = 3; continue; }
  case 4:
    r0 = pxsim_pxtrt_ldlocRef(s.n___142705);
    s.tmp_0 = r0;
    r0 = pxsim.control.createBuffer(s.tmp_0);
    s.packet___142730 = (r0);
    r0 = pxsim_pxtrt.mklocRef();
    s.k___142734 = (r0);
    r0 = pxsim_pxtrt_stlocRef(s.k___142734, 0);
    s.tmp_0 = r0 = s.k___142734;
    r0 = pxsim_pxtrt_ldlocRef(s.k___142734);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 + 1);
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt_stlocRef(s.tmp_0, s.tmp_1);
    r0 = pxsim.BufferMethods.setByte(s.packet___142730, s.tmp_2, 224);
    s.tmp_0 = r0 = s.k___142734;
    r0 = pxsim_pxtrt_ldlocRef(s.k___142734);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 + 1);
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt_stlocRef(s.tmp_0, s.tmp_1);
    s.tmp_3 = r0 = s.packet___142730;
    r0 = (s.arg1 & -129);
    s.tmp_4 = r0;
    r0 = pxsim.BufferMethods.setByte(s.tmp_3, s.tmp_2, s.tmp_4);
    s.tmp_0 = r0 = s.k___142734;
    r0 = pxsim_pxtrt_ldlocRef(s.k___142734);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 + 1);
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt_stlocRef(s.tmp_0, s.tmp_1);
    s.tmp_3 = r0 = s.packet___142730;
    r0 = pxsim_Array__length(s.arg2);
    s.tmp_4 = r0;
    r0 = pxsim.BufferMethods.setByte(s.tmp_3, s.tmp_2, s.tmp_4);
    r0 = pxsim_pxtcore_mkAction(3, inline__P142759);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg3);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 1, s.packet___142730);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 2, s.k___142734);
    s.tmp_1 = helpers_arrayForEach__P140668_mk(s);
    s.tmp_1.arg0 = s.arg2;
    s.tmp_1.arg1 = s.tmp_0;
    s.pc = 11; return s.tmp_1;
  case 11:
    r0 = s.retval;
    s.tmp_0 = r0 = s.k___142734;
    r0 = pxsim_pxtrt_ldlocRef(s.k___142734);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 + 1);
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt_stlocRef(s.tmp_0, s.tmp_1);
    r0 = pxsim.BufferMethods.setByte(s.packet___142730, s.tmp_2, 238);
  case 5:
    r0 = pxsim_pxtrt_ldlocRef(s.k___142734);
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt_ldlocRef(s.n___142705);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 6; continue; }
    s.tmp_3 = r0 = s.k___142734;
    r0 = pxsim_pxtrt_ldlocRef(s.k___142734);
    s.tmp_5 = r0;
    r0 = (s.tmp_5 + 1);
    s.tmp_4 = r0;
    r0 = pxsim_pxtrt_stlocRef(s.tmp_3, s.tmp_4);
    r0 = pxsim.BufferMethods.setByte(s.packet___142730, s.tmp_5, 255);
    { step = 5; continue; }
  case 6:
    s.tmp_0 = net_debug__P141083_mk(s);
    r0 = pxsim.BufferMethods.toHex(s.packet___142730);
    s.tmp_2 = r0;
    if ((s.tmp_2) && (s.tmp_2).vtable) {
    setupResume(s, 13);
    pxsim_String__stringConv(s.tmp_2);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_2) + ""; }
  case 13:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim_String__concat("send cmd ", s.tmp_1);
    s.tmp_0.arg0 = r0;
    s.pc = 12; return s.tmp_0;
  case 12:
    r0 = s.retval;
    s.tmp_3 = esp32_NinaController_waitForReady__P141264_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.pc = 14; return s.tmp_3;
  case 14:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 7; continue; }
    r0 = false;
    { step = 9; continue; }
  case 7:
  case 8:
    r0 = s.arg0.fields["_cs"];
    s.tmp_4 = r0;
    r0 = pxsim.DigitalInOutPinMethods.digitalWrite(s.tmp_4, false);
    s.tmp_0 = esp32_NinaController_spiTransfer__P141266_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.packet___142730;
    s.tmp_0.arg2 = null;
    s.pc = 15; return s.tmp_0;
  case 15:
    r0 = s.retval;
    r0 = s.arg0.fields["_cs"];
    s.tmp_0 = r0;
    r0 = pxsim.DigitalInOutPinMethods.digitalWrite(s.tmp_0, true);
    s.tmp_0 = net_debug__P141083_mk(s);
    s.tmp_0.arg0 = "send done";
    s.pc = 16; return s.tmp_0;
  case 16:
    r0 = s.retval;
    r0 = true;
  case 9:
    return leave(s, r0)
  default: oops()
} } }
esp32_NinaController__sendCommand__P141265.info = {"start":5600,"length":1289,"line":168,"column":8,"endLine":205,"endColumn":9,"fileName":"ninacontroller.ts","functionName":"_sendCommand","argumentNames":["this","cmd","params","param_len_16"]}

function esp32_NinaController__sendCommand__P141265_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: esp32_NinaController__sendCommand__P141265, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  n___142705: undefined,
  packet___142730: undefined,
  k___142734: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function inline__P142709(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_numops_toBoolDecr(s.caps[0]);
    if (!r0) { step = 1; continue; }
    r0 = 1;
    { step = 2; continue; }
  case 1:
    r0 = 0;
  case 2:
    // jmp value (already in r0)
    s.tmp_0 = r0;
    s.tmp_1 = r0 = s.caps[1];
    r0 = pxsim_pxtrt_ldlocRef(s.caps[1]);
    s.tmp_3 = r0;
    r0 = (1 + s.tmp_0);
    s.tmp_5 = r0;
    r0 = pxsim.BufferMethods.length(s.arg0);
    s.tmp_6 = r0;
    r0 = (s.tmp_5 + s.tmp_6);
    s.tmp_4 = r0;
    r0 = (s.tmp_3 + s.tmp_4);
    s.tmp_2 = r0;
    r0 = pxsim_pxtrt_stlocRef(s.tmp_1, s.tmp_2);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
inline__P142709.info = {"start":5826,"length":88,"line":173,"column":27,"endLine":175,"endColumn":13,"fileName":"ninacontroller.ts","functionName":"inline","argumentNames":["param"]}

function inline__P142709_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P142709, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  arg0: undefined,
} }





function inline__P142759(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_numops_toBoolDecr(s.caps[0]);
    if (!r0) { step = 1; continue; }
    s.tmp_0 = r0 = s.caps[2];
    r0 = pxsim_pxtrt_ldlocRef(s.caps[2]);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 + 1);
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt_stlocRef(s.tmp_0, s.tmp_1);
    s.tmp_3 = r0 = s.caps[1];
    r0 = pxsim.BufferMethods.length(s.arg0);
    s.tmp_6 = r0;
    r0 = (s.tmp_6 >> 8);
    s.tmp_5 = r0;
    r0 = (s.tmp_5 & 255);
    s.tmp_4 = r0;
    r0 = pxsim.BufferMethods.setByte(s.tmp_3, s.tmp_2, s.tmp_4);
  case 1:
  case 2:
    s.tmp_0 = r0 = s.caps[2];
    r0 = pxsim_pxtrt_ldlocRef(s.caps[2]);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 + 1);
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt_stlocRef(s.tmp_0, s.tmp_1);
    s.tmp_3 = r0 = s.caps[1];
    r0 = pxsim.BufferMethods.length(s.arg0);
    s.tmp_5 = r0;
    r0 = (s.tmp_5 & 255);
    s.tmp_4 = r0;
    r0 = pxsim.BufferMethods.setByte(s.tmp_3, s.tmp_2, s.tmp_4);
    s.tmp_0 = r0 = s.caps[1];
    r0 = pxsim_pxtrt_ldlocRef(s.caps[2]);
    s.tmp_1 = r0;
    r0 = pxsim.BufferMethods.write(s.tmp_0, s.tmp_1, s.arg0);
    s.tmp_0 = r0 = s.caps[2];
    r0 = pxsim_pxtrt_ldlocRef(s.caps[2]);
    s.tmp_2 = r0;
    r0 = pxsim.BufferMethods.length(s.arg0);
    s.tmp_3 = r0;
    r0 = (s.tmp_2 + s.tmp_3);
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt_stlocRef(s.tmp_0, s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
inline__P142759.info = {"start":6230,"length":246,"line":186,"column":27,"endLine":192,"endColumn":13,"fileName":"ninacontroller.ts","functionName":"inline","argumentNames":["param"]}

function inline__P142759_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P142759, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  arg0: undefined,
} }





function helpers_arrayForEach__P140668(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.len___142831 = undefined;
    s.i___142834 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_Array__length(s.arg0);
    s.len___142831 = (r0);
    s.i___142834 = (0);
  case 1:
    r0 = (s.i___142834 < s.len___142831);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 2; continue; }
    s.tmp_1 = lambda_3_mk(s);
    s.tmp_1.argL = s.arg1;
    r0 = pxsim_Array__getAt(s.arg0, s.i___142834);
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = s.i___142834;
    setupLambda(s.tmp_1, s.tmp_1.argL);
    s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
    r0 = (s.i___142834 + 1);
    s.i___142834 = (r0);
    { step = 1; continue; }
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
helpers_arrayForEach__P140668.info = {"start":5581,"length":250,"line":194,"column":4,"endLine":199,"endColumn":5,"fileName":"pxt_modules/base/pxt-helpers.ts","functionName":"arrayForEach","argumentNames":["arr","callbackfn"]}

function helpers_arrayForEach__P140668_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_arrayForEach__P140668, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  len___142831: undefined,
  i___142834: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function esp32_NinaController_lock__P141268(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, esp32_NinaController__C141258_VT)) failedCast(r0);
  case 1:
    r0 = s.arg0.fields["_locked"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 2; continue; }
    r0 = pxsim_pxtcore_mkAction(1, inline__P142852);
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_1, 0, s.arg0);
    s.tmp_2 = pauseUntil__P140831_mk(s);
    s.tmp_2.arg0 = s.tmp_1;
    s.tmp_2.arg1 = undefined;
    s.pc = 3; return s.tmp_2;
  case 3:
    r0 = s.retval;
    { step = 1; continue; }
  case 2:
    r0 = (s.arg0).fields["_locked"] = (true);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
esp32_NinaController_lock__P141268.info = {"start":8425,"length":155,"line":249,"column":8,"endLine":254,"endColumn":9,"fileName":"ninacontroller.ts","functionName":"lock","argumentNames":["this"]}

function esp32_NinaController_lock__P141268_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: esp32_NinaController_lock__P141268, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
} }





function inline__P142852(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    r0 = s.caps[0].fields["_locked"];
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_0);
    return leave(s, r0)
  default: oops()
} } }
inline__P142852.info = {"start":8504,"length":19,"line":251,"column":27,"endLine":251,"endColumn":46,"fileName":"ninacontroller.ts","functionName":"inline","argumentNames":[]}

function inline__P142852_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P142852, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
} }





function esp32_NinaController_ping__P141293(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.ip___142866 = undefined;
    s.resp___142874 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, esp32_NinaController__C141258_VT)) failedCast(r0);
    s.tmp_3 = esp32_NinaController__C141258_v4_1_mk(s);
    s.tmp_3.arg0 = s.arg0;
    if (!checkSubtype(s.tmp_3.arg0, esp32_NinaController__C141258_VT)) failedCast(s.tmp_3.arg0);
    s.tmp_3.fn = s.tmp_3.arg0.vtable.methods.connect;
    s.pc = 4; return s.tmp_3;
  case 4:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = -1;
    { step = 3; continue; }
  case 1:
  case 2:
    s.tmp_4 = esp32_NinaController__C141258_v1_2_mk(s);
    s.tmp_4.arg0 = s.arg0;
    s.tmp_4.arg1 = s.arg1;
    if (!checkSubtype(s.tmp_4.arg0, esp32_NinaController__C141258_VT)) failedCast(s.tmp_4.arg0);
    s.tmp_4.fn = s.tmp_4.arg0.vtable.methods.hostbyName;
    s.pc = 5; return s.tmp_4;
  case 5:
    r0 = s.retval;
    s.ip___142866 = (r0);
    s.tmp_0 = Math_max__P140682_mk(s);
    s.tmp_0.arg0 = 0;
    s.tmp_1 = Math_min__P140683_mk(s);
    r0 = (s.arg2 | 0);
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = 255;
    s.pc = 7; return s.tmp_1;
  case 7:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.pc = 6; return s.tmp_0;
  case 6:
    r0 = s.retval;
    s.arg2 = (r0);
    r0 = pxsim_Array__mk();
    s.tmp_0 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.ip___142866);
    s.tmp_2 = esp32_buffer1__P141257_mk(s);
    s.tmp_2.arg0 = s.arg2;
    s.pc = 8; return s.tmp_2;
  case 8:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.tmp_1);
    s.tmp_3 = esp32_NinaController_sendCommandGetResponse__P141270_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.tmp_3.arg1 = 62;
    s.tmp_3.arg2 = s.tmp_0;
    s.tmp_3.arg3 = 1;
    s.tmp_3.arg4 = false;
    s.tmp_3.arg5 = false;
    s.pc = 9; return s.tmp_3;
  case 9:
    r0 = s.retval;
    s.resp___142874 = (r0);
    s.tmp_1 = pins_unpackBuffer__P140739_mk(s);
    s.tmp_1.arg0 = "<H";
    r0 = pxsim_Array__getAt(s.resp___142874, 0);
    s.tmp_1.arg1 = r0;
    s.tmp_1.arg2 = 0;
    s.pc = 10; return s.tmp_1;
  case 10:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_Array__getAt(s.tmp_0, 0);
  case 3:
    return leave(s, r0)
  default: oops()
} } }
esp32_NinaController_ping__P141293.info = {"start":17888,"length":443,"line":520,"column":8,"endLine":531,"endColumn":9,"fileName":"ninacontroller.ts","functionName":"ping","argumentNames":["this","dest","ttl"]}

function esp32_NinaController_ping__P141293_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: esp32_NinaController_ping__P141293, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  ip___142866: undefined,
  resp___142874: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function pins_unpackBuffer__P140739(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.res___142887 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_Array__mk();
    s.res___142887 = (r0);
    s.tmp_0 = pins_packUnpackCore__P140735_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.res___142887;
    s.tmp_0.arg2 = s.arg1;
    s.tmp_0.arg3 = false;
    s.tmp_0.arg4 = s.arg2;
    s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = s.res___142887;
    return leave(s, r0)
  default: oops()
} } }
pins_unpackBuffer__P140739.info = {"start":3917,"length":183,"line":119,"column":4,"endLine":123,"endColumn":5,"fileName":"pxt_modules/base/buffer.ts","functionName":"unpackBuffer","argumentNames":["format","buf","offset"]}

function pins_unpackBuffer__P140739_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: pins_unpackBuffer__P140739, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  res___142887: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function pins_packUnpackCore__P140735(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.isBig___142900 = undefined;
    s.idx___142901 = undefined;
    s.i___142902 = undefined;
    s.fmt___142915 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.lambdaArgs = null;
    }
    s.isBig___142900 = (false);
    s.idx___142901 = (0);
    s.i___142902 = (0);
  case 1:
    s.tmp_1 = r0 = s.i___142902;
    r0 = pxsim_String_.length(s.arg0);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 16; continue; }
    r0 = pxsim_String_.charAt(s.arg0, s.i___142902);
    s.tmp_3 = r0;
    r0 = pxsim_pxtcore.switch_eq(" ", s.tmp_3);
    if (r0) { step = 2; continue; }
    r0 = pxsim_pxtcore.switch_eq("<", s.tmp_3);
    if (r0) { step = 3; continue; }
    r0 = pxsim_pxtcore.switch_eq("=", s.tmp_3);
    if (r0) { step = 4; continue; }
    r0 = pxsim_pxtcore.switch_eq(">", s.tmp_3);
    if (r0) { step = 5; continue; }
    r0 = pxsim_pxtcore.switch_eq("!", s.tmp_3);
    if (r0) { step = 6; continue; }
    r0 = pxsim_pxtcore.switch_eq("x", s.tmp_3);
    if (r0) { step = 7; continue; }
    r0 = s.tmp_3;
    { step = 8; continue; }
  case 2:
  case 3:
  case 4:
    s.isBig___142900 = (false);
    { step = 15; continue; }
  case 5:
  case 6:
    s.isBig___142900 = (true);
    { step = 15; continue; }
  case 7:
    r0 = (s.arg4 + 1);
    s.arg4 = (r0);
    { step = 15; continue; }
  case 8:
    s.tmp_0 = pins_getFormat__P140734_mk(s);
    r0 = pxsim_String_.charAt(s.arg0, s.i___142902);
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = s.isBig___142900;
    s.pc = 17; return s.tmp_0;
  case 17:
    r0 = s.retval;
    s.fmt___142915 = (r0);
    r0 = (s.fmt___142915 === null);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 9; continue; }
    s.tmp_1 = control_fail__P140805_mk(s);
    r0 = pxsim_String_.charAt(s.arg0, s.i___142902);
    s.tmp_3 = r0;
    if ((s.tmp_3) && (s.tmp_3).vtable) {
    setupResume(s, 19);
    pxsim_String__stringConv(s.tmp_3);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_3) + ""; }
  case 19:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_String__concat("Not supported format character: ", s.tmp_2);
    s.tmp_1.arg0 = r0;
    s.pc = 18; return s.tmp_1;
  case 18:
    r0 = s.retval;
    { step = 14; continue; }
  case 9:
    r0 = pxsim_numops_toBoolDecr(s.arg2);
    if (!r0) { step = 12; continue; }
    r0 = pxsim_numops_toBoolDecr(s.arg3);
    if (!r0) { step = 10; continue; }
    s.tmp_0 = r0 = s.idx___142901;
    r0 = (s.tmp_0 + 1);
    s.idx___142901 = (r0);
    s.tmp_1 = r0 = s.arg2;
    s.tmp_2 = r0 = s.fmt___142915;
    s.tmp_3 = r0 = s.arg4;
    r0 = pxsim_Array__getAt(s.arg1, s.tmp_0);
    s.tmp_4 = r0;
    r0 = pxsim.BufferMethods.setNumber(s.tmp_1, s.tmp_2, s.tmp_3, s.tmp_4);
    { step = 11; continue; }
  case 10:
    s.tmp_0 = r0 = s.arg1;
    r0 = pxsim.BufferMethods.getNumber(s.arg2, s.fmt___142915, s.arg4);
    s.tmp_1 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.tmp_1);
  case 11:
  case 12:
  case 13:
    s.tmp_0 = r0 = s.arg4;
    s.tmp_2 = pins_sizeOf__P140732_mk(s);
    s.tmp_2.arg0 = s.fmt___142915;
    s.pc = 20; return s.tmp_2;
  case 20:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0 + s.tmp_1);
    s.arg4 = (r0);
  case 14:
  case 15:
    r0 = (s.i___142902 + 1);
    s.i___142902 = (r0);
    { step = 1; continue; }
  case 16:
    r0 = s.arg4;
    return leave(s, r0)
  default: oops()
} } }
pins_packUnpackCore__P140735.info = {"start":2235,"length":1205,"line":68,"column":4,"endLine":103,"endColumn":5,"fileName":"pxt_modules/base/buffer.ts","functionName":"packUnpackCore","argumentNames":["format","nums","buf","isPack","off"]}

function pins_packUnpackCore__P140735_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: pins_packUnpackCore__P140735, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  isBig___142900: undefined,
  idx___142901: undefined,
  i___142902: undefined,
  fmt___142915: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
} }





function control_fail__P140805(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = console_log__P140842_mk(s);
    s.tmp_0.arg0 = "Fatal failure: ";
    s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    s.tmp_0 = console_log__P140842_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = pxsim.control.dmesg(s.arg0);
    r0 = pxsim_pxtrt.panic(108);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
control_fail__P140805.info = {"start":2676,"length":155,"line":89,"column":4,"endLine":94,"endColumn":5,"fileName":"pxt_modules/base/control.ts","functionName":"fail","argumentNames":["message"]}

function control_fail__P140805_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control_fail__P140805, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function pins_getFormat__P140734(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_pxtcore.switch_eq("B", s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = pxsim_pxtcore.switch_eq("b", s.tmp_0);
    if (r0) { step = 2; continue; }
    r0 = pxsim_pxtcore.switch_eq("H", s.tmp_0);
    if (r0) { step = 3; continue; }
    r0 = pxsim_pxtcore.switch_eq("h", s.tmp_0);
    if (r0) { step = 6; continue; }
    r0 = pxsim_pxtcore.switch_eq("I", s.tmp_0);
    if (r0) { step = 9; continue; }
    r0 = pxsim_pxtcore.switch_eq("L", s.tmp_0);
    if (r0) { step = 10; continue; }
    r0 = pxsim_pxtcore.switch_eq("i", s.tmp_0);
    if (r0) { step = 13; continue; }
    r0 = pxsim_pxtcore.switch_eq("l", s.tmp_0);
    if (r0) { step = 14; continue; }
    r0 = pxsim_pxtcore.switch_eq("f", s.tmp_0);
    if (r0) { step = 17; continue; }
    r0 = pxsim_pxtcore.switch_eq("d", s.tmp_0);
    if (r0) { step = 20; continue; }
    r0 = s.tmp_0;
    { step = 23; continue; }
  case 1:
    r0 = 2;
    { step = 24; continue; }
  case 2:
    r0 = 1;
    { step = 24; continue; }
  case 3:
    r0 = pxsim_numops_toBoolDecr(s.arg1);
    if (!r0) { step = 4; continue; }
    r0 = 9;
    { step = 5; continue; }
  case 4:
    r0 = 4;
  case 5:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = s.tmp_1;
    { step = 24; continue; }
  case 6:
    r0 = pxsim_numops_toBoolDecr(s.arg1);
    if (!r0) { step = 7; continue; }
    r0 = 8;
    { step = 8; continue; }
  case 7:
    r0 = 3;
  case 8:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = s.tmp_2;
    { step = 24; continue; }
  case 9:
  case 10:
    r0 = pxsim_numops_toBoolDecr(s.arg1);
    if (!r0) { step = 11; continue; }
    r0 = 12;
    { step = 12; continue; }
  case 11:
    r0 = 11;
  case 12:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = s.tmp_3;
    { step = 24; continue; }
  case 13:
  case 14:
    r0 = pxsim_numops_toBoolDecr(s.arg1);
    if (!r0) { step = 15; continue; }
    r0 = 10;
    { step = 16; continue; }
  case 15:
    r0 = 5;
  case 16:
    // jmp value (already in r0)
    s.tmp_4 = r0;
    r0 = s.tmp_4;
    { step = 24; continue; }
  case 17:
    r0 = pxsim_numops_toBoolDecr(s.arg1);
    if (!r0) { step = 18; continue; }
    r0 = 15;
    { step = 19; continue; }
  case 18:
    r0 = 13;
  case 19:
    // jmp value (already in r0)
    s.tmp_5 = r0;
    r0 = s.tmp_5;
    { step = 24; continue; }
  case 20:
    r0 = pxsim_numops_toBoolDecr(s.arg1);
    if (!r0) { step = 21; continue; }
    r0 = 16;
    { step = 22; continue; }
  case 21:
    r0 = 14;
  case 22:
    // jmp value (already in r0)
    s.tmp_6 = r0;
    r0 = s.tmp_6;
    { step = 24; continue; }
  case 23:
    r0 = null;
    { step = 24; continue; }
    r0 = undefined;
  case 24:
    return leave(s, r0)
  default: oops()
} } }
pins_getFormat__P140734.info = {"start":1301,"length":928,"line":43,"column":4,"endLine":66,"endColumn":5,"fileName":"pxt_modules/base/buffer.ts","functionName":"getFormat","argumentNames":["pychar","isBig"]}

function pins_getFormat__P140734_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: pins_getFormat__P140734, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Math_min__P140683(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = (s.arg0 <= s.arg1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.arg0;
    { step = 3; continue; }
  case 1:
  case 2:
    r0 = s.arg1;
  case 3:
    return leave(s, r0)
  default: oops()
} } }
Math_min__P140683.info = {"start":11419,"length":105,"line":397,"column":4,"endLine":400,"endColumn":5,"fileName":"pxt_modules/base/pxt-helpers.ts","functionName":"min","argumentNames":["a","b"]}

function Math_min__P140683_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Math_min__P140683, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function esp32_NinaController_hostbyName__P141292(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.resp___143007 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, esp32_NinaController__C141258_VT)) failedCast(r0);
    s.tmp_3 = esp32_NinaController__C141258_v4_1_mk(s);
    s.tmp_3.arg0 = s.arg0;
    if (!checkSubtype(s.tmp_3.arg0, esp32_NinaController__C141258_VT)) failedCast(s.tmp_3.arg0);
    s.tmp_3.fn = s.tmp_3.arg0.vtable.methods.connect;
    s.pc = 6; return s.tmp_3;
  case 6:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = undefined;
    { step = 5; continue; }
  case 1:
  case 2:
    r0 = pxsim_Array__mk();
    s.tmp_4 = r0;
    r0 = pxsim.control.createBufferFromUTF8(s.arg1);
    s.tmp_5 = r0;
    r0 = pxsim_Array__push(s.tmp_4, s.tmp_5);
    s.tmp_6 = esp32_NinaController_sendCommandGetResponse__P141270_mk(s);
    s.tmp_6.arg0 = s.arg0;
    s.tmp_6.arg1 = 52;
    s.tmp_6.arg2 = s.tmp_4;
    s.tmp_6.arg3 = 1;
    s.tmp_6.arg4 = false;
    s.tmp_6.arg5 = false;
    s.pc = 7; return s.tmp_6;
  case 7:
    r0 = s.retval;
    s.resp___143007 = (r0);
    r0 = pxsim_Array__getAt(s.resp___143007, 0);
    s.tmp_2 = r0;
    r0 = pxsim.BufferMethods.getByte(s.tmp_2, 0);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 != 1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.tmp_3 = net_fail__P141084_mk(s);
    s.tmp_3.arg0 = "failed to request hostname";
    s.pc = 8; return s.tmp_3;
  case 8:
    r0 = s.retval;
  case 3:
  case 4:
    s.tmp_0 = esp32_NinaController_sendCommandGetResponse__P141270_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = 53;
    s.tmp_0.arg2 = undefined;
    s.tmp_0.arg3 = 1;
    s.tmp_0.arg4 = false;
    s.tmp_0.arg5 = false;
    s.pc = 9; return s.tmp_0;
  case 9:
    r0 = s.retval;
    s.resp___143007 = (r0);
    r0 = pxsim_Array__getAt(s.resp___143007, 0);
  case 5:
    return leave(s, r0)
  default: oops()
} } }
esp32_NinaController_hostbyName__P141292.info = {"start":17304,"length":442,"line":504,"column":8,"endLine":515,"endColumn":9,"fileName":"ninacontroller.ts","functionName":"hostbyName","argumentNames":["this","hostname"]}

function esp32_NinaController_hostbyName__P141292_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: esp32_NinaController_hostbyName__P141292, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  resp___143007: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function esp32_NinaController_connect__P141290(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.wifis___143026 = undefined;
    s.ssids___143029 = undefined;
    s.networks___143033 = undefined;
    s.network___143052 = undefined;
    s.unnamed418___U4 = undefined;
    s.unnamed419___U5 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, esp32_NinaController__C141258_VT)) failedCast(r0);
    s.tmp_1 = esp32_NinaController__C141258_v3_1_mk(s);
    s.tmp_1.arg0 = s.arg0;
    if (!checkSubtype(s.tmp_1.arg0, esp32_NinaController__C141258_VT)) failedCast(s.tmp_1.arg0);
    s.tmp_1.fn = s.tmp_1.arg0.vtable.methods.isConnected;
    s.pc = 8; return s.tmp_1;
  case 8:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = true;
    { step = 7; continue; }
  case 1:
  case 2:
    s.tmp_2 = net_knownAccessPoints__P141098_mk(s);
    s.pc = 9; return s.tmp_2;
  case 9:
    r0 = s.retval;
    s.wifis___143026 = (r0);
    r0 = pxsim_pxtrt.keysOf(s.wifis___143026);
    s.ssids___143029 = (r0);
    r0 = pxsim_pxtcore_mkAction(1, inline__P143035);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.ssids___143029);
    s.tmp_1 = helpers_arrayFilter__P140669_mk(s);
    s.tmp_2 = esp32_NinaController__C141258_v0_1_mk(s);
    s.tmp_2.arg0 = s.arg0;
    if (!checkSubtype(s.tmp_2.arg0, esp32_NinaController__C141258_VT)) failedCast(s.tmp_2.arg0);
    s.tmp_2.fn = s.tmp_2.arg0.vtable.methods.scanNetworks;
    s.pc = 11; return s.tmp_2;
  case 11:
    r0 = s.retval;
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = s.tmp_0;
    s.pc = 10; return s.tmp_1;
  case 10:
    r0 = s.retval;
    s.networks___143033 = (r0);
    s.network___143052 = (undefined);
    s.unnamed418___U4 = (s.networks___143033);
    s.unnamed419___U5 = (0);
  case 3:
    s.tmp_0 = r0 = s.unnamed419___U5;
    r0 = pxsim_Array__length(s.unnamed418___U4);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 6; continue; }
    r0 = pxsim_Array__getAt(s.unnamed418___U4, s.unnamed419___U5);
    s.network___143052 = (r0);
    s.tmp_4 = esp32_NinaController_connectAP__P141291_mk(s);
    s.tmp_4.arg0 = s.arg0;
    r0 = s.network___143052.fields["ssid"];
    s.tmp_4.arg1 = r0;
    r0 = s.network___143052.fields["ssid"];
    s.tmp_5 = r0;
    r0 = pxsim_pxtrt.mapGetGeneric(s.wifis___143026, s.tmp_5);
    s.tmp_4.arg2 = r0;
    s.pc = 12; return s.tmp_4;
  case 12:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_3 == 3);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 4; continue; }
    r0 = true;
    { step = 7; continue; }
  case 4:
  case 5:
    r0 = (s.unnamed419___U5 + 1);
    s.unnamed419___U5 = (r0);
    { step = 3; continue; }
  case 6:
    s.unnamed418___U4 = (undefined);
    s.tmp_6 = net_log__P141082_mk(s);
    s.tmp_6.arg0 = "connection failed";
    s.pc = 13; return s.tmp_6;
  case 13:
    r0 = s.retval;
    r0 = false;
  case 7:
    return leave(s, r0)
  default: oops()
} } }
esp32_NinaController_connect__P141290.info = {"start":15465,"length":629,"line":448,"column":8,"endLine":464,"endColumn":9,"fileName":"ninacontroller.ts","functionName":"connect","argumentNames":["this"]}

function esp32_NinaController_connect__P141290_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: esp32_NinaController_connect__P141290, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  wifis___143026: undefined,
  ssids___143029: undefined,
  networks___143033: undefined,
  network___143052: undefined,
  unnamed418___U4: undefined,
  unnamed419___U5: undefined,
  arg0: undefined,
} }





function inline__P143035(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0.fields["ssid"];
    s.tmp_1 = r0;
    r0 = pxsim_Array_.indexOf(s.caps[0], s.tmp_1, undefined);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 > -1);
    return leave(s, r0)
  default: oops()
} } }
inline__P143035.info = {"start":15711,"length":43,"line":454,"column":24,"endLine":454,"endColumn":67,"fileName":"ninacontroller.ts","functionName":"inline","argumentNames":["network"]}

function inline__P143035_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P143035, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function esp32_NinaController_connectAP__P141291(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.stat___143078 = undefined;
    s.____143079 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, esp32_NinaController__C141258_VT)) failedCast(r0);
    s.tmp_0 = net_log__P141082_mk(s);
    if ((s.arg1) && (s.arg1).vtable) {
    setupResume(s, 13);
    pxsim_String__stringConv(s.arg1);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.arg1) + ""; }
  case 13:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim_String__concat("connect to ", s.tmp_1);
    s.tmp_0.arg0 = r0;
    s.pc = 12; return s.tmp_0;
  case 12:
    r0 = s.retval;
    r0 = pxsim_numops_toBoolDecr(s.arg2);
    if (!r0) { step = 1; continue; }
    s.tmp_0 = esp32_NinaController_wifiSetPassphrase__P141278_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    s.tmp_0.arg2 = s.arg2;
    s.pc = 14; return s.tmp_0;
  case 14:
    r0 = s.retval;
    { step = 2; continue; }
  case 1:
    s.tmp_0 = esp32_NinaController_wifiSetNetwork__P141277_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    s.pc = 15; return s.tmp_0;
  case 15:
    r0 = s.retval;
  case 2:
    s.____143079 = (0);
  case 3:
    r0 = (s.____143079 < 10);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 6; continue; }
    s.tmp_1 = esp32_NinaController_status__P141271_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.pc = 16; return s.tmp_1;
  case 16:
    r0 = s.retval;
    s.stat___143078 = (r0);
    r0 = (s.stat___143078 == 3);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 4; continue; }
    r0 = (s.arg0).fields["wasConnected"] = (true);
    s.tmp_0 = net_log__P141082_mk(s);
    s.tmp_0.arg0 = "connected";
    s.pc = 17; return s.tmp_0;
  case 17:
    r0 = s.retval;
    r0 = s.stat___143078;
    { step = 11; continue; }
  case 4:
  case 5:
    s.tmp_0 = pause__P140892_mk(s);
    s.tmp_0.arg0 = 1000;
    s.pc = 18; return s.tmp_0;
  case 18:
    r0 = s.retval;
    r0 = (s.____143079 + 1);
    s.____143079 = (r0);
    { step = 3; continue; }
  case 6:
    r0 = pxsim_Array__mk();
    s.tmp_0 = r0;
    r0 = pxsim_Array__push(s.tmp_0, 4);
    r0 = pxsim_Array__push(s.tmp_0, 5);
    r0 = pxsim_Array__push(s.tmp_0, 6);
    r0 = pxsim_Array_.indexOf(s.tmp_0, s.stat___143078, undefined);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 >= 0);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 7; continue; }
    s.tmp_3 = net_log__P141082_mk(s);
    if ((s.arg1) && (s.arg1).vtable) {
    setupResume(s, 20);
    pxsim_String__stringConv(s.arg1);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.arg1) + ""; }
  case 20:
    r0 = s.retval;
    s.tmp_7 = r0;
    r0 = pxsim_String__concat("failed to connect to \"", s.tmp_7);
    s.tmp_6 = r0;
    r0 = pxsim_String__concat(s.tmp_6, "\" (");
    s.tmp_5 = r0;
    if ((s.stat___143078) && (s.stat___143078).vtable) {
    setupResume(s, 21);
    pxsim_String__stringConv(s.stat___143078);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.stat___143078) + ""; }
  case 21:
    r0 = s.retval;
    s.tmp_8 = r0;
    r0 = pxsim_String__concat(s.tmp_5, s.tmp_8);
    s.tmp_4 = r0;
    r0 = pxsim_String__concat(s.tmp_4, ")");
    s.tmp_3.arg0 = r0;
    s.pc = 19; return s.tmp_3;
  case 19:
    r0 = s.retval;
  case 7:
  case 8:
    r0 = (s.stat___143078 == 1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 9; continue; }
    s.tmp_1 = net_log__P141082_mk(s);
    if ((s.arg1) && (s.arg1).vtable) {
    setupResume(s, 23);
    pxsim_String__stringConv(s.arg1);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.arg1) + ""; }
  case 23:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = pxsim_String__concat("no such ssid: \"", s.tmp_3);
    s.tmp_2 = r0;
    r0 = pxsim_String__concat(s.tmp_2, "\"");
    s.tmp_1.arg0 = r0;
    s.pc = 22; return s.tmp_1;
  case 22:
    r0 = s.retval;
  case 9:
  case 10:
    r0 = s.stat___143078;
  case 11:
    return leave(s, r0)
  default: oops()
} } }
esp32_NinaController_connectAP__P141291.info = {"start":16255,"length":932,"line":470,"column":8,"endLine":498,"endColumn":9,"fileName":"ninacontroller.ts","functionName":"connectAP","argumentNames":["this","ssid","password"]}

function esp32_NinaController_connectAP__P141291_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: esp32_NinaController_connectAP__P141291, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  stat___143078: undefined,
  ____143079: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function esp32_NinaController_status__P141271(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.resp___143130 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, esp32_NinaController__C141258_VT)) failedCast(r0);
    s.tmp_0 = esp32_NinaController_sendCommandGetResponse__P141270_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = 32;
    s.tmp_0.arg2 = undefined;
    s.tmp_0.arg3 = 1;
    s.tmp_0.arg4 = false;
    s.tmp_0.arg5 = false;
    s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    s.resp___143130 = (r0);
    r0 = pxsim_numops_toBoolDecr(s.resp___143130);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = 255;
    { step = 3; continue; }
  case 1:
  case 2:
    s.tmp_2 = net_debug__P141083_mk(s);
    r0 = pxsim_Array__getAt(s.resp___143130, 0);
    s.tmp_5 = r0;
    r0 = pxsim.BufferMethods.getByte(s.tmp_5, 0);
    s.tmp_4 = r0;
    if ((s.tmp_4) && (s.tmp_4).vtable) {
    setupResume(s, 6);
    pxsim_String__stringConv(s.tmp_4);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_4) + ""; }
  case 6:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = pxsim_String__concat("status: ", s.tmp_3);
    s.tmp_2.arg0 = r0;
    s.pc = 5; return s.tmp_2;
  case 5:
    r0 = s.retval;
    r0 = pxsim_Array__getAt(s.resp___143130, 0);
    s.tmp_0 = r0;
    r0 = pxsim.BufferMethods.getByte(s.tmp_0, 0);
  case 3:
    return leave(s, r0)
  default: oops()
} } }
esp32_NinaController_status__P141271.info = {"start":9124,"length":278,"line":272,"column":8,"endLine":279,"endColumn":9,"fileName":"ninacontroller.ts","functionName":"status","argumentNames":["this"]}

function esp32_NinaController_status__P141271_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: esp32_NinaController_status__P141271, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  resp___143130: undefined,
  arg0: undefined,
} }





function esp32_NinaController_wifiSetNetwork__P141277(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.ssidbuf___143148 = undefined;
    s.resp___143152 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, esp32_NinaController__C141258_VT)) failedCast(r0);
    r0 = pxsim.control.createBufferFromUTF8(s.arg1);
    s.ssidbuf___143148 = (r0);
    r0 = pxsim_Array__mk();
    s.tmp_0 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.ssidbuf___143148);
    s.tmp_1 = esp32_NinaController_sendCommandGetResponse__P141270_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.tmp_1.arg1 = 16;
    s.tmp_1.arg2 = s.tmp_0;
    s.tmp_1.arg3 = 1;
    s.tmp_1.arg4 = false;
    s.tmp_1.arg5 = false;
    s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
    s.resp___143152 = (r0);
    r0 = pxsim_Array__getAt(s.resp___143152, 0);
    s.tmp_2 = r0;
    r0 = pxsim.BufferMethods.getByte(s.tmp_2, 0);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 != 1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.tmp_3 = net_fail__P141084_mk(s);
    s.tmp_3.arg0 = "failed to set network";
    s.pc = 4; return s.tmp_3;
  case 4:
    r0 = s.retval;
  case 1:
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
esp32_NinaController_wifiSetNetwork__P141277.info = {"start":12209,"length":293,"line":355,"column":8,"endLine":362,"endColumn":9,"fileName":"ninacontroller.ts","functionName":"wifiSetNetwork","argumentNames":["this","ssid"]}

function esp32_NinaController_wifiSetNetwork__P141277_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: esp32_NinaController_wifiSetNetwork__P141277, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  ssidbuf___143148: undefined,
  resp___143152: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function esp32_NinaController_wifiSetPassphrase__P141278(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.ssidbuf___143165 = undefined;
    s.passphrasebuf___143169 = undefined;
    s.resp___143173 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, esp32_NinaController__C141258_VT)) failedCast(r0);
    r0 = pxsim.control.createBufferFromUTF8(s.arg1);
    s.ssidbuf___143165 = (r0);
    r0 = pxsim.control.createBufferFromUTF8(s.arg2);
    s.passphrasebuf___143169 = (r0);
    r0 = pxsim_Array__mk();
    s.tmp_0 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.ssidbuf___143165);
    r0 = pxsim_Array__push(s.tmp_0, s.passphrasebuf___143169);
    s.tmp_1 = esp32_NinaController_sendCommandGetResponse__P141270_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.tmp_1.arg1 = 17;
    s.tmp_1.arg2 = s.tmp_0;
    s.tmp_1.arg3 = 1;
    s.tmp_1.arg4 = false;
    s.tmp_1.arg5 = false;
    s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
    s.resp___143173 = (r0);
    r0 = pxsim_Array__getAt(s.resp___143173, 0);
    s.tmp_2 = r0;
    r0 = pxsim.BufferMethods.getByte(s.tmp_2, 0);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 != 1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.tmp_3 = net_fail__P141084_mk(s);
    s.tmp_3.arg0 = "failed to set passphrase";
    s.pc = 4; return s.tmp_3;
  case 4:
    r0 = s.retval;
  case 1:
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
esp32_NinaController_wifiSetPassphrase__P141278.info = {"start":12577,"length":416,"line":365,"column":8,"endLine":372,"endColumn":9,"fileName":"ninacontroller.ts","functionName":"wifiSetPassphrase","argumentNames":["this","ssid","passphrase"]}

function esp32_NinaController_wifiSetPassphrase__P141278_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: esp32_NinaController_wifiSetPassphrase__P141278, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  ssidbuf___143165: undefined,
  passphrasebuf___143169: undefined,
  resp___143173: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function esp32_NinaController_scanNetworks__P141276(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.____143186 = undefined;
    s.APs___143191 = undefined;
    s.ap___143195 = undefined;
    s.unnamed416___U3 = undefined;
    s.unnamed417___U4 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, esp32_NinaController__C141258_VT)) failedCast(r0);
    s.tmp_0 = esp32_NinaController_startScanNetworks__P141274_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.pc = 8; return s.tmp_0;
  case 8:
    r0 = s.retval;
    s.____143186 = (0);
  case 1:
    r0 = (s.____143186 < 10);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 6; continue; }
    s.tmp_1 = pause__P140892_mk(s);
    s.tmp_1.arg0 = 2000;
    s.pc = 9; return s.tmp_1;
  case 9:
    r0 = s.retval;
    s.tmp_0 = esp32_NinaController_getScanNetworks__P141275_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.pc = 10; return s.tmp_0;
  case 10:
    r0 = s.retval;
    s.APs___143191 = (r0);
    r0 = pxsim_numops_toBoolDecr(s.APs___143191);
    if (!r0) { step = 4; continue; }
    s.ap___143195 = (undefined);
    s.unnamed416___U3 = (s.APs___143191);
    s.unnamed417___U4 = (0);
  case 2:
    s.tmp_0 = r0 = s.unnamed417___U4;
    r0 = pxsim_Array__length(s.unnamed416___U3);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 3; continue; }
    r0 = pxsim_Array__getAt(s.unnamed416___U3, s.unnamed417___U4);
    s.ap___143195 = (r0);
    s.tmp_2 = net_debug__P141083_mk(s);
    r0 = s.ap___143195.fields["ssid"];
    s.tmp_6 = r0;
    if ((s.tmp_6) && (s.tmp_6).vtable) {
    setupResume(s, 12);
    pxsim_String__stringConv(s.tmp_6);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_6) + ""; }
  case 12:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = pxsim_String__concat("  ", s.tmp_5);
    s.tmp_4 = r0;
    r0 = pxsim_String__concat(s.tmp_4, " => RSSI ");
    s.tmp_3 = r0;
    r0 = s.ap___143195.fields["rssi"];
    s.tmp_8 = r0;
    if ((s.tmp_8) && (s.tmp_8).vtable) {
    setupResume(s, 13);
    pxsim_String__stringConv(s.tmp_8);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_8) + ""; }
  case 13:
    r0 = s.retval;
    s.tmp_7 = r0;
    r0 = pxsim_String__concat(s.tmp_3, s.tmp_7);
    s.tmp_2.arg0 = r0;
    s.pc = 11; return s.tmp_2;
  case 11:
    r0 = s.retval;
    r0 = (s.unnamed417___U4 + 1);
    s.unnamed417___U4 = (r0);
    { step = 2; continue; }
  case 3:
    s.unnamed416___U3 = (undefined);
    r0 = s.APs___143191;
    { step = 7; continue; }
  case 4:
  case 5:
    r0 = (s.____143186 + 1);
    s.____143186 = (r0);
    { step = 1; continue; }
  case 6:
    r0 = null;
  case 7:
    return leave(s, r0)
  default: oops()
} } }
esp32_NinaController_scanNetworks__P141276.info = {"start":11619,"length":507,"line":337,"column":8,"endLine":352,"endColumn":9,"fileName":"ninacontroller.ts","functionName":"scanNetworks","argumentNames":["this"]}

function esp32_NinaController_scanNetworks__P141276_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: esp32_NinaController_scanNetworks__P141276, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  ____143186: undefined,
  APs___143191: undefined,
  ap___143195: undefined,
  unnamed416___U3: undefined,
  unnamed417___U4: undefined,
  arg0: undefined,
} }





function esp32_NinaController_getScanNetworks__P141275(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.names___143216 = undefined;
    s.APs___143221 = undefined;
    s.i___143223 = undefined;
    s.name___143225 = undefined;
    s.unnamed414___U4 = undefined;
    s.unnamed415___U5 = undefined;
    s.a_p___143227 = undefined;
    s.rssi___143233 = undefined;
    s.encr___143245 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, esp32_NinaController__C141258_VT)) failedCast(r0);
    s.tmp_0 = esp32_NinaController_sendCommandGetResponse__P141270_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = 39;
    s.tmp_0.arg2 = undefined;
    s.tmp_0.arg3 = undefined;
    s.tmp_0.arg4 = false;
    s.tmp_0.arg5 = false;
    s.pc = 3; return s.tmp_0;
  case 3:
    r0 = s.retval;
    s.names___143216 = (r0);
    r0 = pxsim_Array__mk();
    s.APs___143221 = (r0);
    s.i___143223 = (0);
    s.name___143225 = (undefined);
    s.unnamed414___U4 = (s.names___143216);
    s.unnamed415___U5 = (0);
  case 1:
    s.tmp_0 = r0 = s.unnamed415___U5;
    r0 = pxsim_Array__length(s.unnamed414___U4);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 2; continue; }
    r0 = pxsim_Array__getAt(s.unnamed414___U4, s.unnamed415___U5);
    s.name___143225 = (r0);
    r0 = pxsim_pxtcore_mkClassInstance(net_AccessPoint__C141086_VT);
    s.tmp_2 = r0;
    s.tmp_3 = net_AccessPoint_constructor__P141087_mk(s);
    s.tmp_3.arg0 = s.tmp_2;
    r0 = pxsim.BufferMethods.toString(s.name___143225);
    s.tmp_3.arg1 = r0;
    s.pc = 4; return s.tmp_3;
  case 4:
    r0 = s.retval;
    s.a_p___143227 = (s.tmp_2);
    r0 = pxsim_Array__mk();
    s.tmp_0 = r0;
    s.tmp_2 = esp32_buffer1__P141257_mk(s);
    s.tmp_2.arg0 = s.i___143223;
    s.pc = 5; return s.tmp_2;
  case 5:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.tmp_1);
    s.tmp_4 = esp32_NinaController_sendCommandGetResponse__P141270_mk(s);
    s.tmp_4.arg0 = s.arg0;
    s.tmp_4.arg1 = 50;
    s.tmp_4.arg2 = s.tmp_0;
    s.tmp_4.arg3 = 1;
    s.tmp_4.arg4 = false;
    s.tmp_4.arg5 = false;
    s.pc = 6; return s.tmp_4;
  case 6:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = pxsim_Array__getAt(s.tmp_3, 0);
    s.rssi___143233 = (r0);
    s.tmp_0 = r0 = s.a_p___143227;
    s.tmp_3 = pins_unpackBuffer__P140739_mk(s);
    s.tmp_3.arg0 = "<i";
    s.tmp_3.arg1 = s.rssi___143233;
    s.tmp_3.arg2 = 0;
    s.pc = 7; return s.tmp_3;
  case 7:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_Array__getAt(s.tmp_2, 0);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["rssi"] = (s.tmp_1);
    r0 = pxsim_Array__mk();
    s.tmp_0 = r0;
    s.tmp_2 = esp32_buffer1__P141257_mk(s);
    s.tmp_2.arg0 = 1;
    s.pc = 8; return s.tmp_2;
  case 8:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.tmp_1);
    s.tmp_4 = esp32_NinaController_sendCommandGetResponse__P141270_mk(s);
    s.tmp_4.arg0 = s.arg0;
    s.tmp_4.arg1 = 51;
    s.tmp_4.arg2 = s.tmp_0;
    s.tmp_4.arg3 = 1;
    s.tmp_4.arg4 = false;
    s.tmp_4.arg5 = false;
    s.pc = 9; return s.tmp_4;
  case 9:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = pxsim_Array__getAt(s.tmp_3, 0);
    s.encr___143245 = (r0);
    s.tmp_0 = r0 = s.a_p___143227;
    r0 = pxsim.BufferMethods.getByte(s.encr___143245, 0);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["encryption"] = (s.tmp_1);
    r0 = pxsim_Array__push(s.APs___143221, s.a_p___143227);
    r0 = (s.i___143223 + 1);
    s.i___143223 = (r0);
    r0 = (s.unnamed415___U5 + 1);
    s.unnamed415___U5 = (r0);
    { step = 1; continue; }
  case 2:
    s.unnamed414___U4 = (undefined);
    r0 = s.APs___143221;
    return leave(s, r0)
  default: oops()
} } }
esp32_NinaController_getScanNetworks__P141275.info = {"start":10658,"length":751,"line":315,"column":8,"endLine":331,"endColumn":9,"fileName":"ninacontroller.ts","functionName":"getScanNetworks","argumentNames":["this"]}

function esp32_NinaController_getScanNetworks__P141275_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: esp32_NinaController_getScanNetworks__P141275, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  names___143216: undefined,
  APs___143221: undefined,
  i___143223: undefined,
  name___143225: undefined,
  unnamed414___U4: undefined,
  unnamed415___U5: undefined,
  a_p___143227: undefined,
  rssi___143233: undefined,
  encr___143245: undefined,
  arg0: undefined,
} }





function net_AccessPoint_constructor__P141087(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, net_AccessPoint__C141086_VT)) failedCast(r0);
    r0 = (s.arg0).fields["ssid"] = (s.arg1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
net_AccessPoint_constructor__P141087.info = {"start":774,"length":36,"line":30,"column":8,"endLine":30,"endColumn":44,"fileName":"pxt_modules/net/net.ts","functionName":"inline","argumentNames":["this","ssid"]}

function net_AccessPoint_constructor__P141087_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: net_AccessPoint_constructor__P141087, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
} }





function esp32_NinaController_startScanNetworks__P141274(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.resp___143264 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, esp32_NinaController__C141258_VT)) failedCast(r0);
    s.tmp_0 = esp32_NinaController_sendCommandGetResponse__P141270_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = 54;
    s.tmp_0.arg2 = undefined;
    s.tmp_0.arg3 = 1;
    s.tmp_0.arg4 = false;
    s.tmp_0.arg5 = false;
    s.pc = 3; return s.tmp_0;
  case 3:
    r0 = s.retval;
    s.resp___143264 = (r0);
    r0 = pxsim_Array__getAt(s.resp___143264, 0);
    s.tmp_2 = r0;
    r0 = pxsim.BufferMethods.getByte(s.tmp_2, 0);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 != 1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.tmp_3 = net_fail__P141084_mk(s);
    s.tmp_3.arg0 = "failed to start AP scan";
    s.pc = 4; return s.tmp_3;
  case 4:
    r0 = s.retval;
  case 1:
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
esp32_NinaController_startScanNetworks__P141274.info = {"start":10273,"length":220,"line":304,"column":8,"endLine":310,"endColumn":9,"fileName":"ninacontroller.ts","functionName":"startScanNetworks","argumentNames":["this"]}

function esp32_NinaController_startScanNetworks__P141274_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: esp32_NinaController_startScanNetworks__P141274, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  resp___143264: undefined,
  arg0: undefined,
} }





function helpers_arrayFilter__P140669(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.res___143275 = undefined;
    s.len___143277 = undefined;
    s.i___143280 = undefined;
    s.v___143285 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_Array__mk();
    s.res___143275 = (r0);
    r0 = pxsim_Array__length(s.arg0);
    s.len___143277 = (r0);
    s.i___143280 = (0);
  case 1:
    r0 = (s.i___143280 < s.len___143277);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 4; continue; }
    r0 = pxsim_Array__getAt(s.arg0, s.i___143280);
    s.v___143285 = (r0);
    s.tmp_1 = lambda_3_mk(s);
    s.tmp_1.argL = s.arg1;
    s.tmp_1.arg0 = s.v___143285;
    s.tmp_1.arg1 = s.i___143280;
    setupLambda(s.tmp_1, s.tmp_1.argL);
    s.pc = 5; return s.tmp_1;
  case 5:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 2; continue; }
    r0 = pxsim_Array__push(s.res___143275, s.v___143285);
  case 2:
  case 3:
    r0 = (s.i___143280 + 1);
    s.i___143280 = (r0);
    { step = 1; continue; }
  case 4:
    r0 = s.res___143275;
    return leave(s, r0)
  default: oops()
} } }
helpers_arrayFilter__P140669.info = {"start":5837,"length":317,"line":201,"column":4,"endLine":209,"endColumn":5,"fileName":"pxt_modules/base/pxt-helpers.ts","functionName":"arrayFilter","argumentNames":["arr","callbackfn"]}

function helpers_arrayFilter__P140669_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_arrayFilter__P140669, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  res___143275: undefined,
  len___143277: undefined,
  i___143280: undefined,
  v___143285: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function net_knownAccessPoints__P141098(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.tmp_1 = settings_SecretStore_readSecret__P141030_mk(s);
    s.tmp_1.arg0 = globals.deviceSecrets___141035;
    s.tmp_1.arg1 = globals.AP_SECRETS_KEY___141097;
    s.tmp_1.arg2 = false;
    s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = pxsim_pxtrt.mkMap();
  case 2:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = s.tmp_2;
    return leave(s, r0)
  default: oops()
} } }
net_knownAccessPoints__P141098.info = {"start":3044,"length":126,"line":107,"column":4,"endLine":109,"endColumn":5,"fileName":"pxt_modules/net/net.ts","functionName":"knownAccessPoints","argumentNames":[]}

function net_knownAccessPoints__P141098_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: net_knownAccessPoints__P141098, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
} }





function settings_SecretStore_constructor__P141033(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, settings_SecretStore__C141027_VT)) failedCast(r0);
    r0 = (s.arg0).fields["key"] = (s.arg1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
settings_SecretStore_constructor__P141033.info = {"start":4521,"length":36,"line":182,"column":8,"endLine":182,"endColumn":44,"fileName":"pxt_modules/settings/settings.ts","functionName":"inline","argumentNames":["this","key"]}

function settings_SecretStore_constructor__P141033_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: settings_SecretStore_constructor__P141033, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
} }





function settings_SecretStore_readSecret__P141030(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.secrets___143313 = undefined;
    s.secret___143316 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, settings_SecretStore__C141027_VT)) failedCast(r0);
    s.tmp_0 = settings_SecretStore_readSecrets__P141032_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.pc = 5; return s.tmp_0;
  case 5:
    r0 = s.retval;
    s.secrets___143313 = (r0);
    r0 = pxsim_pxtrt.mapGetGeneric(s.secrets___143313, s.arg1);
    s.secret___143316 = (r0);
    s.tmp_0 = r0 = s.arg2;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = pxsim_numops_toBoolDecr(s.secret___143316);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
  case 2:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 3; continue; }
    if ((s.arg1) && (s.arg1).vtable) {
    setupResume(s, 6);
    pxsim_String__stringConv(s.arg1);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.arg1) + ""; }
  case 6:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = pxsim_String__concat("missing secret ", s.tmp_4);
    s.tmp_3 = r0;
    r0 = pxsim.control.dmesg(s.tmp_3);
    r0 = pxsim_pxtrt.panic(922);
  case 3:
  case 4:
    r0 = s.secret___143316;
    return leave(s, r0)
  default: oops()
} } }
settings_SecretStore_readSecret__P141030.info = {"start":5135,"length":365,"line":200,"column":8,"endLine":208,"endColumn":9,"fileName":"pxt_modules/settings/settings.ts","functionName":"readSecret","argumentNames":["this","name","ensure"]}

function settings_SecretStore_readSecret__P141030_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: settings_SecretStore_readSecret__P141030, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  secrets___143313: undefined,
  secret___143316: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function settings_SecretStore_readSecrets__P141032(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.src___143338 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, settings_SecretStore__C141027_VT)) failedCast(r0);
    r0 = pxsim_pxtcore.beginTry(5);
    s.tmp_1 = settings_readString__P141018_mk(s);
    r0 = s.arg0.fields["key"];
    s.tmp_1.arg0 = r0;
    s.pc = 8; return s.tmp_1;
  case 8:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = "{}";
  case 2:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    s.src___143338 = (s.tmp_2);
    s.tmp_1 = JSON_parse__P140862_mk(s);
    s.tmp_1.arg0 = s.src___143338;
    s.pc = 9; return s.tmp_1;
  case 9:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 3; continue; }
    r0 = s.tmp_0;
    { step = 4; continue; }
  case 3:
    r0 = pxsim_pxtrt.mkMap();
  case 4:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = s.tmp_2;
    { step = 7; continue; }
    r0 = pxsim_pxtcore.endTry();
    { step = 6; continue; }
  case 5:
    r0 = pxsim.control.dmesg("invalid secret format");
    r0 = pxsim_pxtrt.mkMap();
    { step = 7; continue; }
  case 6:
    r0 = undefined;
  case 7:
    return leave(s, r0)
  default: oops()
} } }
settings_SecretStore_readSecrets__P141032.info = {"start":5587,"length":270,"line":214,"column":8,"endLine":222,"endColumn":9,"fileName":"pxt_modules/settings/settings.ts","functionName":"readSecrets","argumentNames":["this"]}

function settings_SecretStore_readSecrets__P141032_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: settings_SecretStore_readSecrets__P141032, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  src___143338: undefined,
  arg0: undefined,
} }





function JSON_parse__P140862(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.p___143351 = undefined;
    s.r___143361 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_pxtcore_mkClassInstance(JSON_Parser__C140848_VT);
    s.p___143351 = (r0);
    r0 = (s.p___143351).fields["ptr"] = (0);
    r0 = (s.p___143351).fields["s"] = (s.arg0);
    s.tmp_0 = JSON_Parser_value__P140857_mk(s);
    s.tmp_0.arg0 = s.p___143351;
    s.pc = 6; return s.tmp_0;
  case 6:
    r0 = s.retval;
    s.r___143361 = (r0);
    s.tmp_1 = JSON_Parser_skipWS__P140850_mk(s);
    s.tmp_1.arg0 = s.p___143351;
    s.pc = 7; return s.tmp_1;
  case 7:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.tmp_2 = JSON_Parser_error__P140849_mk(s);
    s.tmp_2.arg0 = s.p___143351;
    s.tmp_2.arg1 = "excessive input";
    s.pc = 8; return s.tmp_2;
  case 8:
    r0 = s.retval;
  case 1:
  case 2:
    r0 = s.p___143351.fields["errorMsg"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    r0 = s.p___143351.fields["errorMsg"];
    s.tmp_3 = r0;
    if ((s.tmp_3) && (s.tmp_3).vtable) {
    setupResume(s, 9);
    pxsim_String__stringConv(s.tmp_3);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_3) + ""; }
  case 9:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_String__concat("Invalid JSON: ", s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim.control.dmesg(s.tmp_1);
    r0 = undefined;
    { step = 5; continue; }
  case 3:
  case 4:
    r0 = s.r___143361;
  case 5:
    return leave(s, r0)
  default: oops()
} } }
JSON_parse__P140862.info = {"start":9325,"length":347,"line":307,"column":4,"endLine":320,"endColumn":5,"fileName":"pxt_modules/base/json.ts","functionName":"parse","argumentNames":["s"]}

function JSON_parse__P140862_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: JSON_parse__P140862, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  p___143351: undefined,
  r___143361: undefined,
  arg0: undefined,
} }





function JSON_Parser_error__P140849(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, JSON_Parser__C140848_VT)) failedCast(r0);
    r0 = s.arg0.fields["errorMsg"];
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.tmp_3 = r0 = s.arg0;
    if ((s.arg1) && (s.arg1).vtable) {
    setupResume(s, 3);
    pxsim_String__stringConv(s.arg1);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.arg1) + ""; }
  case 3:
    r0 = s.retval;
    s.tmp_7 = r0;
    r0 = pxsim_String__concat(s.tmp_7, " at position ");
    s.tmp_6 = r0;
    if ((s.tmp_6) && (s.tmp_6).vtable) {
    setupResume(s, 4);
    pxsim_String__stringConv(s.tmp_6);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_6) + ""; }
  case 4:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = s.arg0.fields["ptr"];
    s.tmp_9 = r0;
    if ((s.tmp_9) && (s.tmp_9).vtable) {
    setupResume(s, 5);
    pxsim_String__stringConv(s.tmp_9);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_9) + ""; }
  case 5:
    r0 = s.retval;
    s.tmp_8 = r0;
    r0 = pxsim_String__concat(s.tmp_5, s.tmp_8);
    s.tmp_4 = r0;
    r0 = (s.tmp_3).fields["errorMsg"] = (s.tmp_4);
    s.tmp_0 = r0 = s.arg0;
    r0 = s.arg0.fields["s"];
    s.tmp_2 = r0;
    r0 = pxsim_String_.length(s.tmp_2);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["ptr"] = (s.tmp_1);
  case 1:
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
JSON_Parser_error__P140849.info = {"start":1009,"length":184,"line":43,"column":8,"endLine":48,"endColumn":9,"fileName":"pxt_modules/base/json.ts","functionName":"error","argumentNames":["this","msg"]}

function JSON_Parser_error__P140849_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: JSON_Parser_error__P140849, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function JSON_Parser_skipWS__P140850(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.c___143406 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, JSON_Parser__C140848_VT)) failedCast(r0);
  case 1:
    s.tmp_0 = JSON_Parser_nextChar__P140851_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.pc = 11; return s.tmp_0;
  case 11:
    r0 = s.retval;
    s.c___143406 = (r0);
    r0 = (s.c___143406 == 32);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 2; continue; }
    r0 = s.tmp_0;
    { step = 3; continue; }
  case 2:
    r0 = (s.c___143406 == 10);
  case 3:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBool(s.tmp_1);
    if (!r0) { step = 4; continue; }
    r0 = s.tmp_1;
    { step = 5; continue; }
  case 4:
    r0 = (s.c___143406 == 13);
  case 5:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBool(s.tmp_2);
    if (!r0) { step = 6; continue; }
    r0 = s.tmp_2;
    { step = 7; continue; }
  case 6:
    r0 = (s.c___143406 == 9);
  case 7:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 8; continue; }
    { step = 9; continue; }
  case 8:
    s.tmp_4 = r0 = s.arg0;
    r0 = s.tmp_4.fields["ptr"];
    s.tmp_6 = r0;
    r0 = (s.tmp_6 - 1);
    s.tmp_5 = r0;
    r0 = (s.tmp_4).fields["ptr"] = (s.tmp_5);
    r0 = s.c___143406;
    { step = 10; continue; }
  case 9:
    { step = 1; continue; }
    r0 = undefined;
  case 10:
    return leave(s, r0)
  default: oops()
} } }
JSON_Parser_skipWS__P140850.info = {"start":1203,"length":301,"line":50,"column":8,"endLine":60,"endColumn":9,"fileName":"pxt_modules/base/json.ts","functionName":"skipWS","argumentNames":["this"]}

function JSON_Parser_skipWS__P140850_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: JSON_Parser_skipWS__P140850, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  c___143406: undefined,
  arg0: undefined,
} }





function JSON_Parser_nextChar__P140851(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, JSON_Parser__C140848_VT)) failedCast(r0);
    r0 = s.arg0.fields["ptr"];
    s.tmp_1 = r0;
    r0 = s.arg0.fields["s"];
    s.tmp_3 = r0;
    r0 = pxsim_String_.length(s.tmp_3);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.tmp_4 = r0 = s.arg0;
    r0 = s.tmp_4.fields["ptr"];
    s.tmp_6 = r0;
    r0 = (s.tmp_6 + 1);
    s.tmp_5 = r0;
    r0 = (s.tmp_4).fields["ptr"] = (s.tmp_5);
    r0 = s.arg0.fields["s"];
    s.tmp_7 = r0;
    r0 = pxsim_String_.charCodeAt(s.tmp_7, s.tmp_6);
    { step = 3; continue; }
  case 1:
  case 2:
    r0 = 0;
  case 3:
    return leave(s, r0)
  default: oops()
} } }
JSON_Parser_nextChar__P140851.info = {"start":1514,"length":138,"line":62,"column":8,"endLine":66,"endColumn":9,"fileName":"pxt_modules/base/json.ts","functionName":"nextChar","argumentNames":["this"]}

function JSON_Parser_nextChar__P140851_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: JSON_Parser_nextChar__P140851, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  arg0: undefined,
} }





function JSON_Parser_value__P140857(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.c___143443 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, JSON_Parser__C140848_VT)) failedCast(r0);
    r0 = s.arg0.fields["errorMsg"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = null;
    { step = 27; continue; }
  case 1:
  case 2:
    s.tmp_1 = JSON_Parser_skipWS__P140850_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.pc = 28; return s.tmp_1;
  case 28:
    r0 = s.retval;
    s.c___143443 = (r0);
    r0 = (s.c___143443 == 123);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.tmp_1 = JSON_Parser_doObject__P140854_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.pc = 29; return s.tmp_1;
  case 29:
    r0 = s.retval;
    { step = 27; continue; }
    { step = 26; continue; }
  case 3:
    r0 = (s.c___143443 == 91);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 4; continue; }
    s.tmp_3 = JSON_Parser_doArray__P140853_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.pc = 30; return s.tmp_3;
  case 30:
    r0 = s.retval;
    { step = 27; continue; }
    { step = 25; continue; }
  case 4:
    r0 = (48 <= s.c___143443);
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBool(s.tmp_4);
    if (r0) { step = 5; continue; }
    r0 = s.tmp_4;
    { step = 6; continue; }
  case 5:
    r0 = (s.c___143443 <= 57);
  case 6:
    // jmp value (already in r0)
    s.tmp_5 = r0;
    r0 = pxsim_numops_toBool(s.tmp_5);
    if (!r0) { step = 7; continue; }
    r0 = s.tmp_5;
    { step = 8; continue; }
  case 7:
    r0 = (s.c___143443 == 45);
  case 8:
    // jmp value (already in r0)
    s.tmp_6 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_6);
    if (!r0) { step = 9; continue; }
    s.tmp_7 = JSON_Parser_doNumber__P140855_mk(s);
    s.tmp_7.arg0 = s.arg0;
    s.pc = 31; return s.tmp_7;
  case 31:
    r0 = s.retval;
    { step = 27; continue; }
    { step = 24; continue; }
  case 9:
    r0 = (s.c___143443 == 34);
    s.tmp_8 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_8);
    if (!r0) { step = 10; continue; }
    s.tmp_9 = JSON_Parser_doString__P140852_mk(s);
    s.tmp_9.arg0 = s.arg0;
    s.pc = 32; return s.tmp_9;
  case 32:
    r0 = s.retval;
    { step = 27; continue; }
    { step = 23; continue; }
  case 10:
    r0 = (s.c___143443 == 116);
    s.tmp_10 = r0;
    r0 = pxsim_numops_toBool(s.tmp_10);
    if (r0) { step = 11; continue; }
    r0 = s.tmp_10;
    { step = 12; continue; }
  case 11:
    s.tmp_11 = JSON_Parser_checkKw__P140856_mk(s);
    s.tmp_11.arg0 = s.arg0;
    s.tmp_11.arg1 = "true";
    s.pc = 33; return s.tmp_11;
  case 33:
    r0 = s.retval;
  case 12:
    // jmp value (already in r0)
    s.tmp_12 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_12);
    if (!r0) { step = 13; continue; }
    r0 = true;
    { step = 27; continue; }
    { step = 22; continue; }
  case 13:
    r0 = (s.c___143443 == 102);
    s.tmp_13 = r0;
    r0 = pxsim_numops_toBool(s.tmp_13);
    if (r0) { step = 14; continue; }
    r0 = s.tmp_13;
    { step = 15; continue; }
  case 14:
    s.tmp_14 = JSON_Parser_checkKw__P140856_mk(s);
    s.tmp_14.arg0 = s.arg0;
    s.tmp_14.arg1 = "false";
    s.pc = 34; return s.tmp_14;
  case 34:
    r0 = s.retval;
  case 15:
    // jmp value (already in r0)
    s.tmp_15 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_15);
    if (!r0) { step = 16; continue; }
    r0 = false;
    { step = 27; continue; }
    { step = 21; continue; }
  case 16:
    r0 = (s.c___143443 == 110);
    s.tmp_16 = r0;
    r0 = pxsim_numops_toBool(s.tmp_16);
    if (r0) { step = 17; continue; }
    r0 = s.tmp_16;
    { step = 18; continue; }
  case 17:
    s.tmp_17 = JSON_Parser_checkKw__P140856_mk(s);
    s.tmp_17.arg0 = s.arg0;
    s.tmp_17.arg1 = "null";
    s.pc = 35; return s.tmp_17;
  case 35:
    r0 = s.retval;
  case 18:
    // jmp value (already in r0)
    s.tmp_18 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_18);
    if (!r0) { step = 19; continue; }
    r0 = null;
    { step = 27; continue; }
  case 19:
  case 20:
  case 21:
  case 22:
  case 23:
  case 24:
  case 25:
  case 26:
    s.tmp_19 = JSON_Parser_error__P140849_mk(s);
    s.tmp_19.arg0 = s.arg0;
    s.tmp_19.arg1 = "unexpected token";
    s.pc = 36; return s.tmp_19;
  case 36:
    r0 = s.retval;
    r0 = null;
  case 27:
    return leave(s, r0)
  default: oops()
} } }
JSON_Parser_value__P140857.info = {"start":4976,"length":743,"line":178,"column":8,"endLine":200,"endColumn":9,"fileName":"pxt_modules/base/json.ts","functionName":"value","argumentNames":["this"]}

function JSON_Parser_value__P140857_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: JSON_Parser_value__P140857, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  tmp_11: undefined,
  tmp_12: undefined,
  tmp_13: undefined,
  tmp_14: undefined,
  tmp_15: undefined,
  tmp_16: undefined,
  tmp_17: undefined,
  tmp_18: undefined,
  tmp_19: undefined,
  c___143443: undefined,
  arg0: undefined,
} }





function JSON_Parser_checkKw__P140856(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, JSON_Parser__C140848_VT)) failedCast(r0);
    s.tmp_2 = helpers_stringSlice__P140674_mk(s);
    r0 = s.arg0.fields["s"];
    s.tmp_2.arg0 = r0;
    r0 = s.arg0.fields["ptr"];
    s.tmp_2.arg1 = r0;
    r0 = s.arg0.fields["ptr"];
    s.tmp_3 = r0;
    r0 = pxsim_String_.length(s.arg1);
    s.tmp_4 = r0;
    r0 = (s.tmp_3 + s.tmp_4);
    s.tmp_2.arg2 = r0;
    s.pc = 4; return s.tmp_2;
  case 4:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_1 == s.arg1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.tmp_5 = r0 = s.arg0;
    r0 = s.tmp_5.fields["ptr"];
    s.tmp_7 = r0;
    r0 = pxsim_String_.length(s.arg1);
    s.tmp_8 = r0;
    r0 = (s.tmp_7 + s.tmp_8);
    s.tmp_6 = r0;
    r0 = (s.tmp_5).fields["ptr"] = (s.tmp_6);
    r0 = true;
    { step = 3; continue; }
  case 1:
  case 2:
    r0 = false;
  case 3:
    return leave(s, r0)
  default: oops()
} } }
JSON_Parser_checkKw__P140856.info = {"start":4764,"length":202,"line":170,"column":8,"endLine":176,"endColumn":9,"fileName":"pxt_modules/base/json.ts","functionName":"checkKw","argumentNames":["this","k"]}

function JSON_Parser_checkKw__P140856_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: JSON_Parser_checkKw__P140856, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function helpers_stringSlice__P140674(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.len___143506 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_String_.length(s.arg0);
    s.len___143506 = (r0);
    r0 = (s.arg1 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.tmp_1 = Math_max__P140682_mk(s);
    r0 = (s.len___143506 + s.arg1);
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = 0;
    s.pc = 7; return s.tmp_1;
  case 7:
    r0 = s.retval;
    s.arg1 = (r0);
  case 1:
  case 2:
    r0 = (s.arg2 == null);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.arg2 = (s.len___143506);
  case 3:
  case 4:
    r0 = (s.arg2 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    r0 = (s.len___143506 + s.arg2);
    s.arg2 = (r0);
  case 5:
  case 6:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_1 = r0 = s.arg1;
    r0 = (s.arg2 - s.arg1);
    s.tmp_2 = r0;
    r0 = pxsim_String_.substr(s.tmp_0, s.tmp_1, s.tmp_2);
    return leave(s, r0)
  default: oops()
} } }
helpers_stringSlice__P140674.info = {"start":7747,"length":365,"line":266,"column":4,"endLine":282,"endColumn":5,"fileName":"pxt_modules/base/pxt-helpers.ts","functionName":"stringSlice","argumentNames":["s","start","end"]}

function helpers_stringSlice__P140674_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_stringSlice__P140674, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  len___143506: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function JSON_Parser_doString__P140852(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.r___143536 = undefined;
    s.c___143541 = undefined;
    s.q___143556 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, JSON_Parser__C140848_VT)) failedCast(r0);
    r0 = pxsim_String_.mkEmpty();
    s.r___143536 = (r0);
    s.tmp_0 = r0 = s.arg0;
    r0 = s.tmp_0.fields["ptr"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 + 1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["ptr"] = (s.tmp_1);
  case 1:
    s.tmp_0 = r0 = s.arg0;
    r0 = s.tmp_0.fields["ptr"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 + 1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["ptr"] = (s.tmp_1);
    r0 = s.arg0.fields["s"];
    s.tmp_3 = r0;
    r0 = pxsim_String_.charAt(s.tmp_3, s.tmp_2);
    s.c___143541 = (r0);
    r0 = (s.c___143541 == "\"");
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 2; continue; }
    r0 = s.r___143536;
    { step = 16; continue; }
  case 2:
  case 3:
    r0 = (s.c___143541 == "\\");
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 14; continue; }
    s.tmp_2 = r0 = s.arg0;
    r0 = s.tmp_2.fields["ptr"];
    s.tmp_4 = r0;
    r0 = (s.tmp_4 + 1);
    s.tmp_3 = r0;
    r0 = (s.tmp_2).fields["ptr"] = (s.tmp_3);
    r0 = s.arg0.fields["s"];
    s.tmp_5 = r0;
    r0 = pxsim_String_.charAt(s.tmp_5, s.tmp_4);
    s.q___143556 = (r0);
    r0 = (s.q___143556 == "b");
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 4; continue; }
    s.q___143556 = ("\b");
    { step = 13; continue; }
  case 4:
    r0 = (s.q___143556 == "n");
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    s.q___143556 = ("\n");
    { step = 12; continue; }
  case 5:
    r0 = (s.q___143556 == "r");
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 6; continue; }
    s.q___143556 = ("\r");
    { step = 11; continue; }
  case 6:
    r0 = (s.q___143556 == "t");
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 7; continue; }
    s.q___143556 = ("\t");
    { step = 10; continue; }
  case 7:
    r0 = (s.q___143556 == "u");
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 8; continue; }
    s.tmp_2 = JSON_parseIntRadix__P140847_mk(s);
    s.tmp_3 = helpers_stringSlice__P140674_mk(s);
    r0 = s.arg0.fields["s"];
    s.tmp_3.arg0 = r0;
    r0 = s.arg0.fields["ptr"];
    s.tmp_3.arg1 = r0;
    r0 = s.arg0.fields["ptr"];
    s.tmp_4 = r0;
    r0 = (s.tmp_4 + 4);
    s.tmp_3.arg2 = r0;
    s.pc = 18; return s.tmp_3;
  case 18:
    r0 = s.retval;
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = 16;
    s.pc = 17; return s.tmp_2;
  case 17:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim_String_.fromCharCode(s.tmp_1);
    s.q___143556 = (r0);
    s.tmp_0 = r0 = s.arg0;
    r0 = s.tmp_0.fields["ptr"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 + 4);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["ptr"] = (s.tmp_1);
  case 8:
  case 9:
  case 10:
  case 11:
  case 12:
  case 13:
    if ((s.r___143536) && (s.r___143536).vtable) {
    setupResume(s, 19);
    pxsim_String__stringConv(s.r___143536);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.r___143536) + ""; }
  case 19:
    r0 = s.retval;
    s.tmp_0 = r0;
    if ((s.q___143556) && (s.q___143556).vtable) {
    setupResume(s, 20);
    pxsim_String__stringConv(s.q___143556);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.q___143556) + ""; }
  case 20:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim_String__concat(s.tmp_0, s.tmp_1);
    s.r___143536 = (r0);
    { step = 15; continue; }
  case 14:
    if ((s.r___143536) && (s.r___143536).vtable) {
    setupResume(s, 21);
    pxsim_String__stringConv(s.r___143536);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.r___143536) + ""; }
  case 21:
    r0 = s.retval;
    s.tmp_0 = r0;
    if ((s.c___143541) && (s.c___143541).vtable) {
    setupResume(s, 22);
    pxsim_String__stringConv(s.c___143541);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.c___143541) + ""; }
  case 22:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim_String__concat(s.tmp_0, s.tmp_1);
    s.r___143536 = (r0);
  case 15:
    { step = 1; continue; }
    r0 = undefined;
  case 16:
    return leave(s, r0)
  default: oops()
} } }
JSON_Parser_doString__P140852.info = {"start":1662,"length":795,"line":68,"column":8,"endLine":90,"endColumn":9,"fileName":"pxt_modules/base/json.ts","functionName":"doString","argumentNames":["this"]}

function JSON_Parser_doString__P140852_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: JSON_Parser_doString__P140852, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  r___143536: undefined,
  c___143541: undefined,
  q___143556: undefined,
  arg0: undefined,
} }





function JSON_parseIntRadix__P140847(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.m___143620 = undefined;
    s.r___143621 = undefined;
    s.i___143622 = undefined;
    s.c___143628 = undefined;
    s.v___143653 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = (s.arg1 == null);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = (s.arg1 == 10);
  case 2:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 3; continue; }
    r0 = pxsim_String_.toNumber(s.arg0);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 | 0);
    { step = 36; continue; }
  case 3:
  case 4:
    s.m___143620 = (false);
    s.r___143621 = (0);
    s.i___143622 = (0);
  case 5:
    s.tmp_1 = r0 = s.i___143622;
    r0 = pxsim_String_.length(s.arg0);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 33; continue; }
    r0 = pxsim_String_.charCodeAt(s.arg0, s.i___143622);
    s.c___143628 = (r0);
    r0 = (s.c___143628 == 32);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 6; continue; }
    r0 = s.tmp_0;
    { step = 7; continue; }
  case 6:
    r0 = (s.c___143628 == 10);
  case 7:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBool(s.tmp_1);
    if (!r0) { step = 8; continue; }
    r0 = s.tmp_1;
    { step = 9; continue; }
  case 8:
    r0 = (s.c___143628 == 13);
  case 9:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBool(s.tmp_2);
    if (!r0) { step = 10; continue; }
    r0 = s.tmp_2;
    { step = 11; continue; }
  case 10:
    r0 = (s.c___143628 == 9);
  case 11:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 12; continue; }
    { step = 32; continue; }
  case 12:
  case 13:
    r0 = (s.r___143621 == 0);
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBool(s.tmp_4);
    if (r0) { step = 14; continue; }
    r0 = s.tmp_4;
    { step = 15; continue; }
  case 14:
    r0 = pxsim_numops_toBoolDecr(s.m___143620);
    s.tmp_5 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_5);
  case 15:
    // jmp value (already in r0)
    s.tmp_6 = r0;
    r0 = pxsim_numops_toBool(s.tmp_6);
    if (r0) { step = 16; continue; }
    r0 = s.tmp_6;
    { step = 17; continue; }
  case 16:
    r0 = (s.c___143628 == 45);
  case 17:
    // jmp value (already in r0)
    s.tmp_7 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_7);
    if (!r0) { step = 18; continue; }
    s.m___143620 = (true);
    { step = 32; continue; }
  case 18:
  case 19:
    s.v___143653 = (-1);
    r0 = (48 <= s.c___143628);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 20; continue; }
    r0 = s.tmp_0;
    { step = 21; continue; }
  case 20:
    r0 = (s.c___143628 <= 57);
  case 21:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 22; continue; }
    r0 = (s.c___143628 - 48);
    s.v___143653 = (r0);
    { step = 27; continue; }
  case 22:
    r0 = (s.c___143628 | 32);
    s.c___143628 = (r0);
    r0 = (97 <= s.c___143628);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 23; continue; }
    r0 = s.tmp_0;
    { step = 24; continue; }
  case 23:
    r0 = (s.c___143628 <= 122);
  case 24:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 25; continue; }
    r0 = (s.c___143628 - 97);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 + 10);
    s.v___143653 = (r0);
  case 25:
  case 26:
  case 27:
    r0 = (0 <= s.v___143653);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 28; continue; }
    r0 = s.tmp_0;
    { step = 29; continue; }
  case 28:
    r0 = (s.v___143653 < s.arg1);
  case 29:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 30; continue; }
    r0 = (s.r___143621 * s.arg1);
    s.r___143621 = (r0);
    r0 = (s.r___143621 + s.v___143653);
    s.r___143621 = (r0);
    { step = 31; continue; }
  case 30:
    r0 = undefined;
    { step = 36; continue; }
  case 31:
  case 32:
    r0 = (s.i___143622 + 1);
    s.i___143622 = (r0);
    { step = 5; continue; }
  case 33:
    r0 = pxsim_numops_toBoolDecr(s.m___143620);
    if (!r0) { step = 34; continue; }
    r0 = (0 - s.r___143621);
    { step = 35; continue; }
  case 34:
    r0 = s.r___143621;
  case 35:
    // jmp value (already in r0)
    s.tmp_0 = r0;
    r0 = s.tmp_0;
  case 36:
    return leave(s, r0)
  default: oops()
} } }
JSON_parseIntRadix__P140847.info = {"start":21,"length":894,"line":1,"column":4,"endLine":35,"endColumn":5,"fileName":"pxt_modules/base/json.ts","functionName":"parseIntRadix","argumentNames":["s","base"]}

function JSON_parseIntRadix__P140847_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: JSON_parseIntRadix__P140847, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  m___143620: undefined,
  r___143621: undefined,
  i___143622: undefined,
  c___143628: undefined,
  v___143653: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function JSON_Parser_doNumber__P140855(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.beg___143703 = undefined;
    s.c___143707 = undefined;
    s.ss___143735 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, JSON_Parser__C140848_VT)) failedCast(r0);
    r0 = s.arg0.fields["ptr"];
    s.beg___143703 = (r0);
  case 1:
    s.tmp_0 = JSON_Parser_nextChar__P140851_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.pc = 20; return s.tmp_0;
  case 20:
    r0 = s.retval;
    s.c___143707 = (r0);
    r0 = (48 <= s.c___143707);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 2; continue; }
    r0 = s.tmp_0;
    { step = 3; continue; }
  case 2:
    r0 = (s.c___143707 <= 57);
  case 3:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBool(s.tmp_1);
    if (!r0) { step = 4; continue; }
    r0 = s.tmp_1;
    { step = 5; continue; }
  case 4:
    r0 = (s.c___143707 == 43);
  case 5:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBool(s.tmp_2);
    if (!r0) { step = 6; continue; }
    r0 = s.tmp_2;
    { step = 7; continue; }
  case 6:
    r0 = (s.c___143707 == 45);
  case 7:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBool(s.tmp_3);
    if (!r0) { step = 8; continue; }
    r0 = s.tmp_3;
    { step = 9; continue; }
  case 8:
    r0 = (s.c___143707 == 46);
  case 9:
    // jmp value (already in r0)
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBool(s.tmp_4);
    if (!r0) { step = 10; continue; }
    r0 = s.tmp_4;
    { step = 11; continue; }
  case 10:
    r0 = (s.c___143707 == 69);
  case 11:
    // jmp value (already in r0)
    s.tmp_5 = r0;
    r0 = pxsim_numops_toBool(s.tmp_5);
    if (!r0) { step = 12; continue; }
    r0 = s.tmp_5;
    { step = 13; continue; }
  case 12:
    r0 = (s.c___143707 == 101);
  case 13:
    // jmp value (already in r0)
    s.tmp_6 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_6);
    if (!r0) { step = 14; continue; }
    { step = 15; continue; }
  case 14:
    s.tmp_7 = r0 = s.arg0;
    r0 = s.tmp_7.fields["ptr"];
    s.tmp_9 = r0;
    r0 = (s.tmp_9 - 1);
    s.tmp_8 = r0;
    r0 = (s.tmp_7).fields["ptr"] = (s.tmp_8);
    { step = 16; continue; }
  case 15:
    { step = 1; continue; }
  case 16:
    s.tmp_0 = helpers_stringSlice__P140674_mk(s);
    r0 = s.arg0.fields["s"];
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = s.beg___143703;
    r0 = s.arg0.fields["ptr"];
    s.tmp_0.arg2 = r0;
    s.pc = 21; return s.tmp_0;
  case 21:
    r0 = s.retval;
    s.ss___143735 = (r0);
    r0 = pxsim_String_.length(s.ss___143735);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 == 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 17; continue; }
    s.tmp_2 = JSON_Parser_error__P140849_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.tmp_2.arg1 = "expecting number";
    s.pc = 22; return s.tmp_2;
  case 22:
    r0 = s.retval;
    r0 = 0;
    { step = 19; continue; }
  case 17:
  case 18:
    r0 = pxsim_String_.toNumber(s.ss___143735);
  case 19:
    return leave(s, r0)
  default: oops()
} } }
JSON_Parser_doNumber__P140855.info = {"start":4169,"length":585,"line":151,"column":8,"endLine":168,"endColumn":9,"fileName":"pxt_modules/base/json.ts","functionName":"doNumber","argumentNames":["this"]}

function JSON_Parser_doNumber__P140855_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: JSON_Parser_doNumber__P140855, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  beg___143703: undefined,
  c___143707: undefined,
  ss___143735: undefined,
  arg0: undefined,
} }





function JSON_Parser_doArray__P140853(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.r___143751 = undefined;
    s.c___143757 = undefined;
    s.v___143765 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, JSON_Parser__C140848_VT)) failedCast(r0);
    r0 = pxsim_Array__mk();
    s.r___143751 = (r0);
    s.tmp_0 = r0 = s.arg0;
    r0 = s.tmp_0.fields["ptr"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 + 1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["ptr"] = (s.tmp_1);
  case 1:
    s.tmp_0 = JSON_Parser_skipWS__P140850_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.pc = 12; return s.tmp_0;
  case 12:
    r0 = s.retval;
    s.c___143757 = (r0);
    r0 = (s.c___143757 == 93);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 2; continue; }
    s.tmp_1 = r0 = s.arg0;
    r0 = s.tmp_1.fields["ptr"];
    s.tmp_3 = r0;
    r0 = (s.tmp_3 + 1);
    s.tmp_2 = r0;
    r0 = (s.tmp_1).fields["ptr"] = (s.tmp_2);
    r0 = s.r___143751;
    { step = 11; continue; }
  case 2:
  case 3:
    s.tmp_0 = JSON_Parser_value__P140857_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.pc = 13; return s.tmp_0;
  case 13:
    r0 = s.retval;
    s.v___143765 = (r0);
    r0 = s.arg0.fields["errorMsg"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 4; continue; }
    r0 = null;
    { step = 11; continue; }
  case 4:
  case 5:
    r0 = pxsim_Array__push(s.r___143751, s.v___143765);
    s.tmp_0 = JSON_Parser_skipWS__P140850_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.pc = 14; return s.tmp_0;
  case 14:
    r0 = s.retval;
    s.c___143757 = (r0);
    r0 = (s.c___143757 == 44);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 6; continue; }
    s.tmp_1 = r0 = s.arg0;
    r0 = s.tmp_1.fields["ptr"];
    s.tmp_3 = r0;
    r0 = (s.tmp_3 + 1);
    s.tmp_2 = r0;
    r0 = (s.tmp_1).fields["ptr"] = (s.tmp_2);
    { step = 10; continue; }
  case 6:
  case 7:
    r0 = (s.c___143757 == 93);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 8; continue; }
    { step = 10; continue; }
  case 8:
  case 9:
    s.tmp_1 = JSON_Parser_error__P140849_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.tmp_1.arg1 = "expecting comma";
    s.pc = 15; return s.tmp_1;
  case 15:
    r0 = s.retval;
  case 10:
    { step = 1; continue; }
    r0 = undefined;
  case 11:
    return leave(s, r0)
  default: oops()
} } }
JSON_Parser_doArray__P140853.info = {"start":2467,"length":646,"line":92,"column":8,"endLine":114,"endColumn":9,"fileName":"pxt_modules/base/json.ts","functionName":"doArray","argumentNames":["this"]}

function JSON_Parser_doArray__P140853_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: JSON_Parser_doArray__P140853, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  r___143751: undefined,
  c___143757: undefined,
  v___143765: undefined,
  arg0: undefined,
} }





function JSON_Parser_doObject__P140854(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.r___143786 = undefined;
    s.c___143792 = undefined;
    s.k___143804 = undefined;
    s.v___143816 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, JSON_Parser__C140848_VT)) failedCast(r0);
    r0 = pxsim_pxtrt.mkMap();
    s.r___143786 = (r0);
    s.tmp_0 = r0 = s.arg0;
    r0 = s.tmp_0.fields["ptr"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 + 1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["ptr"] = (s.tmp_1);
  case 1:
    s.tmp_0 = JSON_Parser_skipWS__P140850_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.pc = 16; return s.tmp_0;
  case 16:
    r0 = s.retval;
    s.c___143792 = (r0);
    r0 = (s.c___143792 == 125);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 2; continue; }
    s.tmp_1 = r0 = s.arg0;
    r0 = s.tmp_1.fields["ptr"];
    s.tmp_3 = r0;
    r0 = (s.tmp_3 + 1);
    s.tmp_2 = r0;
    r0 = (s.tmp_1).fields["ptr"] = (s.tmp_2);
    r0 = s.r___143786;
    { step = 15; continue; }
  case 2:
  case 3:
    r0 = (s.c___143792 != 34);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 4; continue; }
    s.tmp_1 = JSON_Parser_error__P140849_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.tmp_1.arg1 = "expecting key";
    s.pc = 17; return s.tmp_1;
  case 17:
    r0 = s.retval;
    r0 = s.r___143786;
    { step = 15; continue; }
  case 4:
  case 5:
    s.tmp_0 = JSON_Parser_doString__P140852_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.pc = 18; return s.tmp_0;
  case 18:
    r0 = s.retval;
    s.k___143804 = (r0);
    s.tmp_0 = JSON_Parser_skipWS__P140850_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.pc = 19; return s.tmp_0;
  case 19:
    r0 = s.retval;
    s.c___143792 = (r0);
    r0 = (s.c___143792 != 58);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 6; continue; }
    s.tmp_1 = JSON_Parser_error__P140849_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.tmp_1.arg1 = "expecting colon";
    s.pc = 20; return s.tmp_1;
  case 20:
    r0 = s.retval;
    r0 = s.r___143786;
    { step = 15; continue; }
  case 6:
  case 7:
    s.tmp_0 = r0 = s.arg0;
    r0 = s.tmp_0.fields["ptr"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 + 1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["ptr"] = (s.tmp_1);
    s.tmp_0 = JSON_Parser_value__P140857_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.pc = 21; return s.tmp_0;
  case 21:
    r0 = s.retval;
    s.v___143816 = (r0);
    r0 = s.arg0.fields["errorMsg"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 8; continue; }
    r0 = null;
    { step = 15; continue; }
  case 8:
  case 9:
    r0 = pxsim_pxtrt.mapSetGeneric(s.r___143786, s.k___143804, s.v___143816);
    s.tmp_0 = JSON_Parser_skipWS__P140850_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.pc = 22; return s.tmp_0;
  case 22:
    r0 = s.retval;
    s.c___143792 = (r0);
    r0 = (s.c___143792 == 44);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 10; continue; }
    s.tmp_1 = r0 = s.arg0;
    r0 = s.tmp_1.fields["ptr"];
    s.tmp_3 = r0;
    r0 = (s.tmp_3 + 1);
    s.tmp_2 = r0;
    r0 = (s.tmp_1).fields["ptr"] = (s.tmp_2);
    { step = 14; continue; }
  case 10:
  case 11:
    r0 = (s.c___143792 == 125);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 12; continue; }
    { step = 14; continue; }
  case 12:
  case 13:
    s.tmp_1 = JSON_Parser_error__P140849_mk(s);
    s.tmp_1.arg0 = s.arg0;
    r0 = pxsim_String_.fromCharCode(s.c___143792);
    s.tmp_3 = r0;
    if ((s.tmp_3) && (s.tmp_3).vtable) {
    setupResume(s, 24);
    pxsim_String__stringConv(s.tmp_3);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_3) + ""; }
  case 24:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_String__concat("expecting comma, got ", s.tmp_2);
    s.tmp_1.arg1 = r0;
    s.pc = 23; return s.tmp_1;
  case 23:
    r0 = s.retval;
  case 14:
    { step = 1; continue; }
    r0 = undefined;
  case 15:
    return leave(s, r0)
  default: oops()
} } }
JSON_Parser_doObject__P140854.info = {"start":3123,"length":1036,"line":116,"column":8,"endLine":149,"endColumn":9,"fileName":"pxt_modules/base/json.ts","functionName":"doObject","argumentNames":["this"]}

function JSON_Parser_doObject__P140854_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: JSON_Parser_doObject__P140854, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  r___143786: undefined,
  c___143792: undefined,
  k___143804: undefined,
  v___143816: undefined,
  arg0: undefined,
} }





function esp32_NinaController_isConnected__P141288(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, esp32_NinaController__C141258_VT)) failedCast(r0);
    s.tmp_1 = esp32_NinaController_status__P141271_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.pc = 1; return s.tmp_1;
  case 1:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = (s.tmp_0 == 3);
    return leave(s, r0)
  default: oops()
} } }
esp32_NinaController_isConnected__P141288.info = {"start":15176,"length":85,"line":437,"column":8,"endLine":439,"endColumn":9,"fileName":"ninacontroller.ts","functionName":"isConnected","argumentNames":["this"]}

function esp32_NinaController_isConnected__P141288_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: esp32_NinaController_isConnected__P141288, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function esp32_NinaController_isIdle__P141289(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, esp32_NinaController__C141258_VT)) failedCast(r0);
    s.tmp_1 = esp32_NinaController_status__P141271_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.pc = 1; return s.tmp_1;
  case 1:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = (s.tmp_0 == 0);
    return leave(s, r0)
  default: oops()
} } }
esp32_NinaController_isIdle__P141289.info = {"start":15271,"length":83,"line":441,"column":8,"endLine":443,"endColumn":9,"fileName":"ninacontroller.ts","functionName":"isIdle","argumentNames":["this"]}

function esp32_NinaController_isIdle__P141289_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: esp32_NinaController_isIdle__P141289, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function esp32_NinaController_MACaddress__P141273(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.resp___143852 = undefined;
    s.res___143861 = undefined;
    s.i___143865 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, esp32_NinaController__C141258_VT)) failedCast(r0);
    r0 = pxsim_Array__mk();
    s.tmp_0 = r0;
    r0 = pxsim_Array__push(s.tmp_0, _hex143857);
    s.tmp_1 = esp32_NinaController_sendCommandGetResponse__P141270_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.tmp_1.arg1 = 34;
    s.tmp_1.arg2 = s.tmp_0;
    s.tmp_1.arg3 = 1;
    s.tmp_1.arg4 = false;
    s.tmp_1.arg5 = false;
    s.pc = 6; return s.tmp_1;
  case 6:
    r0 = s.retval;
    s.resp___143852 = (r0);
    r0 = pxsim_numops_toBoolDecr(s.resp___143852);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = null;
    { step = 5; continue; }
  case 1:
  case 2:
    r0 = pxsim.control.createBuffer(6);
    s.res___143861 = (r0);
    s.i___143865 = (0);
  case 3:
    r0 = (s.i___143865 < 6);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 4; continue; }
    s.tmp_1 = r0 = s.res___143861;
    s.tmp_2 = r0 = s.i___143865;
    r0 = pxsim_Array__getAt(s.resp___143852, 0);
    s.tmp_4 = r0;
    r0 = (5 - s.i___143865);
    s.tmp_5 = r0;
    r0 = pxsim.BufferMethods.getByte(s.tmp_4, s.tmp_5);
    s.tmp_3 = r0;
    r0 = pxsim.BufferMethods.setByte(s.tmp_1, s.tmp_2, s.tmp_3);
    r0 = (s.i___143865 + 1);
    s.i___143865 = (r0);
    { step = 3; continue; }
  case 4:
    r0 = s.res___143861;
  case 5:
    return leave(s, r0)
  default: oops()
} } }
esp32_NinaController_MACaddress__P141273.info = {"start":9764,"length":383,"line":290,"column":8,"endLine":299,"endColumn":9,"fileName":"ninacontroller.ts","functionName":"MACaddress","argumentNames":["this"]}

function esp32_NinaController_MACaddress__P141273_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: esp32_NinaController_MACaddress__P141273, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  resp___143852: undefined,
  res___143861: undefined,
  i___143865: undefined,
  arg0: undefined,
} }

const _hex143857 = pxsim.BufferMethods.createBufferFromHex("ff")




function esp32_NinaController_firmwareVersion__P141272(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.resp___143882 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, esp32_NinaController__C141258_VT)) failedCast(r0);
    s.tmp_0 = esp32_NinaController_sendCommandGetResponse__P141270_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = 55;
    s.tmp_0.arg2 = undefined;
    s.tmp_0.arg3 = 1;
    s.tmp_0.arg4 = false;
    s.tmp_0.arg5 = false;
    s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    s.resp___143882 = (r0);
    r0 = pxsim_numops_toBoolDecr(s.resp___143882);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = "not connected";
    { step = 3; continue; }
  case 1:
  case 2:
    r0 = pxsim_Array__getAt(s.resp___143882, 0);
    s.tmp_2 = r0;
    r0 = pxsim.BufferMethods.toString(s.tmp_2);
  case 3:
    return leave(s, r0)
  default: oops()
} } }
esp32_NinaController_firmwareVersion__P141272.info = {"start":9473,"length":214,"line":282,"column":8,"endLine":287,"endColumn":9,"fileName":"ninacontroller.ts","functionName":"firmwareVersion","argumentNames":["this"]}

function esp32_NinaController_firmwareVersion__P141272_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: esp32_NinaController_firmwareVersion__P141272, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  resp___143882: undefined,
  arg0: undefined,
} }





function net_Controller_ping__P141052(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, net_Controller__C141038_VT)) failedCast(r0);
    r0 = -1;
    return leave(s, r0)
  default: oops()
} } }
net_Controller_ping__P141052.info = {"start":1071,"length":67,"line":38,"column":8,"endLine":38,"endColumn":75,"fileName":"pxt_modules/net/controller.ts","functionName":"ping","argumentNames":["this","dest","ttl"]}

function net_Controller_ping__P141052_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: net_Controller_ping__P141052, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function net_Controller_MACaddress__P141051(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, net_Controller__C141038_VT)) failedCast(r0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
net_Controller_MACaddress__P141051.info = {"start":1016,"length":46,"line":37,"column":8,"endLine":37,"endColumn":54,"fileName":"pxt_modules/net/controller.ts","functionName":"MACaddress","argumentNames":["this"]}

function net_Controller_MACaddress__P141051_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: net_Controller_MACaddress__P141051, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function net_Controller_connect__P141049(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, net_Controller__C141038_VT)) failedCast(r0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
net_Controller_connect__P141049.info = {"start":939,"length":19,"line":35,"column":8,"endLine":35,"endColumn":27,"fileName":"pxt_modules/net/controller.ts","functionName":"connect","argumentNames":["this"]}

function net_Controller_connect__P141049_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: net_Controller_connect__P141049, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function net_Controller_isIdle__P141047(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, net_Controller__C141038_VT)) failedCast(r0);
    r0 = false;
    return leave(s, r0)
  default: oops()
} } }
net_Controller_isIdle__P141047.info = {"start":838,"length":39,"line":33,"column":8,"endLine":33,"endColumn":47,"fileName":"pxt_modules/net/controller.ts","functionName":"isIdle","argumentNames":["this"]}

function net_Controller_isIdle__P141047_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: net_Controller_isIdle__P141047, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function control_EventContext_constructor__P140884(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, control_EventContext__C140871_VT)) failedCast(r0);
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_Array__mk();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["handlers"] = (s.tmp_1);
    r0 = (s.arg0).fields["framesInSample"] = (0);
    r0 = (s.arg0).fields["timeInSample"] = (0);
    r0 = (s.arg0).fields["deltaTimeMillis"] = (0);
    r0 = (s.arg0).fields["frameWorker"] = (0);
    r0 = (s.arg0).fields["idleCallbacks"] = (undefined);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
control_EventContext_constructor__P140884.info = {"start":1733,"length":245,"line":58,"column":8,"endLine":65,"endColumn":9,"fileName":"pxt_modules/base/eventcontext.ts","functionName":"inline","argumentNames":["this"]}

function control_EventContext_constructor__P140884_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control_EventContext_constructor__P140884, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function net_Controller_hostbyName__P141046(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, net_Controller__C141038_VT)) failedCast(r0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
net_Controller_hostbyName__P141046.info = {"start":744,"length":85,"line":30,"column":8,"endLine":32,"endColumn":9,"fileName":"pxt_modules/net/controller.ts","functionName":"hostbyName","argumentNames":["this","hostname"]}

function net_Controller_hostbyName__P141046_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: net_Controller_hostbyName__P141046, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
} }





function net_Controller_isConnected__P141048(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, net_Controller__C141038_VT)) failedCast(r0);
    r0 = false;
    return leave(s, r0)
  default: oops()
} } }
net_Controller_isConnected__P141048.info = {"start":886,"length":44,"line":34,"column":8,"endLine":34,"endColumn":52,"fileName":"pxt_modules/net/controller.ts","functionName":"isConnected","argumentNames":["this"]}

function net_Controller_isConnected__P141048_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: net_Controller_isConnected__P141048, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function net_Controller_scanNetworks__P141039(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, net_Controller__C141038_VT)) failedCast(r0);
    r0 = pxsim_Array__mk();
    return leave(s, r0)
  default: oops()
} } }
net_Controller_scanNetworks__P141039.info = {"start":81,"length":75,"line":4,"column":8,"endLine":6,"endColumn":9,"fileName":"pxt_modules/net/controller.ts","functionName":"scanNetworks","argumentNames":["this"]}

function net_Controller_scanNetworks__P141039_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: net_Controller_scanNetworks__P141039, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }




function if_isIdle_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function lambda_2_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
} }


function if_firmwareVersion_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function lambda_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_toHex_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_MACaddress_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_getTemperature_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_connect_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_ping_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function lambda_3_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }


function lambda_4_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }


function esp32_NinaController__C141258_v4_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function esp32_NinaController__C141258_v1_2_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
} }


function esp32_NinaController__C141258_v3_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function esp32_NinaController__C141258_v0_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }

const net_Net__C141089_VT = mkVTable({
  name: "Net",
  numFields: 2,
  classNo: 16,
  lastSubtypeNo: 16,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "_controller": null,
    "set/_controller": null,
    "factory": null,
    "set/factory": null,
    "controller": net_Net_controller__P141090,
  },
});
const net_Controller__C141038_VT = mkVTable({
  name: "Controller",
  numFields: 0,
  classNo: 17,
  lastSubtypeNo: 18,
  maxBgInstances: null,
  methods: {
    "scanNetworks": net_Controller_scanNetworks__P141039,
    "hostbyName": net_Controller_hostbyName__P141046,
    "isIdle": net_Controller_isIdle__P141047,
    "isConnected": net_Controller_isConnected__P141048,
    "connect": net_Controller_connect__P141049,
    "MACaddress": net_Controller_MACaddress__P141051,
    "ping": net_Controller_ping__P141052,
  },
  iface: {
    "scanNetworks": net_Controller_scanNetworks__P141039,
    "hostbyName": net_Controller_hostbyName__P141046,
    "isIdle": net_Controller_isIdle__P141047,
    "isConnected": net_Controller_isConnected__P141048,
    "connect": net_Controller_connect__P141049,
    "MACaddress": net_Controller_MACaddress__P141051,
    "ping": net_Controller_ping__P141052,
  },
});
const esp32_NinaController__C141258_VT = mkVTable({
  name: "NinaController",
  numFields: 8,
  classNo: 18,
  lastSubtypeNo: 18,
  maxBgInstances: null,
  methods: {
    "scanNetworks": esp32_NinaController_scanNetworks__P141276,
    "hostbyName": esp32_NinaController_hostbyName__P141292,
    "isIdle": esp32_NinaController_isIdle__P141289,
    "isConnected": esp32_NinaController_isConnected__P141288,
    "connect": esp32_NinaController_connect__P141290,
    "MACaddress": esp32_NinaController_MACaddress__P141273,
    "ping": esp32_NinaController_ping__P141293,
  },
  iface: {
    "_socknum_ll": null,
    "set/_socknum_ll": null,
    "_locked": null,
    "set/_locked": null,
    "wasConnected": null,
    "set/wasConnected": null,
    "_spi": null,
    "set/_spi": null,
    "_cs": null,
    "set/_cs": null,
    "_busy": null,
    "set/_busy": null,
    "_reset": null,
    "set/_reset": null,
    "_gpio0": null,
    "set/_gpio0": null,
    "reset": esp32_NinaController_reset__P141260,
    "readByte": esp32_NinaController_readByte__P141261,
    "checkData": esp32_NinaController_checkData__P141262,
    "waitSPIChar": esp32_NinaController_waitSPIChar__P141263,
    "waitForReady": esp32_NinaController_waitForReady__P141264,
    "_sendCommand": esp32_NinaController__sendCommand__P141265,
    "spiTransfer": esp32_NinaController_spiTransfer__P141266,
    "_waitResponseCmd": esp32_NinaController__waitResponseCmd__P141267,
    "lock": esp32_NinaController_lock__P141268,
    "unlock": esp32_NinaController_unlock__P141269,
    "sendCommandGetResponse": esp32_NinaController_sendCommandGetResponse__P141270,
    "status": esp32_NinaController_status__P141271,
    "firmwareVersion": esp32_NinaController_firmwareVersion__P141272,
    "MACaddress": esp32_NinaController_MACaddress__P141273,
    "startScanNetworks": esp32_NinaController_startScanNetworks__P141274,
    "getScanNetworks": esp32_NinaController_getScanNetworks__P141275,
    "scanNetworks": esp32_NinaController_scanNetworks__P141276,
    "wifiSetNetwork": esp32_NinaController_wifiSetNetwork__P141277,
    "wifiSetPassphrase": esp32_NinaController_wifiSetPassphrase__P141278,
    "isConnected": esp32_NinaController_isConnected__P141288,
    "isIdle": esp32_NinaController_isIdle__P141289,
    "connect": esp32_NinaController_connect__P141290,
    "connectAP": esp32_NinaController_connectAP__P141291,
    "hostbyName": esp32_NinaController_hostbyName__P141292,
    "ping": esp32_NinaController_ping__P141293,
    "getTemperature": esp32_NinaController_getTemperature__P141304,
  },
});
const control_PollEvent__C140811_VT = mkVTable({
  name: "PollEvent",
  numFields: 6,
  classNo: 19,
  lastSubtypeNo: 19,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "eid": null,
    "set/eid": null,
    "vid": null,
    "set/vid": null,
    "start": null,
    "set/start": null,
    "timeOut": null,
    "set/timeOut": null,
    "condition": null,
    "set/condition": null,
    "once": null,
    "set/once": null,
  },
});
const control_EventContext__C140871_VT = mkVTable({
  name: "EventContext",
  numFields: 9,
  classNo: 20,
  lastSubtypeNo: 20,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "handlers": null,
    "set/handlers": null,
    "frameCallbacks": null,
    "set/frameCallbacks": null,
    "frameWorker": null,
    "set/frameWorker": null,
    "framesInSample": null,
    "set/framesInSample": null,
    "timeInSample": null,
    "set/timeInSample": null,
    "deltaTimeMillis": null,
    "set/deltaTimeMillis": null,
    "prevTimeMillis": null,
    "set/prevTimeMillis": null,
    "idleCallbacks": null,
    "set/idleCallbacks": null,
    "runningCallbacks": null,
    "set/runningCallbacks": null,
    "registerHandler": control_EventContext_registerHandler__P140878,
  },
});
const control_EventHandler__C140866_VT = mkVTable({
  name: "EventHandler",
  numFields: 4,
  classNo: 21,
  lastSubtypeNo: 21,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "src": null,
    "set/src": null,
    "value": null,
    "set/value": null,
    "handler": null,
    "set/handler": null,
    "flags": null,
    "set/flags": null,
    "register": control_EventHandler_register__P140867,
  },
});
const net_AccessPoint__C141086_VT = mkVTable({
  name: "AccessPoint",
  numFields: 3,
  classNo: 22,
  lastSubtypeNo: 22,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "rssi": null,
    "set/rssi": null,
    "encryption": null,
    "set/encryption": null,
    "ssid": null,
    "set/ssid": null,
  },
});
const settings_SecretStore__C141027_VT = mkVTable({
  name: "SecretStore",
  numFields: 1,
  classNo: 23,
  lastSubtypeNo: 23,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "key": null,
    "set/key": null,
    "readSecret": settings_SecretStore_readSecret__P141030,
    "readSecrets": settings_SecretStore_readSecrets__P141032,
  },
});
const JSON_Parser__C140848_VT = mkVTable({
  name: "Parser",
  numFields: 3,
  classNo: 24,
  lastSubtypeNo: 24,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "ptr": null,
    "set/ptr": null,
    "s": null,
    "set/s": null,
    "errorMsg": null,
    "set/errorMsg": null,
    "error": JSON_Parser_error__P140849,
    "skipWS": JSON_Parser_skipWS__P140850,
    "nextChar": JSON_Parser_nextChar__P140851,
    "doString": JSON_Parser_doString__P140852,
    "doArray": JSON_Parser_doArray__P140853,
    "doObject": JSON_Parser_doObject__P140854,
    "doNumber": JSON_Parser_doNumber__P140855,
    "checkKw": JSON_Parser_checkKw__P140856,
    "value": JSON_Parser_value__P140857,
  },
});

const breakpoints = setupDebugger(1, ["_defaultController___141122"])

return _main___P140610
})
